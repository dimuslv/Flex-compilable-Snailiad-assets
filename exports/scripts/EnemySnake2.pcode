package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   
   public class EnemySnake2 extends Enemy
   {
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 16;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 450;
      
      private static const DEFENSE:int = 10;
      
      private static const OFFENSE:int = 4;
      
      private static const WEAPON_SPEED:Number = 80;
      
      private static const MOVE_TIMEOUT:Number = 1.2;
      
      private static const SPEED:Number = 240;
      
      private static const SHOT_TIMEOUT:Number = 1.2;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 8
      maxscopedepth 9
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"80"),"IMG_WIDTH")
      pushbyte 16
      initproperty QName(PrivateNamespace(null,"80"),"IMG_WIDTH")
      findproperty QName(PrivateNamespace(null,"80"),"IMG_HEIGHT")
      pushbyte 16
      initproperty QName(PrivateNamespace(null,"80"),"IMG_HEIGHT")
      findproperty QName(PrivateNamespace(null,"80"),"IMG_OFS_X")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"80"),"IMG_OFS_X")
      findproperty QName(PrivateNamespace(null,"80"),"IMG_OFS_Y")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"80"),"IMG_OFS_Y")
      findproperty QName(PrivateNamespace(null,"80"),"MAX_HP")
      pushshort 450
      initproperty QName(PrivateNamespace(null,"80"),"MAX_HP")
      findproperty QName(PrivateNamespace(null,"80"),"DEFENSE")
      pushbyte 10
      initproperty QName(PrivateNamespace(null,"80"),"DEFENSE")
      findproperty QName(PrivateNamespace(null,"80"),"OFFENSE")
      pushbyte 4
      initproperty QName(PrivateNamespace(null,"80"),"OFFENSE")
      findproperty QName(PrivateNamespace(null,"80"),"WEAPON_SPEED")
      pushbyte 80
      initproperty QName(PrivateNamespace(null,"80"),"WEAPON_SPEED")
      findproperty QName(PrivateNamespace(null,"80"),"MOVE_TIMEOUT")
      pushdouble 1.2
      initproperty QName(PrivateNamespace(null,"80"),"MOVE_TIMEOUT")
      findproperty QName(PrivateNamespace(null,"80"),"SPEED")
      pushshort 240
      initproperty QName(PrivateNamespace(null,"80"),"SPEED")
      findproperty QName(PrivateNamespace(null,"80"),"SHOT_TIMEOUT")
      pushdouble 1.2
      initproperty QName(PrivateNamespace(null,"80"),"SHOT_TIMEOUT")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var REACT_DISTANCE:int = 240;
      
      private var moveTimeout:Number = 0;
      
      private var shotTimeout:Number = 1.2;
      
      public function EnemySnake2(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns null
         
         body
         maxstack 6
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"80"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"80"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"80"),"OFFENSE")
         constructsuper 5
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemySnake2")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"80"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"80"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"80"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"80"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"80"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"80"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlex QName(PrivateNamespace(null,"80"),"MOVE_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"80"),"moveTimeout")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         pushbyte 1
         newarray 2
         pushbyte 10
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"acceleration")
         pushshort 1200
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         getlex QName(PrivateNamespace(null,"80"),"SPEED")
         pushbyte 2
         multiply
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function shoot(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"shoot")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"EnemyBullet")
         setlocal2
         getlex QName(PrivateNamespace(null,"80"),"WEAPON_SPEED")
         convert_d
         setlocal3
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"cos"), 1
         negate
         getlocal3
         multiply
         convert_d
         setlocal 4
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         callproperty QName(PackageNamespace(""),"sin"), 1
         negate
         getlocal3
         multiply
         convert_d
         setlocal 5
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs0043
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_insaneMode")
         convert_b
         ofs0043:
         iffalse ofs007a
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"enemyBulletPool")
         pushbyte 4
         callproperty QName(PackageNamespace(""),"getBullet"), 1
         coerce QName(PackageNamespace(""),"EnemyBullet")
         setlocal2
         getlocal2
         iffalse ofs007a
         getlocal2
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         add
         getlocal 4
         pushdouble 1.3
         multiply
         getlocal 5
         pushdouble 1.3
         multiply
         callpropvoid QName(PackageNamespace(""),"shoot"), 4
         ofs007a:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0018
         returnvoid
         ofs0018:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs00c9
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"80"),"moveTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"80"),"moveTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"80"),"moveTimeout")
         pushbyte 0
         lessthan
         dup
         iffalse ofs0056
         pop
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         callproperty QName(PackageNamespace(""),"abs"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"80"),"REACT_DISTANCE")
         lessthan
         ofs0056:
         iffalse ofs0084
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs0075
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PrivateNamespace(null,"80"),"SPEED")
         negate
         setproperty QName(PackageNamespace(""),"x")
         jump ofs007d
         ofs0075:
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PrivateNamespace(null,"80"),"SPEED")
         setproperty QName(PackageNamespace(""),"x")
         ofs007d:
         getlocal0
         getlex QName(PrivateNamespace(null,"80"),"MOVE_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"80"),"moveTimeout")
         ofs0084:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"80"),"shotTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"80"),"shotTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"80"),"shotTimeout")
         pushbyte 0
         ifnle ofs00c9
         getlocal0
         getlex QName(PrivateNamespace(null,"80"),"SHOT_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"80"),"shotTimeout")
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         subtract
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         subtract
         callproperty QName(PackageNamespace(""),"atan2"), 2
         convert_d
         setlocal1
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"shoot"), 1
         ofs00c9:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs00dd
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs00dd:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs00f1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs00f1:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushdouble -0.1
         multiply
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitSide(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitSide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 8

code
getlocal0
pushscope
findpropstrict Multiname("EnemySnake2",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
newclass 150
popscope
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"EnemySnake2")
returnvoid
end ; code
end ; body
end ; method

