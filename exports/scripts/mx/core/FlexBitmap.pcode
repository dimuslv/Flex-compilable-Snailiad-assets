package mx.core
{
   import flash.display.Bitmap;
   import flash.display.BitmapData;
   import mx.utils.NameUtil;
   
   use namespace mx_internal;
   
   public class FlexBitmap extends Bitmap
   {
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal0
      pushscope
      findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      pushstring "4.1.0.16076"
      initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public function FlexBitmap(param1:BitmapData = null, param2:String = "auto", param3:Boolean = false)
      {
         method
         name null
         flag HAS_OPTIONAL
         flag NEED_ACTIVATION
         param QName(PackageNamespace("flash.display"),"BitmapData")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional Null()
         optional Utf8("auto")
         optional False()
         returns null
         
         body
         maxstack 4
         localcount 6
         initscopedepth 8
         maxscopedepth 13
         trait slot QName(PackageInternalNs("mx.core"),"param1")
         slotid 1
         type QName(PackageNamespace("flash.display"),"BitmapData")
         value Null()
         end ; trait
         trait slot QName(PackageInternalNs("mx.core"),"param2")
         slotid 2
         type QName(PackageNamespace(""),"String")
         value Utf8("auto")
         end ; trait
         trait slot QName(PackageInternalNs("mx.core"),"param3")
         slotid 3
         type QName(PackageNamespace(""),"Boolean")
         value False()
         end ; trait
         trait slot QName(PackageInternalNs("mx.core"),"bitmapData")
         slotid 4
         type QName(PackageNamespace("flash.display"),"BitmapData")
         end ; trait
         trait slot QName(PackageInternalNs("mx.core"),"pixelSnapping")
         slotid 5
         type QName(PackageNamespace(""),"String")
         end ; trait
         trait slot QName(PackageInternalNs("mx.core"),"smoothing")
         slotid 6
         type QName(PackageNamespace(""),"Boolean")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal 4
         pushscope
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         getlocal2
         setslot 2
         getscopeobject 1
         getlocal3
         setslot 3
         getscopeobject 1
         getscopeobject 1
         getslot 1
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setslot 4
         getscopeobject 1
         getscopeobject 1
         getslot 2
         coerce_s
         setslot 5
         getscopeobject 1
         getscopeobject 1
         getslot 3
         convert_b
         setslot 6
         getlocal0
         getscopeobject 1
         getslot 4
         getscopeobject 1
         getslot 5
         getscopeobject 1
         getslot 6
         constructsuper 3
         ofs0041:
         findproperty QName(PackageNamespace(""),"name")
         getlex QName(PackageNamespace("mx.utils"),"NameUtil")
         getlocal0
         callproperty QName(PackageNamespace(""),"createUniqueName"), 1
         initproperty QName(PackageNamespace(""),"name")
         ofs004f:
         jump ofs0065
         ofs0053:
         getlocal0
         pushscope
         getlocal 4
         pushscope
         newcatch 0
         dup
         setlocal 5
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 5
         ofs0065:
         returnvoid
         end ; code
         try from ofs0041 to ofs004f target ofs0053 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      override public function toString() : String
      {
         trait method QName(PackageNamespace(""),"toString")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.utils"),"NameUtil")
         getlocal0
         callproperty QName(PackageNamespace(""),"displayObjectToString"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 6

code
getlocal0
pushscope
findpropstrict Multiname("FlexBitmap",[PackageNamespace("mx.core")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
pushscope
getlex QName(PackageNamespace("flash.display"),"DisplayObject")
pushscope
getlex QName(PackageNamespace("flash.display"),"Bitmap")
pushscope
getlex QName(PackageNamespace("flash.display"),"Bitmap")
newclass 11
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace("mx.core"),"FlexBitmap")
returnvoid
end ; code
end ; body
end ; method

