package mx.core
{
   import flash.accessibility.Accessibility;
   import flash.accessibility.AccessibilityProperties;
   import flash.display.BlendMode;
   import flash.display.DisplayObject;
   import flash.display.DisplayObjectContainer;
   import flash.display.GradientType;
   import flash.display.Graphics;
   import flash.display.InteractiveObject;
   import flash.display.Loader;
   import flash.display.Shader;
   import flash.display.Sprite;
   import flash.display.Stage;
   import flash.events.Event;
   import flash.events.EventPhase;
   import flash.events.FocusEvent;
   import flash.events.IEventDispatcher;
   import flash.events.KeyboardEvent;
   import flash.geom.ColorTransform;
   import flash.geom.Matrix;
   import flash.geom.Matrix3D;
   import flash.geom.PerspectiveProjection;
   import flash.geom.Point;
   import flash.geom.Rectangle;
   import flash.geom.Transform;
   import flash.geom.Vector3D;
   import flash.system.ApplicationDomain;
   import flash.system.Capabilities;
   import flash.text.TextFormatAlign;
   import flash.text.TextLineMetrics;
   import flash.ui.Keyboard;
   import flash.utils.getQualifiedClassName;
   import mx.automation.IAutomationObject;
   import mx.binding.BindingManager;
   import mx.controls.IFlexContextMenu;
   import mx.effects.EffectManager;
   import mx.effects.IEffect;
   import mx.effects.IEffectInstance;
   import mx.events.ChildExistenceChangedEvent;
   import mx.events.DynamicEvent;
   import mx.events.EffectEvent;
   import mx.events.FlexEvent;
   import mx.events.MoveEvent;
   import mx.events.PropertyChangeEvent;
   import mx.events.ResizeEvent;
   import mx.events.StateChangeEvent;
   import mx.events.ValidationResultEvent;
   import mx.filters.BaseFilter;
   import mx.filters.IBitmapFilter;
   import mx.geom.RoundedRectangle;
   import mx.geom.Transform;
   import mx.geom.TransformOffsets;
   import mx.graphics.shaderClasses.ColorBurnShader;
   import mx.graphics.shaderClasses.ColorDodgeShader;
   import mx.graphics.shaderClasses.ColorShader;
   import mx.graphics.shaderClasses.ExclusionShader;
   import mx.graphics.shaderClasses.HueShader;
   import mx.graphics.shaderClasses.LuminosityShader;
   import mx.graphics.shaderClasses.SaturationShader;
   import mx.graphics.shaderClasses.SoftLightShader;
   import mx.managers.CursorManager;
   import mx.managers.ICursorManager;
   import mx.managers.IFocusManager;
   import mx.managers.IFocusManagerComponent;
   import mx.managers.IFocusManagerContainer;
   import mx.managers.ILayoutManagerClient;
   import mx.managers.ISystemManager;
   import mx.managers.IToolTipManagerClient;
   import mx.managers.SystemManager;
   import mx.managers.SystemManagerGlobals;
   import mx.managers.ToolTipManager;
   import mx.resources.IResourceManager;
   import mx.resources.ResourceManager;
   import mx.states.State;
   import mx.states.Transition;
   import mx.styles.CSSStyleDeclaration;
   import mx.styles.IAdvancedStyleClient;
   import mx.styles.ISimpleStyleClient;
   import mx.styles.IStyleClient;
   import mx.styles.IStyleManager2;
   import mx.styles.StyleManager;
   import mx.styles.StyleProtoChain;
   import mx.utils.ColorUtil;
   import mx.utils.GraphicsUtil;
   import mx.utils.MatrixUtil;
   import mx.utils.NameUtil;
   import mx.utils.StringUtil;
   import mx.validators.IValidatorListener;
   import mx.validators.ValidationResult;
   
   use namespace mx_internal;
   
   public class UIComponent extends FlexSprite implements IAutomationObject, IChildList, IConstraintClient, IDeferredInstantiationUIComponent, IFlexDisplayObject, IFlexModule, IInvalidating, ILayoutManagerClient, IPropertyChangeNotifier, IRepeaterClient, IStateClient, IAdvancedStyleClient, IToolTipManagerClient, IUIComponent, IValidatorListener, IVisualElement
   {
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      public static const DEFAULT_MEASURED_WIDTH:Number = 160;
      
      public static const DEFAULT_MEASURED_MIN_WIDTH:Number = 40;
      
      public static const DEFAULT_MEASURED_HEIGHT:Number = 22;
      
      public static const DEFAULT_MEASURED_MIN_HEIGHT:Number = 22;
      
      public static const DEFAULT_MAX_WIDTH:Number = 10000;
      
      public static const DEFAULT_MAX_HEIGHT:Number = 10000;
      
      mx_internal static var createAccessibilityImplementation:Function;
      
      private static var noEmbeddedFonts:Boolean;
      
      private static var _embeddedFontRegistry:IEmbeddedFontRegistry;
      
      private static var compositeEffectType:Class;
      
      private static var compositeEffectLoaded:Boolean = false;
      
      mx_internal static var dispatchEventHook:Function;
      
      private static var fakeMouseX:QName;
      
      private static var fakeMouseY:QName;
      
      private static var xformPt:Point;
      
      method
      name null
      returns null
      
      body
      maxstack 4
      localcount 1
      initscopedepth 9
      maxscopedepth 10
      
      code
      getlocal0
      pushscope
      findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      pushstring "4.1.0.16076"
      initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      findproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_WIDTH")
      pushshort 160
      initproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_WIDTH")
      findproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_MIN_WIDTH")
      pushbyte 40
      initproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_MIN_WIDTH")
      findproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_HEIGHT")
      pushbyte 22
      initproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_HEIGHT")
      findproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_MIN_HEIGHT")
      pushbyte 22
      initproperty QName(PackageNamespace(""),"DEFAULT_MEASURED_MIN_HEIGHT")
      findproperty QName(PackageNamespace(""),"DEFAULT_MAX_WIDTH")
      pushshort 10000
      initproperty QName(PackageNamespace(""),"DEFAULT_MAX_WIDTH")
      findproperty QName(PackageNamespace(""),"DEFAULT_MAX_HEIGHT")
      pushshort 10000
      initproperty QName(PackageNamespace(""),"DEFAULT_MAX_HEIGHT")
      findproperty QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectLoaded")
      pushfalse
      setproperty QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectLoaded")
      findproperty QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseX")
      findpropstrict QName(PackageNamespace(""),"QName")
      getlex QName(PackageNamespace("mx.core"),"mx_internal")
      pushstring "_mouseX"
      constructprop QName(PackageNamespace(""),"QName"), 2
      setproperty QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseX")
      findproperty QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseY")
      findpropstrict QName(PackageNamespace(""),"QName")
      getlex QName(PackageNamespace("mx.core"),"mx_internal")
      pushstring "_mouseY"
      constructprop QName(PackageNamespace(""),"QName"), 2
      setproperty QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseY")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var deferredSetStyles:Object;
      
      private var listeningForRender:Boolean = false;
      
      private var methodQueue:Array;
      
      private var hasFocusRect:Boolean = false;
      
      private var transitionFromState:String;
      
      private var transitionToState:String;
      
      private var parentChangedFlag:Boolean = false;
      
      private var _initialized:Boolean = false;
      
      private var _processedDescriptors:Boolean = false;
      
      private var _updateCompletePendingFlag:Boolean = false;
      
      mx_internal var invalidatePropertiesFlag:Boolean = false;
      
      mx_internal var invalidateSizeFlag:Boolean = false;
      
      mx_internal var invalidateDisplayListFlag:Boolean = false;
      
      mx_internal var setActualSizeCalled:Boolean = false;
      
      private var oldX:Number = 0;
      
      private var oldY:Number = 0;
      
      private var oldWidth:Number = 0;
      
      private var oldHeight:Number = 0;
      
      private var oldMinWidth:Number;
      
      private var oldMinHeight:Number;
      
      private var oldExplicitWidth:Number;
      
      private var oldExplicitHeight:Number;
      
      private var oldScaleX:Number = 1;
      
      private var oldScaleY:Number = 1;
      
      private var hasFontContextBeenSaved:Boolean = false;
      
      private var oldEmbeddedFontContext:IFlexModuleFactory = null;
      
      mx_internal var _layoutFeatures:AdvancedLayoutFeatures;
      
      private var _transform:flash.geom.Transform;
      
      private var cachedTextFormat:UITextFormat;
      
      mx_internal var effectOverlay:UIComponent;
      
      mx_internal var effectOverlayColor:uint;
      
      mx_internal var effectOverlayReferenceCount:int = 0;
      
      mx_internal var saveBorderColor:Boolean = true;
      
      mx_internal var origBorderColor:Number;
      
      mx_internal var automaticRadioButtonGroups:Object;
      
      private var _usingBridge:int = -1;
      
      mx_internal var _owner:DisplayObjectContainer;
      
      mx_internal var _parent:DisplayObjectContainer;
      
      mx_internal var _width:Number;
      
      mx_internal var _height:Number;
      
      private var _scaleX:Number = 1;
      
      private var _scaleY:Number = 1;
      
      private var _visible:Boolean = true;
      
      private var _alpha:Number = 1;
      
      private var _blendMode:String = "normal";
      
      private var blendShaderChanged:Boolean;
      
      private var blendModeChanged:Boolean;
      
      private var _enabled:Boolean = false;
      
      private var _filters:Array;
      
      private var _designLayer:DesignLayer;
      
      private var _tweeningProperties:Array;
      
      private var _focusManager:IFocusManager;
      
      private var _resourceManager:IResourceManager;
      
      private var _systemManager:ISystemManager;
      
      private var _systemManagerDirty:Boolean = false;
      
      private var _nestLevel:int = 0;
      
      mx_internal var _descriptor:UIComponentDescriptor;
      
      mx_internal var _document:Object;
      
      mx_internal var _documentDescriptor:UIComponentDescriptor;
      
      private var _id:String;
      
      private var _moduleFactory:IFlexModuleFactory;
      
      private var _inheritingStyles:Object;
      
      private var _nonInheritingStyles:Object;
      
      private var _styleDeclaration:CSSStyleDeclaration;
      
      private var _cachePolicy:String = "auto";
      
      private var cacheAsBitmapCount:int = 0;
      
      private var _focusPane:Sprite;
      
      private var _focusEnabled:Boolean = true;
      
      private var _hasFocusableChildren:Boolean = false;
      
      private var _mouseFocusEnabled:Boolean = true;
      
      private var _tabFocusEnabled:Boolean = true;
      
      private var _measuredMinWidth:Number = 0;
      
      private var _measuredMinHeight:Number = 0;
      
      private var _measuredWidth:Number = 0;
      
      private var _measuredHeight:Number = 0;
      
      private var _percentWidth:Number;
      
      private var _percentHeight:Number;
      
      mx_internal var _explicitMinWidth:Number;
      
      mx_internal var _explicitMinHeight:Number;
      
      mx_internal var _explicitMaxWidth:Number;
      
      mx_internal var _explicitMaxHeight:Number;
      
      private var _explicitWidth:Number;
      
      private var _explicitHeight:Number;
      
      private var _hasComplexLayoutMatrix:Boolean = false;
      
      private var _includeInLayout:Boolean = true;
      
      mx_internal var oldLayoutDirection:String = "ltr";
      
      private var _instanceIndices:Array;
      
      private var _repeaters:Array;
      
      private var _repeaterIndices:Array;
      
      private var _currentState:String;
      
      private var requestedCurrentState:String;
      
      private var playStateTransition:Boolean = true;
      
      private var _currentStateChanged:Boolean;
      
      private var _currentStateDeferred:String;
      
      private var _states:Array;
      
      private var _currentTransition:Transition;
      
      private var _transitions:Array;
      
      private var _flexContextMenu:IFlexContextMenu;
      
      private var _styleName:Object;
      
      mx_internal var _toolTip:String;
      
      private var _uid:String;
      
      private var _isPopUp:Boolean;
      
      private var _automationDelegate:IAutomationObject;
      
      private var _automationName:String = null;
      
      private var _showInAutomationHierarchy:Boolean = true;
      
      mx_internal var _errorString:String = "";
      
      private var errorArray:Array;
      
      private var errorObjectArray:Array;
      
      private var errorStringChanged:Boolean = false;
      
      private var _validationSubField:String;
      
      private var lastUnscaledWidth:Number;
      
      private var lastUnscaledHeight:Number;
      
      mx_internal var _effectsStarted:Array;
      
      mx_internal var _affectedProperties:Object;
      
      private var _isEffectStarted:Boolean = false;
      
      private var preventDrawFocus:Boolean = false;
      
      private var _endingEffectInstances:Array;
      
      private var _maintainProjectionCenter:Boolean = false;
      
      public function UIComponent()
      {
         method
         name null
         returns null
         
         body
         maxstack 6
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"methodQueue")
         getlocal0
         getlex QName(PackageNamespace("mx.resources"),"ResourceManager")
         callproperty QName(PackageNamespace(""),"getInstance"), 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_resourceManager")
         getlocal0
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getproperty QName(PackageNamespace(""),"STYLE_UNINITIALIZED")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getlocal0
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getproperty QName(PackageNamespace(""),"STYLE_UNINITIALIZED")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_states")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_transitions")
         getlocal0
         newarray 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getlocal0
         newobject 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_endingEffectInstances")
         getlocal0
         constructsuper 0
         findproperty QName(PackageNamespace(""),"focusRect")
         pushfalse
         initproperty QName(PackageNamespace(""),"focusRect")
         findproperty QName(PackageNamespace(""),"tabEnabled")
         getlocal0
         getlex QName(PackageNamespace("mx.managers"),"IFocusManagerComponent")
         istypelate
         initproperty QName(PackageNamespace(""),"tabEnabled")
         getlocal0
         getlocal0
         getlex QName(PackageNamespace("mx.managers"),"IFocusManagerComponent")
         istypelate
         initproperty QName(PackageNamespace(""),"tabFocusEnabled")
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"enabled")
         getlocal0
         pushfalse
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"ADDED")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"addedHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"REMOVED")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"removedHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         getlocal0
         getlex QName(PackageNamespace("mx.managers"),"IFocusManagerComponent")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"FocusEvent")
         getproperty QName(PackageNamespace(""),"FOCUS_IN")
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"focusInHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"FocusEvent")
         getproperty QName(PackageNamespace(""),"FOCUS_OUT")
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"focusOutHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"KeyboardEvent")
         getproperty QName(PackageNamespace(""),"KEY_DOWN")
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"keyDownHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"KeyboardEvent")
         getproperty QName(PackageNamespace(""),"KEY_UP")
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"keyUpHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         ofs0:
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"resourcesChanged"), 0
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"resourceManager")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"CHANGE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"resourceManager_changeHandler")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 5
         getlocal0
         getlocal0
         getsuper QName(PackageNamespace(""),"width")
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         getlocal0
         getlocal0
         getsuper QName(PackageNamespace(""),"height")
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal static function get embeddedFontRegistry() : IEmbeddedFontRegistry
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"embeddedFontRegistry")
         flag FINAL
         dispid 3
         method
         name null
         flag NEED_ACTIVATION
         returns QName(PackageNamespace("mx.core"),"IEmbeddedFontRegistry")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 15
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal1
         pushscope
         getlex QName(PrivateNamespace(null,"#UIComponent"),"_embeddedFontRegistry")
         not
         dup
         iffalse ofs0
         pop
         getlex QName(PrivateNamespace(null,"#UIComponent"),"noEmbeddedFonts")
         not
         ofs0:
         iffalse ofs1
         ofs2:
         findproperty QName(PrivateNamespace(null,"#UIComponent"),"_embeddedFontRegistry")
         findpropstrict QName(PackageNamespace("mx.core"),"IEmbeddedFontRegistry")
         getlex QName(PackageNamespace("mx.core"),"Singleton")
         pushstring "mx.core::IEmbeddedFontRegistry"
         callproperty QName(PackageNamespace(""),"getInstance"), 1
         callproperty QName(PackageNamespace("mx.core"),"IEmbeddedFontRegistry"), 1
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"_embeddedFontRegistry")
         ofs3:
         jump ofs1
         ofs4:
         getlocal0
         pushscope
         getlocal1
         pushscope
         newcatch 0
         dup
         setlocal2
         dup
         pushscope
         swap
         setslot 1
         findproperty QName(PrivateNamespace(null,"#UIComponent"),"noEmbeddedFonts")
         pushtrue
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"noEmbeddedFonts")
         popscope
         kill 2
         ofs1:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"_embeddedFontRegistry")
         returnvalue
         end ; code
         try from ofs2 to ofs3 target ofs4 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      public static function suspendBackgroundProcessing() : void
      {
         trait method QName(PackageNamespace(""),"suspendBackgroundProcessing")
         flag FINAL
         dispid 4
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         dup
         setlocal1
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterSuspendCount")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterSuspendCount")
         kill 2
         kill 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function resumeBackgroundProcessing() : void
      {
         trait method QName(PackageNamespace(""),"resumeBackgroundProcessing")
         flag FINAL
         dispid 5
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterSuspendCount")
         pushbyte 0
         ifngt ofs0
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         dup
         setlocal2
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterSuspendCount")
         decrement_i
         setlocal3
         getlocal2
         getlocal3
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterSuspendCount")
         kill 3
         kill 2
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterSuspendCount")
         pushbyte 0
         ifne ofs0
         getlex QName(PackageNamespace("mx.managers"),"SystemManagerGlobals")
         getproperty QName(PackageNamespace(""),"topLevelSystemManagers")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlocal1
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         convert_b
         ofs1:
         iffalse ofs0
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         callpropvoid QName(PackageNamespace(""),"invalidate"), 0
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get initialized() : Boolean
      {
         trait getter QName(PackageNamespace(""),"initialized")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_initialized")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set initialized(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"initialized")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_initialized")
         getlocal1
         iffalse ofs0
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_visible")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setVisible"), 2
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"CREATION_COMPLETE")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get processedDescriptors() : Boolean
      {
         trait getter QName(PackageNamespace(""),"processedDescriptors")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_processedDescriptors")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set processedDescriptors(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"processedDescriptors")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_processedDescriptors")
         getlocal1
         iffalse ofs0
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"INITIALIZE")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get updateCompletePendingFlag() : Boolean
      {
         trait getter QName(PackageNamespace(""),"updateCompletePendingFlag")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_updateCompletePendingFlag")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set updateCompletePendingFlag(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"updateCompletePendingFlag")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_updateCompletePendingFlag")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get accessibilityEnabled() : Boolean
      {
         trait getter QName(PackageNamespace(""),"accessibilityEnabled")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iffalse ofs0
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getproperty QName(PackageNamespace(""),"silent")
         not
         jump ofs1
         ofs0:
         pushtrue
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set accessibilityEnabled(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"accessibilityEnabled")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("flash.system"),"Capabilities")
         getproperty QName(PackageNamespace(""),"hasAccessibility")
         iftrue ofs0
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iftrue ofs1
         findproperty QName(PackageNamespace(""),"accessibilityProperties")
         findpropstrict QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties")
         constructprop QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties"), 0
         initproperty QName(PackageNamespace(""),"accessibilityProperties")
         ofs1:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getlocal1
         not
         setproperty QName(PackageNamespace(""),"silent")
         getlex QName(PackageNamespace("flash.accessibility"),"Accessibility")
         callpropvoid QName(PackageNamespace(""),"updateProperties"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get accessibilityName() : String
      {
         trait getter QName(PackageNamespace(""),"accessibilityName")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iffalse ofs0
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getproperty QName(PackageNamespace(""),"name")
         coerce_s
         jump ofs1
         ofs0:
         pushstring ""
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set accessibilityName(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"accessibilityName")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("flash.system"),"Capabilities")
         getproperty QName(PackageNamespace(""),"hasAccessibility")
         iftrue ofs0
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iftrue ofs1
         findproperty QName(PackageNamespace(""),"accessibilityProperties")
         findpropstrict QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties")
         constructprop QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties"), 0
         initproperty QName(PackageNamespace(""),"accessibilityProperties")
         ofs1:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getlocal1
         setproperty QName(PackageNamespace(""),"name")
         getlex QName(PackageNamespace("flash.accessibility"),"Accessibility")
         callpropvoid QName(PackageNamespace(""),"updateProperties"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get accessibilityDescription() : String
      {
         trait getter QName(PackageNamespace(""),"accessibilityDescription")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iffalse ofs0
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getproperty QName(PackageNamespace(""),"description")
         coerce_s
         jump ofs1
         ofs0:
         pushstring ""
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set accessibilityDescription(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"accessibilityDescription")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("flash.system"),"Capabilities")
         getproperty QName(PackageNamespace(""),"hasAccessibility")
         iftrue ofs0
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iftrue ofs1
         findproperty QName(PackageNamespace(""),"accessibilityProperties")
         findpropstrict QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties")
         constructprop QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties"), 0
         initproperty QName(PackageNamespace(""),"accessibilityProperties")
         ofs1:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getlocal1
         setproperty QName(PackageNamespace(""),"description")
         getlex QName(PackageNamespace("flash.accessibility"),"Accessibility")
         callpropvoid QName(PackageNamespace(""),"updateProperties"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get accessibilityShortcut() : String
      {
         trait getter QName(PackageNamespace(""),"accessibilityShortcut")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iffalse ofs0
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getproperty QName(PackageNamespace(""),"shortcut")
         coerce_s
         jump ofs1
         ofs0:
         pushstring ""
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set accessibilityShortcut(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"accessibilityShortcut")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("flash.system"),"Capabilities")
         getproperty QName(PackageNamespace(""),"hasAccessibility")
         iftrue ofs0
         returnvoid
         ofs0:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         iftrue ofs1
         findproperty QName(PackageNamespace(""),"accessibilityProperties")
         findpropstrict QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties")
         constructprop QName(PackageNamespace("flash.accessibility"),"AccessibilityProperties"), 0
         initproperty QName(PackageNamespace(""),"accessibilityProperties")
         ofs1:
         getlex QName(PackageNamespace(""),"accessibilityProperties")
         getlocal1
         setproperty QName(PackageNamespace(""),"shortcut")
         getlex QName(PackageNamespace("flash.accessibility"),"Accessibility")
         callpropvoid QName(PackageNamespace(""),"updateProperties"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function get usingBridge() : Boolean
      {
         trait getter QName(PrivateNamespace(null,"#UIComponent"),"usingBridge")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_usingBridge")
         pushbyte 0
         ifne ofs0
         pushfalse
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_usingBridge")
         pushbyte 1
         ifne ofs1
         pushtrue
         returnvalue
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         iftrue ofs2
         pushfalse
         returnvalue
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         pushstring "mx.managers.IMarshallPlanSystemManager"
         callproperty QName(Namespace("mx.core:IFlexModuleFactory"),"getImplementation"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal1
         getlocal1
         iftrue ofs3
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_usingBridge")
         pushfalse
         returnvalue
         ofs3:
         getlocal1
         callproperty Multiname("useSWFBridge",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 0
         iffalse ofs4
         getlocal0
         pushbyte 1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_usingBridge")
         pushtrue
         returnvalue
         ofs4:
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_usingBridge")
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get owner() : DisplayObjectContainer
      {
         trait getter QName(PackageNamespace(""),"owner")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_owner")
         iffalse ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_owner")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set owner(param1:DisplayObjectContainer) : void
      {
         trait setter QName(PackageNamespace(""),"owner")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_owner")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get parent() : DisplayObjectContainer
      {
         trait getter QName(PackageNamespace(""),"parent")
         flag OVERRIDE
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         returns QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 11
         maxscopedepth 16
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal1
         pushscope
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         iffalse ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         jump ofs2
         ofs1:
         getlocal0
         getsuper QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         ofs2:
         returnvalue
         ofs3:
         jump ofs4
         ofs4:
         getlocal0
         pushscope
         getlocal1
         pushscope
         newcatch 0
         dup
         setlocal2
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 2
         pushnull
         returnvalue
         end ; code
         try from ofs0 to ofs3 target ofs4 type QName(PackageNamespace(""),"SecurityError") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      [Bindable("xChanged")]
      override public function get x() : Number
      {
         trait getter QName(PackageNamespace(""),"x")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "xChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"x")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutX")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set x(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"x")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"x")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutX")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         ofs2:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         convert_b
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         ofs3:
         iffalse ofs4
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childXYChanged"), 0
         ofs4:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "xChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs5
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "xChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("zChanged")]
      override public function get z() : Number
      {
         trait getter QName(PackageNamespace(""),"z")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "zChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"z")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutZ")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set z(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"z")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"z")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutZ")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs2
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs2:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "zChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs3
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "zChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get transformX() : Number
      {
         trait getter QName(PackageNamespace(""),"transformX")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         pushbyte 0
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"transformX")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set transformX(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"transformX")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"transformX")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"transformX")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get transformY() : Number
      {
         trait getter QName(PackageNamespace(""),"transformY")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         pushbyte 0
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"transformY")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set transformY(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"transformY")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"transformY")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"transformY")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get transformZ() : Number
      {
         trait getter QName(PackageNamespace(""),"transformZ")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         pushbyte 0
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"transformZ")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set transformZ(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"transformZ")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"transformZ")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"transformZ")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get rotation() : Number
      {
         trait getter QName(PackageNamespace(""),"rotation")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"rotation")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         getsuper QName(PackageNamespace(""),"rotation")
         convert_d
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutRotationZ")
         convert_d
         ofs2:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set rotation(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"rotation")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"rotation")
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"rotation")
         getlocal1
         ifne ofs1
         returnvoid
         ofs1:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs2
         getlocal0
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal1
         callproperty QName(PackageNamespace(""),"clampRotation"), 1
         setsuper QName(PackageNamespace(""),"rotation")
         jump ofs3
         ofs2:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutRotationZ")
         ofs3:
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get rotationZ() : Number
      {
         trait getter QName(PackageNamespace(""),"rotationZ")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"rotation")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set rotationZ(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"rotationZ")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"rotation")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get rotationX() : Number
      {
         trait getter QName(PackageNamespace(""),"rotationX")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"rotationX")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutRotationX")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set rotationX(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"rotationX")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"rotationX")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutRotationX")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs2
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get rotationY() : Number
      {
         trait getter QName(PackageNamespace(""),"rotationY")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"rotationY")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutRotationY")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set rotationY(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"rotationY")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"rotationY")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutRotationY")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs2
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("yChanged")]
      override public function get y() : Number
      {
         trait getter QName(PackageNamespace(""),"y")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "yChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"y")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutY")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set y(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"y")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"y")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutY")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         ofs2:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         convert_b
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         ofs3:
         iffalse ofs4
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childXYChanged"), 0
         ofs4:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "yChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs5
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "yChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("widthChanged")]
      override public function get width() : Number
      {
         trait getter QName(PackageNamespace(""),"width")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "widthChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set width(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"width")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         getlocal1
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"explicitWidth")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         getlocal1
         ifeq ofs1
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         setproperty QName(PackageNamespace(""),"layoutWidth")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         ofs2:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "widthChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs1
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "widthChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("heightChanged")]
      override public function get height() : Number
      {
         trait getter QName(PackageNamespace(""),"height")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "heightChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set height(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"height")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         getlocal1
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"explicitHeight")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         getlocal1
         ifeq ofs1
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "heightChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs1
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "heightChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("scaleXChanged")]
      override public function get scaleX() : Number
      {
         trait getter QName(PackageNamespace(""),"scaleX")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "scaleXChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleX")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         getsuper QName(PackageNamespace(""),"scaleX")
         convert_d
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutScaleX")
         convert_d
         ofs2:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set scaleX(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"scaleX")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal2
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleX")
         getlocal1
         ifne ofs1
         returnvoid
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleX")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         jump ofs2
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs3
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         convert_d
         jump ofs4
         ofs3:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutScaleX")
         convert_d
         ofs4:
         convert_d
         setlocal2
         getlocal2
         getlocal1
         ifne ofs5
         returnvoid
         ofs5:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs6
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"scaleX")
         jump ofs7
         ofs6:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutScaleX")
         ofs7:
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         ofs2:
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "scaleXChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("scaleYChanged")]
      override public function get scaleY() : Number
      {
         trait getter QName(PackageNamespace(""),"scaleY")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "scaleYChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleY")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         getsuper QName(PackageNamespace(""),"scaleY")
         convert_d
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutScaleY")
         convert_d
         ofs2:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set scaleY(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"scaleY")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal2
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleY")
         getlocal1
         ifne ofs1
         returnvoid
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleY")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         jump ofs2
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs3
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         convert_d
         jump ofs4
         ofs3:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutScaleY")
         convert_d
         ofs4:
         convert_d
         setlocal2
         getlocal2
         getlocal1
         ifne ofs5
         returnvoid
         ofs5:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs6
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"scaleY")
         jump ofs7
         ofs6:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutScaleY")
         ofs7:
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         ofs2:
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "scaleYChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("scaleZChanged")]
      override public function get scaleZ() : Number
      {
         trait getter QName(PackageNamespace(""),"scaleZ")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "scaleZChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"scaleZ")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutScaleZ")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set scaleZ(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"scaleZ")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleZ")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutScaleZ")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs2
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs2:
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "scaleZChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $scaleX() : Number
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$scaleX")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"scaleX")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $scaleX(param1:Number) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$scaleX")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"scaleX")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $scaleY() : Number
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$scaleY")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"scaleY")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $scaleY(param1:Number) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$scaleY")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"scaleY")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("show")]
      [Bindable("hide")]
      override public function get visible() : Boolean
      {
         trait getter QName(PackageNamespace(""),"visible")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "show"
         end ; metadata
         metadata "Bindable"
         item null "hide"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_visible")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set visible(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"visible")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"setVisible"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setVisible(param1:Boolean, param2:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"setVisible")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_visible")
         getlocal0
         getproperty QName(PackageNamespace(""),"initialized")
         iftrue ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"designLayer")
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"designLayer")
         getproperty QName(PackageNamespace(""),"effectiveVisibility")
         not
         ofs1:
         iffalse ofs2
         pushfalse
         setlocal1
         ofs2:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         getlocal1
         ifne ofs3
         returnvoid
         ofs3:
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         getlocal2
         iftrue ofs4
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlocal1
         iffalse ofs5
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"SHOW")
         coerce_s
         jump ofs6
         ofs5:
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"HIDE")
         coerce_s
         ofs6:
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("alphaChanged")]
      override public function get alpha() : Number
      {
         trait getter QName(PackageNamespace(""),"alpha")
         flag OVERRIDE
         flag METADATA
         metadata "Bindable"
         item null "alphaChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_alpha")
         pushshort 256
         multiply
         callproperty QName(PackageNamespace(""),"int"), 1
         pushshort 256
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set alpha(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"alpha")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_alpha")
         getlocal1
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_alpha")
         getlocal0
         getproperty QName(PackageNamespace(""),"designLayer")
         iffalse ofs1
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"designLayer")
         getproperty QName(PackageNamespace(""),"effectiveAlpha")
         multiply
         convert_d
         setlocal1
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$alpha")
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "alphaChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get blendMode() : String
      {
         trait getter QName(PackageNamespace(""),"blendMode")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_blendMode")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set blendMode(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"blendMode")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_blendMode")
         getlocal1
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_blendMode")
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"blendModeChanged")
         getlocal1
         pushstring "colordodge"
         equals
         dup
         iftrue ofs1
         pop
         getlocal1
         pushstring "colorburn"
         equals
         ofs1:
         dup
         iftrue ofs2
         pop
         getlocal1
         pushstring "exclusion"
         equals
         ofs2:
         dup
         iftrue ofs3
         pop
         getlocal1
         pushstring "softlight"
         equals
         ofs3:
         dup
         iftrue ofs4
         pop
         getlocal1
         pushstring "hue"
         equals
         ofs4:
         dup
         iftrue ofs5
         pop
         getlocal1
         pushstring "saturation"
         equals
         ofs5:
         dup
         iftrue ofs6
         pop
         getlocal1
         pushstring "color"
         equals
         ofs6:
         dup
         iftrue ofs7
         pop
         getlocal1
         pushstring "luminosity"
         equals
         ofs7:
         iffalse ofs8
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"blendShaderChanged")
         ofs8:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get doubleClickEnabled() : Boolean
      {
         trait getter QName(PackageNamespace(""),"doubleClickEnabled")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"doubleClickEnabled")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set doubleClickEnabled(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"doubleClickEnabled")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setlocal2
         pushnull
         coerce QName(PackageNamespace("flash.display"),"InteractiveObject")
         setlocal 4
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"doubleClickEnabled")
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IRawChildrenContainer"), 1
         getproperty QName(Namespace("mx.core:IRawChildrenContainer"),"rawChildren")
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setlocal2
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace("mx.core"),"IChildList")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IChildList"), 1
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setlocal2
         ofs1:
         pushbyte 0
         setlocal3
         jump ofs2
         ofs3:
         label
         getlocal2
         getlocal3
         callproperty QName(Namespace("mx.core:IChildList"),"getChildAt"), 1
         getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
         astypelate
         coerce QName(PackageNamespace("flash.display"),"InteractiveObject")
         dup
         setlocal 4
         iffalse ofs4
         getlocal 4
         getlocal1
         setproperty QName(PackageNamespace(""),"doubleClickEnabled")
         ofs4:
         inclocal_i 3
         ofs2:
         getlocal3
         getlocal2
         getproperty QName(Namespace("mx.core:IChildList"),"numChildren")
         iflt ofs3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("enabledChanged")]
      public function get enabled() : Boolean
      {
         trait getter QName(PackageNamespace(""),"enabled")
         flag METADATA
         metadata "Bindable"
         item null "enabledChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_enabled")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set enabled(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"enabled")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_enabled")
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"cachedTextFormat")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "enabledChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function set cacheAsBitmap(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"cacheAsBitmap")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"cacheAsBitmap")
         getlocal0
         getlocal1
         iffalse ofs0
         pushbyte 1
         jump ofs1
         ofs0:
         pushbyte 0
         ofs1:
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function get filters() : Array
      {
         trait getter QName(PackageNamespace(""),"filters")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         coerce QName(PackageNamespace(""),"Array")
         jump ofs1
         ofs0:
         getlocal0
         getsuper QName(PackageNamespace(""),"filters")
         coerce QName(PackageNamespace(""),"Array")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set filters(param1:Array) : void
      {
         trait setter QName(PackageNamespace(""),"filters")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal2
         pushbyte 0
         setlocal3
         pushnull
         coerce QName(PackageNamespace("flash.events"),"IEventDispatcher")
         setlocal 4
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs1
         ofs2:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("flash.events"),"IEventDispatcher")
         astypelate
         coerce QName(PackageNamespace("flash.events"),"IEventDispatcher")
         dup
         setlocal 4
         iffalse ofs3
         getlocal 4
         getlex QName(PackageNamespace("mx.filters"),"BaseFilter")
         getproperty QName(PackageNamespace(""),"CHANGE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"filterChangeHandler")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"removeEventListener"), 2
         ofs3:
         inclocal_i 3
         ofs1:
         getlocal3
         getlocal2
         iflt ofs2
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal 5
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         iffalse ofs4
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs5
         ofs6:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("mx.filters"),"IBitmapFilter")
         istypelate
         iffalse ofs7
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("flash.events"),"IEventDispatcher")
         astypelate
         coerce QName(PackageNamespace("flash.events"),"IEventDispatcher")
         dup
         setlocal 4
         iffalse ofs8
         getlocal 4
         getlex QName(PackageNamespace("mx.filters"),"BaseFilter")
         getproperty QName(PackageNamespace(""),"CHANGE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"filterChangeHandler")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 2
         ofs8:
         getlocal 5
         findpropstrict QName(PackageNamespace("mx.filters"),"IBitmapFilter")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace("mx.filters"),"IBitmapFilter"), 1
         callproperty QName(Namespace("mx.filters:IBitmapFilter"),"clone"), 0
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         jump ofs9
         ofs7:
         getlocal 5
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs9:
         inclocal_i 3
         ofs5:
         getlocal3
         getlocal2
         iflt ofs6
         ofs4:
         getlocal0
         getlocal 5
         setsuper QName(PackageNamespace(""),"filters")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get designLayer() : DesignLayer
      {
         trait getter QName(PackageNamespace(""),"designLayer")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"DesignLayer")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set designLayer(param1:DesignLayer) : void
      {
         trait setter QName(PackageNamespace(""),"designLayer")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"DesignLayer")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         pushstring "layerPropertyChange"
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"layer_PropertyChange")
         pushfalse
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 3
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         pushstring "layerPropertyChange"
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"layer_PropertyChange")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 5
         ofs1:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         iffalse ofs2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_alpha")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         getproperty QName(PackageNamespace(""),"effectiveAlpha")
         multiply
         convert_d
         jump ofs3
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_alpha")
         convert_d
         ofs3:
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$alpha")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"designLayer")
         iffalse ofs4
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_visible")
         convert_b
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_designLayer")
         getproperty QName(PackageNamespace(""),"effectiveVisibility")
         convert_b
         ofs5:
         jump ofs6
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_visible")
         convert_b
         ofs6:
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $alpha() : Number
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$alpha")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"alpha")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $alpha(param1:Number) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$alpha")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"alpha")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $blendMode() : String
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendMode")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"blendMode")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $blendMode(param1:String) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendMode")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"blendMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $blendShader(param1:Shader) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"Shader")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"blendShader")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $parent() : DisplayObjectContainer
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$parent")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"parent")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $x() : Number
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$x")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"x")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $x(param1:Number) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$x")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $y() : Number
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$y")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"y")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $y(param1:Number) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$y")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $width() : Number
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$width")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"width")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $width(param1:Number) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$width")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"width")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $height() : Number
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$height")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"height")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $height(param1:Number) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$height")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"height")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function get $visible() : Boolean
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         flag FINAL
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"visible")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function set $visible(param1:Boolean) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get contentMouseX() : Number
      {
         trait getter QName(PackageNamespace(""),"contentMouseX")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"mouseX")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get contentMouseY() : Number
      {
         trait getter QName(PackageNamespace(""),"contentMouseY")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"mouseY")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get tweeningProperties() : Array
      {
         trait getter QName(PackageNamespace(""),"tweeningProperties")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_tweeningProperties")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set tweeningProperties(param1:Array) : void
      {
         trait setter QName(PackageNamespace(""),"tweeningProperties")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_tweeningProperties")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get cursorManager() : ICursorManager
      {
         trait getter QName(PackageNamespace(""),"cursorManager")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.managers"),"ICursorManager")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.managers"),"ICursorManager")
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         jump ofs0
         ofs1:
         label
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         istypelate
         dup
         iffalse ofs2
         pop
         pushstring "cursorManager"
         getlocal1
         in
         ofs2:
         iffalse ofs3
         getlocal1
         pushstring "cursorManager"
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.managers"),"ICursorManager")
         setlocal2
         getlocal2
         returnvalue
         ofs3:
         getlocal1
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         ofs0:
         getlocal1
         iftrue ofs1
         getlex QName(PackageNamespace("mx.managers"),"CursorManager")
         callproperty QName(PackageNamespace(""),"getInstance"), 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get focusManager() : IFocusManager
      {
         trait getter QName(PackageNamespace(""),"focusManager")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.managers"),"IFocusManager")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusManager")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusManager")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         jump ofs1
         ofs2:
         label
         getlocal1
         getlex QName(PackageNamespace("mx.managers"),"IFocusManagerContainer")
         istypelate
         iffalse ofs3
         findpropstrict QName(PackageNamespace("mx.managers"),"IFocusManagerContainer")
         getlocal1
         callproperty QName(PackageNamespace("mx.managers"),"IFocusManagerContainer"), 1
         getproperty QName(Namespace("mx.managers:IFocusManagerContainer"),"focusManager")
         returnvalue
         ofs3:
         getlocal1
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         ofs1:
         getlocal1
         iftrue ofs2
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set focusManager(param1:IFocusManager) : void
      {
         trait setter QName(PackageNamespace(""),"focusManager")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.managers"),"IFocusManager")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusManager")
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ADD_FOCUS_MANAGER")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("unused")]
      protected function get resourceManager() : IResourceManager
      {
         trait getter QName(ProtectedNamespace("mx.core:UIComponent"),"resourceManager")
         flag METADATA
         metadata "Bindable"
         item null "unused"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.resources"),"IResourceManager")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_resourceManager")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleManager() : IStyleManager2
      {
         trait getter QName(PackageNamespace(""),"styleManager")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"IStyleManager2")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.styles"),"StyleManager")
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         callproperty QName(PackageNamespace(""),"getStyleManager"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get systemManager() : ISystemManager
      {
         trait getter QName(PackageNamespace(""),"systemManager")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.managers"),"ISystemManager")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setlocal2
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IUIComponent")
         setlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         not
         dup
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManagerDirty")
         convert_b
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace(""),"root")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         getproperty QName(Namespace("mx.managers:ISystemManager"),"isProxy")
         convert_b
         ofs2:
         iffalse ofs3
         jump ofs4
         ofs3:
         getlocal1
         convert_b
         dup
         iffalse ofs5
         pop
         getlocal1
         getlex QName(PackageNamespace("flash.display"),"Stage")
         istypelate
         not
         ofs5:
         iffalse ofs6
         getlocal0
         getlocal1
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         astypelate
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         jump ofs4
         ofs6:
         getlocal1
         iffalse ofs7
         getlocal0
         findpropstrict QName(PackageNamespace("flash.display"),"Stage")
         getlocal1
         callproperty QName(PackageNamespace("flash.display"),"Stage"), 1
         pushbyte 0
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         astypelate
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         jump ofs4
         ofs7:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setlocal2
         jump ofs8
         ofs9:
         label
         getlocal2
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"IUIComponent")
         setlocal3
         getlocal3
         iffalse ofs10
         getlocal0
         getlocal3
         getproperty QName(Namespace("mx.core:IUIComponent"),"systemManager")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         jump ofs4
         jump ofs10
         ofs10:
         getlocal2
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         istypelate
         iffalse ofs11
         getlocal0
         getlocal2
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         astypelate
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         jump ofs4
         ofs11:
         getlocal2
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setlocal2
         ofs8:
         getlocal2
         iftrue ofs9
         ofs4:
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManagerDirty")
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set systemManager(param1:ISystemManager) : void
      {
         trait setter QName(PackageNamespace(""),"systemManager")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.managers"),"ISystemManager")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManagerDirty")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function getNonNullSystemManager() : ISystemManager
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getNonNullSystemManager")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.managers"),"ISystemManager")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlocal1
         iftrue ofs0
         findpropstrict QName(PackageNamespace("mx.managers"),"ISystemManager")
         getlex QName(PackageNamespace("mx.managers"),"SystemManager")
         getlocal0
         callproperty QName(PackageNamespace(""),"getSWFRoot"), 1
         callproperty QName(PackageNamespace("mx.managers"),"ISystemManager"), 1
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         ofs0:
         getlocal1
         iftrue ofs1
         getlex QName(PackageNamespace("mx.managers"),"SystemManagerGlobals")
         getproperty QName(PackageNamespace(""),"topLevelSystemManagers")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         ofs1:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function invalidateSystemManager() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateSystemManager")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"UIComponent")
         setlocal 4
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IRawChildrenContainer"), 1
         getproperty QName(Namespace("mx.core:IRawChildrenContainer"),"rawChildren")
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace("mx.core"),"IChildList")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IChildList"), 1
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         ofs1:
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setlocal1
         getlocal1
         getproperty QName(Namespace("mx.core:IChildList"),"numChildren")
         convert_i
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs2
         ofs3:
         label
         getlocal1
         getlocal3
         callproperty QName(Namespace("mx.core:IChildList"),"getChildAt"), 1
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"UIComponent")
         dup
         setlocal 4
         iffalse ofs4
         getlocal 4
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateSystemManager"), 0
         ofs4:
         inclocal_i 3
         ofs2:
         getlocal3
         getlocal2
         iflt ofs3
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManagerDirty")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get nestLevel() : int
      {
         trait getter QName(PackageNamespace(""),"nestLevel")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nestLevel")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set nestLevel(param1:int) : void
      {
         trait setter QName(PackageNamespace(""),"nestLevel")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setlocal2
         pushbyte 0
         setlocal3
         pushbyte 0
         setlocal 4
         pushnull
         coerce QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         setlocal 5
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IUITextField")
         setlocal 6
         getlocal1
         pushbyte 1
         greaterthan
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nestLevel")
         getlocal1
         equals
         not
         ofs0:
         iffalse ofs1
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_nestLevel")
         getlocal0
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"updateCallbacks"), 0
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         istypelate
         iffalse ofs2
         findpropstrict QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IRawChildrenContainer"), 1
         getproperty QName(Namespace("mx.core:IRawChildrenContainer"),"rawChildren")
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         jump ofs3
         ofs2:
         findpropstrict QName(PackageNamespace("mx.core"),"IChildList")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IChildList"), 1
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         ofs3:
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setlocal2
         getlocal2
         getproperty QName(Namespace("mx.core:IChildList"),"numChildren")
         convert_i
         setlocal3
         pushbyte 0
         setlocal 4
         jump ofs4
         ofs5:
         label
         getlocal2
         getlocal 4
         callproperty QName(Namespace("mx.core:IChildList"),"getChildAt"), 1
         getlex QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         astypelate
         coerce QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         dup
         setlocal 5
         iffalse ofs6
         getlocal 5
         getlocal1
         pushbyte 1
         add
         setproperty QName(Namespace("mx.managers:ILayoutManagerClient"),"nestLevel")
         jump ofs7
         ofs6:
         getlocal2
         getlocal 4
         callproperty QName(Namespace("mx.core:IChildList"),"getChildAt"), 1
         getlex QName(PackageNamespace("mx.core"),"IUITextField")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"IUITextField")
         dup
         setlocal 6
         iffalse ofs7
         getlocal 6
         getlocal1
         pushbyte 1
         add
         setproperty QName(Namespace("mx.core:IUITextField"),"nestLevel")
         ofs7:
         inclocal_i 4
         ofs4:
         getlocal 4
         getlocal3
         iflt ofs5
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get descriptor() : UIComponentDescriptor
      {
         trait getter QName(PackageNamespace(""),"descriptor")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"UIComponentDescriptor")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_descriptor")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set descriptor(param1:UIComponentDescriptor) : void
      {
         trait setter QName(PackageNamespace(""),"descriptor")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"UIComponentDescriptor")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_descriptor")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get document() : Object
      {
         trait getter QName(PackageNamespace(""),"document")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_document")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set document(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"document")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IUIComponent")
         setlocal 4
         getlex QName(PackageNamespace(""),"numChildren")
         convert_i
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs0
         ofs1:
         label
         findpropstrict QName(PackageNamespace(""),"getChildAt")
         getlocal3
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"IUIComponent")
         dup
         setlocal 4
         iftrue ofs2
         jump ofs3
         ofs2:
         getlocal 4
         getproperty QName(Namespace("mx.core:IUIComponent"),"document")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_document")
         equals
         dup
         iftrue ofs4
         pop
         getlocal 4
         getproperty QName(Namespace("mx.core:IUIComponent"),"document")
         getlex QName(PackageNamespace("mx.core"),"FlexGlobals")
         getproperty QName(PackageNamespace(""),"topLevelApplication")
         equals
         ofs4:
         iffalse ofs3
         getlocal 4
         getlocal1
         setproperty QName(Namespace("mx.core:IUIComponent"),"document")
         ofs3:
         inclocal_i 3
         ofs0:
         getlocal3
         getlocal2
         iflt ofs1
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_document")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function get documentDescriptor() : UIComponentDescriptor
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"documentDescriptor")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"UIComponentDescriptor")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_documentDescriptor")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get id() : String
      {
         trait getter QName(PackageNamespace(""),"id")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_id")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set id(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"id")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_id")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get isDocument() : Boolean
      {
         trait getter QName(PackageNamespace(""),"isDocument")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         getlocal0
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("initialize")]
      public function get parentApplication() : Object
      {
         trait getter QName(PackageNamespace(""),"parentApplication")
         flag METADATA
         metadata "Bindable"
         item null "initialize"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"UIComponent")
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         getproperty QName(Namespace("mx.managers:ISystemManager"),"document")
         coerce QName(PackageNamespace(""),"Object")
         setlocal1
         getlocal1
         getlocal0
         ifne ofs0
         getlocal1
         getproperty Multiname("systemManager",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("parent",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"UIComponent")
         setlocal2
         getlocal2
         iffalse ofs1
         getlocal2
         getproperty QName(PackageNamespace(""),"systemManager")
         getproperty QName(Namespace("mx.managers:ISystemManager"),"document")
         coerce QName(PackageNamespace(""),"Object")
         jump ofs2
         ofs1:
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         ofs2:
         coerce QName(PackageNamespace(""),"Object")
         setlocal1
         ofs0:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("initialize")]
      public function get parentDocument() : Object
      {
         trait getter QName(PackageNamespace(""),"parentDocument")
         flag METADATA
         metadata "Bindable"
         item null "initialize"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IUIComponent")
         setlocal1
         pushnull
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         getlocal0
         ifne ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"IUIComponent")
         setlocal1
         getlocal1
         iffalse ofs1
         getlocal1
         getproperty QName(Namespace("mx.core:IUIComponent"),"document")
         returnvalue
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         astypelate
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal2
         getlocal2
         iffalse ofs2
         getlocal2
         getproperty QName(Namespace("mx.managers:ISystemManager"),"document")
         returnvalue
         ofs2:
         pushnull
         returnvalue
         jump ofs0
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get screen() : Rectangle
      {
         trait getter QName(PackageNamespace(""),"screen")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlocal1
         iffalse ofs0
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"screen")
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get moduleFactory() : IFlexModuleFactory
      {
         trait getter QName(PackageNamespace(""),"moduleFactory")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_moduleFactory")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set moduleFactory(param1:IFlexModuleFactory) : void
      {
         trait setter QName(PackageNamespace(""),"moduleFactory")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IFlexModule")
         setlocal 4
         getlex QName(PackageNamespace(""),"numChildren")
         convert_i
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs0
         ofs1:
         label
         findpropstrict QName(PackageNamespace(""),"getChildAt")
         getlocal3
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         getlex QName(PackageNamespace("mx.core"),"IFlexModule")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"IFlexModule")
         dup
         setlocal 4
         iftrue ofs2
         jump ofs3
         ofs2:
         getlocal 4
         getproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         pushnull
         equals
         dup
         iftrue ofs4
         pop
         getlocal 4
         getproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_moduleFactory")
         equals
         ofs4:
         iffalse ofs3
         getlocal 4
         getlocal1
         setproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         ofs3:
         inclocal_i 3
         ofs0:
         getlocal3
         getlocal2
         iflt ofs1
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_moduleFactory")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"setDeferredStyles"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get inheritingStyles() : Object
      {
         trait getter QName(PackageNamespace(""),"inheritingStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set inheritingStyles(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"inheritingStyles")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get nonInheritingStyles() : Object
      {
         trait getter QName(PackageNamespace(""),"nonInheritingStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set nonInheritingStyles(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"nonInheritingStyles")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleDeclaration() : CSSStyleDeclaration
      {
         trait getter QName(PackageNamespace(""),"styleDeclaration")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleDeclaration")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set styleDeclaration(param1:CSSStyleDeclaration) : void
      {
         trait setter QName(PackageNamespace(""),"styleDeclaration")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleDeclaration")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get cachePolicy() : String
      {
         trait getter QName(PackageNamespace(""),"cachePolicy")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_cachePolicy")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set cachePolicy(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"cachePolicy")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_cachePolicy")
         getlocal1
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_cachePolicy")
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"UIComponentCachePolicy")
         getproperty QName(PackageNamespace(""),"OFF")
         ifne ofs1
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"cacheAsBitmap")
         jump ofs0
         ofs1:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"UIComponentCachePolicy")
         getproperty QName(PackageNamespace(""),"ON")
         ifne ofs2
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"cacheAsBitmap")
         jump ofs0
         ofs2:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         pushbyte 0
         greaterthan
         initproperty QName(PackageNamespace(""),"cacheAsBitmap")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set cacheHeuristic(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"cacheHeuristic")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_cachePolicy")
         getlex QName(PackageNamespace("mx.core"),"UIComponentCachePolicy")
         getproperty QName(PackageNamespace(""),"AUTO")
         ifne ofs0
         getlocal1
         iffalse ofs1
         getlocal0
         dup
         setlocal2
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         increment_i
         setlocal3
         getlocal2
         getlocal3
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         kill 3
         kill 2
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         pushbyte 0
         ifeq ofs2
         getlocal0
         dup
         setlocal2
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         decrement_i
         setlocal3
         getlocal2
         getlocal3
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         kill 3
         kill 2
         ofs2:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"cacheAsBitmapCount")
         pushbyte 0
         equals
         not
         setsuper QName(PackageNamespace(""),"cacheAsBitmap")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get focusPane() : Sprite
      {
         trait getter QName(PackageNamespace(""),"focusPane")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.display"),"Sprite")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusPane")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set focusPane(param1:Sprite) : void
      {
         trait setter QName(PackageNamespace(""),"focusPane")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"Sprite")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         iffalse ofs0
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"addChild"), 1
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushnull
         setproperty QName(PackageNamespace(""),"scrollRect")
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusPane")
         jump ofs1
         ofs0:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusPane")
         callpropvoid QName(PackageNamespace(""),"removeChild"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusPane")
         pushnull
         setproperty QName(PackageNamespace(""),"mask")
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusPane")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get focusEnabled() : Boolean
      {
         trait getter QName(PackageNamespace(""),"focusEnabled")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusEnabled")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set focusEnabled(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"focusEnabled")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_focusEnabled")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("hasFocusableChildrenChange")]
      public function get hasFocusableChildren() : Boolean
      {
         trait getter QName(PackageNamespace(""),"hasFocusableChildren")
         flag METADATA
         metadata "Bindable"
         item null "hasFocusableChildrenChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasFocusableChildren")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set hasFocusableChildren(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"hasFocusableChildren")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasFocusableChildren")
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasFocusableChildren")
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "hasFocusableChildrenChange"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get mouseFocusEnabled() : Boolean
      {
         trait getter QName(PackageNamespace(""),"mouseFocusEnabled")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_mouseFocusEnabled")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set mouseFocusEnabled(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"mouseFocusEnabled")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_mouseFocusEnabled")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("tabFocusEnabledChange")]
      public function get tabFocusEnabled() : Boolean
      {
         trait getter QName(PackageNamespace(""),"tabFocusEnabled")
         flag METADATA
         metadata "Bindable"
         item null "tabFocusEnabledChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_tabFocusEnabled")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set tabFocusEnabled(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"tabFocusEnabled")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_tabFocusEnabled")
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_tabFocusEnabled")
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "tabFocusEnabledChange"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get measuredMinWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"measuredMinWidth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set measuredMinWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"measuredMinWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinWidth")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get measuredMinHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"measuredMinHeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set measuredMinHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"measuredMinHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get measuredWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"measuredWidth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set measuredWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"measuredWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredWidth")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get measuredHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"measuredHeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set measuredHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"measuredHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("resize")]
      public function get percentWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"percentWidth")
         flag METADATA
         metadata "Bindable"
         item null "resize"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set percentWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"percentWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentWidth")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"NaN")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitWidth")
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentWidth")
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("resize")]
      public function get percentHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"percentHeight")
         flag METADATA
         metadata "Bindable"
         item null "resize"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set percentHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"percentHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentHeight")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"NaN")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitHeight")
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentHeight")
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitMinWidthChanged")]
      public function get minWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"minWidth")
         flag METADATA
         metadata "Bindable"
         item null "explicitMinWidthChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredMinWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set minWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"minWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"explicitMinWidth")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitMinHeightChanged")]
      public function get minHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"minHeight")
         flag METADATA
         metadata "Bindable"
         item null "explicitMinHeightChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredMinHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set minHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"minHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"explicitMinHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitMaxWidthChanged")]
      public function get maxWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"maxWidth")
         flag METADATA
         metadata "Bindable"
         item null "explicitMaxWidthChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         convert_d
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"DEFAULT_MAX_WIDTH")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set maxWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"maxWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"explicitMaxWidth")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitMaxHeightChanged")]
      public function get maxHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"maxHeight")
         flag METADATA
         metadata "Bindable"
         item null "explicitMaxHeightChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         convert_d
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"DEFAULT_MAX_HEIGHT")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set maxHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"maxHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PackageNamespace(""),"explicitMaxHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitMinWidthChanged")]
      public function get explicitMinWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"explicitMinWidth")
         flag METADATA
         metadata "Bindable"
         item null "explicitMinWidthChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMinWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set explicitMinWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"explicitMinWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMinWidth")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMinWidth")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "explicitMinWidthChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explictMinHeightChanged")]
      public function get explicitMinHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"explicitMinHeight")
         flag METADATA
         metadata "Bindable"
         item null "explictMinHeightChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMinHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set explicitMinHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"explicitMinHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMinHeight")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMinHeight")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "explicitMinHeightChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitMaxWidthChanged")]
      public function get explicitMaxWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"explicitMaxWidth")
         flag METADATA
         metadata "Bindable"
         item null "explicitMaxWidthChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMaxWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set explicitMaxWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"explicitMaxWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMaxWidth")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMaxWidth")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "explicitMaxWidthChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitMaxHeightChanged")]
      public function get explicitMaxHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"explicitMaxHeight")
         flag METADATA
         metadata "Bindable"
         item null "explicitMaxHeightChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMaxHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set explicitMaxHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"explicitMaxHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMaxHeight")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_explicitMaxHeight")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "explicitMaxHeightChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitWidthChanged")]
      public function get explicitWidth() : Number
      {
         trait getter QName(PackageNamespace(""),"explicitWidth")
         flag METADATA
         metadata "Bindable"
         item null "explicitWidthChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set explicitWidth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"explicitWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitWidth")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"NaN")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentWidth")
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitWidth")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "explicitWidthChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("explicitHeightChanged")]
      public function get explicitHeight() : Number
      {
         trait getter QName(PackageNamespace(""),"explicitHeight")
         flag METADATA
         metadata "Bindable"
         item null "explicitHeightChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set explicitHeight(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"explicitHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitHeight")
         getlocal1
         ifne ofs0
         returnvoid
         ofs0:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs1
         getlocal0
         getlex QName(PackageNamespace(""),"NaN")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentHeight")
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitHeight")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "explicitHeightChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function get hasComplexLayoutMatrix() : Boolean
      {
         trait getter QName(ProtectedNamespace("mx.core:UIComponent"),"hasComplexLayoutMatrix")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         iftrue ofs0
         pushfalse
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         callproperty QName(PackageNamespace(""),"isDeltaIdentity"), 1
         not
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         returnvalue
         ofs1:
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutMatrix")
         callproperty QName(PackageNamespace(""),"isDeltaIdentity"), 1
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("includeInLayoutChanged")]
      public function get includeInLayout() : Boolean
      {
         trait getter QName(PackageNamespace(""),"includeInLayout")
         flag METADATA
         metadata "Bindable"
         item null "includeInLayoutChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_includeInLayout")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set includeInLayout(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"includeInLayout")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IInvalidating")
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_includeInLayout")
         getlocal1
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_includeInLayout")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"IInvalidating")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"IInvalidating")
         setlocal2
         getlocal2
         iffalse ofs1
         getlocal2
         callpropvoid QName(Namespace("mx.core:IInvalidating"),"invalidateSize"), 0
         getlocal2
         callpropvoid QName(Namespace("mx.core:IInvalidating"),"invalidateDisplayList"), 0
         ofs1:
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "includeInLayoutChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get layoutDirection() : String
      {
         trait getter QName(PackageNamespace(""),"layoutDirection")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "layoutDirection"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set layoutDirection(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"layoutDirection")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         ifne ofs0
         getlocal0
         pushstring "layoutDirection"
         getlex QName(PackageNamespace(""),"undefined")
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         jump ofs1
         ofs0:
         getlocal0
         pushstring "layoutDirection"
         getlocal1
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get instanceIndex() : int
      {
         trait getter QName(PackageNamespace(""),"instanceIndex")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         getproperty QName(PackageNamespace(""),"length")
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         convert_i
         jump ofs1
         ofs0:
         pushbyte -1
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get instanceIndices() : Array
      {
         trait getter QName(PackageNamespace(""),"instanceIndices")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         pushbyte 0
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"slice"), 1
         coerce QName(PackageNamespace(""),"Array")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set instanceIndices(param1:Array) : void
      {
         trait setter QName(PackageNamespace(""),"instanceIndices")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get repeater() : IRepeater
      {
         trait getter QName(PackageNamespace(""),"repeater")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"IRepeater")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaters")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaters")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaters")
         getproperty QName(PackageNamespace(""),"length")
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.core"),"IRepeater")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IRepeater")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get repeaters() : Array
      {
         trait getter QName(PackageNamespace(""),"repeaters")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaters")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaters")
         pushbyte 0
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"slice"), 1
         coerce QName(PackageNamespace(""),"Array")
         jump ofs1
         ofs0:
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set repeaters(param1:Array) : void
      {
         trait setter QName(PackageNamespace(""),"repeaters")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaters")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get repeaterIndex() : int
      {
         trait getter QName(PackageNamespace(""),"repeaterIndex")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaterIndices")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaterIndices")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaterIndices")
         getproperty QName(PackageNamespace(""),"length")
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         convert_i
         jump ofs1
         ofs0:
         pushbyte -1
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get repeaterIndices() : Array
      {
         trait getter QName(PackageNamespace(""),"repeaterIndices")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaterIndices")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaterIndices")
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"slice"), 0
         coerce QName(PackageNamespace(""),"Array")
         jump ofs1
         ofs0:
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set repeaterIndices(param1:Array) : void
      {
         trait setter QName(PackageNamespace(""),"repeaterIndices")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaterIndices")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("currentStateChange")]
      public function get currentState() : String
      {
         trait getter QName(PackageNamespace(""),"currentState")
         flag METADATA
         metadata "Bindable"
         item null "currentStateChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateChanged")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         coerce_s
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         coerce_s
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set currentState(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"currentState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setCurrentState"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function get currentStateDeferred() : String
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"currentStateDeferred")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateDeferred")
         pushnull
         ifeq ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateDeferred")
         coerce_s
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"currentState")
         coerce_s
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function set currentStateDeferred(param1:String) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"currentStateDeferred")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateDeferred")
         getlocal1
         pushnull
         ifeq ofs0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get states() : Array
      {
         trait getter QName(PackageNamespace(""),"states")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_states")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set states(param1:Array) : void
      {
         trait setter QName(PackageNamespace(""),"states")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_states")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get transitions() : Array
      {
         trait getter QName(PackageNamespace(""),"transitions")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_transitions")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set transitions(param1:Array) : void
      {
         trait setter QName(PackageNamespace(""),"transitions")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_transitions")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get baselinePosition() : Number
      {
         trait getter QName(PackageNamespace(""),"baselinePosition")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"validateBaselinePosition"), 0
         iftrue ofs0
         getlex QName(PackageNamespace(""),"NaN")
         returnvalue
         ofs0:
         getlocal0
         pushstring "Wj"
         callproperty QName(PackageNamespace(""),"measureText"), 1
         coerce QName(PackageNamespace("flash.text"),"TextLineMetrics")
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         pushbyte 2
         getlocal1
         getproperty QName(PackageNamespace(""),"ascent")
         add
         pushbyte 2
         add
         ifnlt ofs1
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         getlocal1
         getproperty QName(PackageNamespace(""),"ascent")
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         subtract
         pushbyte 2
         divide
         add
         callproperty QName(PackageNamespace(""),"int"), 1
         returnvalue
         ofs1:
         pushbyte 2
         getlocal1
         getproperty QName(PackageNamespace(""),"ascent")
         add
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get className() : String
      {
         trait getter QName(PackageNamespace(""),"className")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.utils"),"NameUtil")
         getlocal0
         callproperty QName(PackageNamespace(""),"getUnqualifiedClassName"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get activeEffects() : Array
      {
         trait getter QName(PackageNamespace(""),"activeEffects")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get flexContextMenu() : IFlexContextMenu
      {
         trait getter QName(PackageNamespace(""),"flexContextMenu")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.controls"),"IFlexContextMenu")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_flexContextMenu")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set flexContextMenu(param1:IFlexContextMenu) : void
      {
         trait setter QName(PackageNamespace(""),"flexContextMenu")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.controls"),"IFlexContextMenu")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_flexContextMenu")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_flexContextMenu")
         getlocal0
         callpropvoid QName(Namespace("mx.controls:IFlexContextMenu"),"unsetContextMenu"), 1
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_flexContextMenu")
         getlocal1
         pushnull
         ifeq ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_flexContextMenu")
         getlocal0
         callpropvoid QName(Namespace("mx.controls:IFlexContextMenu"),"setContextMenu"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleName() : Object
      {
         trait getter QName(PackageNamespace(""),"styleName")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleName")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set styleName(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"styleName")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleName")
         getlocal1
         ifstrictne ofs0
         returnvoid
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleName")
         getlocal0
         getproperty QName(PackageNamespace(""),"inheritingStyles")
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getproperty QName(PackageNamespace(""),"STYLE_UNINITIALIZED")
         ifne ofs1
         returnvoid
         ofs1:
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"regenerateStyleCache"), 1
         getlocal0
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initThemeColor"), 0
         getlocal0
         pushstring "styleName"
         callpropvoid QName(PackageNamespace(""),"styleChanged"), 1
         getlocal0
         pushstring "styleName"
         pushtrue
         callpropvoid QName(PackageNamespace(""),"notifyStyleChangeInChildren"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("toolTipChanged")]
      public function get toolTip() : String
      {
         trait getter QName(PackageNamespace(""),"toolTip")
         flag METADATA
         metadata "Bindable"
         item null "toolTipChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_toolTip")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set toolTip(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"toolTip")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_toolTip")
         coerce_s
         setlocal2
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_toolTip")
         getlex QName(PackageNamespace("mx.managers"),"ToolTipManager")
         getlocal0
         getlocal2
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"registerToolTip"), 3
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "toolTipChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get uid() : String
      {
         trait getter QName(PackageNamespace(""),"uid")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_uid")
         iftrue ofs0
         getlocal0
         findpropstrict QName(PackageNamespace(""),"toString")
         callproperty QName(PackageNamespace(""),"toString"), 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_uid")
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_uid")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set uid(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"uid")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"_uid")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function get indexedID() : String
      {
         trait getter QName(PrivateNamespace(null,"#UIComponent"),"indexedID")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         coerce_s
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"instanceIndices")
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         getlocal2
         iffalse ofs0
         getlocal1
         pushstring "["
         getlocal2
         pushstring "]["
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"join"), 1
         add
         pushstring "]"
         add
         add
         coerce_s
         setlocal1
         ofs0:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get isPopUp() : Boolean
      {
         trait getter QName(PackageNamespace(""),"isPopUp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_isPopUp")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set isPopUp(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"isPopUp")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_isPopUp")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationDelegate() : Object
      {
         trait getter QName(PackageNamespace(""),"automationDelegate")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_automationDelegate")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set automationDelegate(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"automationDelegate")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlex QName(PackageNamespace("mx.automation"),"IAutomationObject")
         astypelate
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_automationDelegate")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationName() : String
      {
         trait getter QName(PackageNamespace(""),"automationName")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_automationName")
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_automationName")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs1
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getproperty Multiname("automationName",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         ofs1:
         pushstring ""
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set automationName(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"automationName")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_automationName")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationValue() : Array
      {
         trait getter QName(PackageNamespace(""),"automationValue")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getproperty Multiname("automationValue",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         ofs0:
         newarray 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get showInAutomationHierarchy() : Boolean
      {
         trait getter QName(PackageNamespace(""),"showInAutomationHierarchy")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_showInAutomationHierarchy")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set showInAutomationHierarchy(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"showInAutomationHierarchy")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_showInAutomationHierarchy")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("errorStringChanged")]
      public function get errorString() : String
      {
         trait getter QName(PackageNamespace(""),"errorString")
         flag METADATA
         metadata "Bindable"
         item null "errorStringChanged"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_errorString")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set errorString(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"errorString")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_errorString")
         coerce_s
         setlocal2
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_errorString")
         getlex QName(PackageNamespace("mx.managers"),"ToolTipManager")
         getlocal0
         getlocal2
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"registerErrorString"), 3
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"errorStringChanged")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "errorStringChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setBorderColorForErrorString() : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"setBorderColorForErrorString")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_errorString")
         not
         dup
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_errorString")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         equals
         ofs0:
         iffalse ofs1
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"origBorderColor")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs2
         getlocal0
         pushstring "borderColor"
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"origBorderColor")
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         getlocal0
         pushtrue
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"saveBorderColor")
         ofs2:
         jump ofs3
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"saveBorderColor")
         iffalse ofs4
         getlocal0
         pushfalse
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"saveBorderColor")
         getlocal0
         getlocal0
         pushstring "borderColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"origBorderColor")
         ofs4:
         getlocal0
         pushstring "borderColor"
         getlocal0
         pushstring "errorColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         ofs3:
         getlocal0
         pushstring "themeColor"
         callpropvoid QName(PackageNamespace(""),"styleChanged"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"focusManager")
         coerce QName(PackageNamespace("mx.managers"),"IFocusManager")
         setlocal1
         getlocal1
         iffalse ofs5
         findpropstrict QName(PackageNamespace("flash.display"),"DisplayObject")
         getlocal1
         callproperty QName(Namespace("mx.managers:IFocusManager"),"getFocus"), 0
         callproperty QName(PackageNamespace("flash.display"),"DisplayObject"), 1
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         jump ofs6
         ofs5:
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         ofs6:
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal2
         getlocal1
         coerce_a
         convert_b
         dup
         iffalse ofs7
         pop
         getlocal1
         getproperty QName(Namespace("mx.managers:IFocusManager"),"showFocusIndicator")
         coerce_a
         convert_b
         ofs7:
         dup
         iffalse ofs8
         pop
         getlocal2
         getlocal0
         equals
         ofs8:
         iffalse ofs9
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"drawFocus"), 1
         ofs9:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get validationSubField() : String
      {
         trait getter QName(PackageNamespace(""),"validationSubField")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_validationSubField")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set validationSubField(param1:String) : void
      {
         trait setter QName(PackageNamespace(""),"validationSubField")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_validationSubField")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function addChild(param1:DisplayObject) : DisplayObject
      {
         trait method QName(PackageNamespace(""),"addChild")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setlocal2
         getlocal2
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal2
         getlex QName(PackageNamespace("flash.display"),"Loader")
         istypelate
         not
         ofs0:
         iffalse ofs1
         getlocal2
         getlocal1
         callpropvoid QName(PackageNamespace(""),"removeChild"), 1
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         equals
         not
         ofs2:
         iffalse ofs3
         getlex QName(PackageNamespace(""),"Math")
         pushbyte 0
         getlocal0
         getsuper QName(PackageNamespace(""),"numChildren")
         decrement
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_i
         jump ofs4
         ofs3:
         getlocal0
         getsuper QName(PackageNamespace(""),"numChildren")
         convert_i
         ofs4:
         convert_i
         setlocal3
         getlocal0
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"addingChild"), 1
         getlocal0
         getlocal1
         getlocal3
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$addChildAt"), 2
         getlocal0
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childAdded"), 1
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function addChildAt(param1:DisplayObject, param2:int) : DisplayObject
      {
         trait method QName(PackageNamespace(""),"addChildAt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setlocal3
         getlocal3
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal3
         getlex QName(PackageNamespace("flash.display"),"Loader")
         istypelate
         not
         ofs0:
         iffalse ofs1
         getlocal3
         getlocal1
         callpropvoid QName(PackageNamespace(""),"removeChild"), 1
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         equals
         not
         ofs2:
         iffalse ofs3
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlex QName(PackageNamespace(""),"Math")
         pushbyte 0
         getlocal0
         getsuper QName(PackageNamespace(""),"numChildren")
         decrement
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_i
         setlocal2
         ofs3:
         getlocal0
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"addingChild"), 1
         getlocal0
         getlocal1
         getlocal2
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$addChildAt"), 2
         getlocal0
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childAdded"), 1
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function removeChild(param1:DisplayObject) : DisplayObject
      {
         trait method QName(PackageNamespace(""),"removeChild")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"removingChild"), 1
         getlocal0
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$removeChild"), 1
         getlocal0
         getlocal1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childRemoved"), 1
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function removeChildAt(param1:int) : DisplayObject
      {
         trait method QName(PackageNamespace(""),"removeChildAt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"getChildAt")
         getlocal1
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal2
         getlocal0
         getlocal2
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"removingChild"), 1
         getlocal0
         getlocal2
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$removeChild"), 1
         getlocal0
         getlocal2
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childRemoved"), 1
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function setChildIndex(param1:DisplayObject, param2:int) : void
      {
         trait method QName(PackageNamespace(""),"setChildIndex")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         equals
         not
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlex QName(PackageNamespace(""),"Math")
         pushbyte 0
         getlocal0
         getsuper QName(PackageNamespace(""),"numChildren")
         pushbyte 2
         subtract
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_i
         setlocal2
         ofs1:
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"setChildIndex"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function stopDrag() : void
      {
         trait method QName(PackageNamespace(""),"stopDrag")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"stopDrag"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "xChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "yChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function $addChild(param1:DisplayObject) : DisplayObject
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$addChild")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsuper QName(PackageNamespace(""),"addChild"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function $addChildAt(param1:DisplayObject, param2:int) : DisplayObject
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$addChildAt")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         callsuper QName(PackageNamespace(""),"addChildAt"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function $removeChild(param1:DisplayObject) : DisplayObject
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$removeChild")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsuper QName(PackageNamespace(""),"removeChild"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function $removeChildAt(param1:int) : DisplayObject
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$removeChildAt")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsuper QName(PackageNamespace(""),"removeChildAt"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      final mx_internal function $setChildIndex(param1:DisplayObject, param2:int) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$setChildIndex")
         flag FINAL
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"setChildIndex"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function updateCallbacks() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"updateCallbacks")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateDisplayListFlag")
         iffalse ofs0
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"invalidateDisplayList"), 1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateSizeFlag")
         iffalse ofs1
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"invalidateSize"), 1
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidatePropertiesFlag")
         iffalse ofs2
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"invalidateProperties"), 1
         ofs2:
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         convert_b
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         coerce_a
         convert_b
         dup
         iftrue ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"usingBridge")
         coerce_a
         convert_b
         ofs3:
         iffalse ofs4
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"methodQueue")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         not
         ofs5:
         iffalse ofs6
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"RENDER")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 2
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         ofs6:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         iffalse ofs4
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_systemManager")
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         callpropvoid QName(PackageNamespace(""),"invalidate"), 0
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function parentChanged(param1:DisplayObjectContainer) : void
      {
         trait method QName(PackageNamespace(""),"parentChanged")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         iftrue ofs0
         getlocal0
         pushnull
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_nestLevel")
         jump ofs1
         ofs0:
         getlocal1
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         iffalse ofs2
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         jump ofs1
         ofs2:
         getlocal1
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         istypelate
         iffalse ofs3
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         jump ofs1
         ofs3:
         getlocal0
         getlocal1
         getproperty QName(PackageNamespace(""),"parent")
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         ofs1:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"parentChangedFlag")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function addingChild(param1:DisplayObject) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"addingChild")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         istypelate
         dup
         iffalse ofs0
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         getproperty QName(Namespace("mx.core:IUIComponent"),"document")
         not
         ofs0:
         iffalse ofs1
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         iffalse ofs2
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         coerce QName(PackageNamespace(""),"Object")
         jump ofs3
         ofs2:
         getlex QName(PackageNamespace("mx.core"),"FlexGlobals")
         getproperty QName(PackageNamespace(""),"topLevelApplication")
         coerce QName(PackageNamespace(""),"Object")
         ofs3:
         setproperty QName(Namespace("mx.core:IUIComponent"),"document")
         ofs1:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IFlexModule")
         istypelate
         dup
         iffalse ofs4
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IFlexModule")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IFlexModule"), 1
         getproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         pushnull
         equals
         ofs4:
         iffalse ofs5
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         pushnull
         ifeq ofs6
         findpropstrict QName(PackageNamespace("mx.core"),"IFlexModule")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IFlexModule"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         setproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         jump ofs5
         ofs6:
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         getlex QName(PackageNamespace("mx.core"),"IFlexModule")
         istypelate
         dup
         iffalse ofs7
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         getproperty Multiname("moduleFactory",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushnull
         equals
         not
         ofs7:
         iffalse ofs8
         findpropstrict QName(PackageNamespace("mx.core"),"IFlexModule")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IFlexModule"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"document")
         getproperty Multiname("moduleFactory",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         jump ofs5
         ofs8:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"IFlexModule")
         istypelate
         dup
         iffalse ofs9
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IFlexModule")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"IFlexModule"), 1
         getproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         pushnull
         equals
         not
         ofs9:
         iffalse ofs5
         findpropstrict QName(PackageNamespace("mx.core"),"IFlexModule")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IFlexModule"), 1
         findpropstrict QName(PackageNamespace("mx.core"),"IFlexModule")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"IFlexModule"), 1
         getproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         setproperty QName(Namespace("mx.core:IFlexModule"),"moduleFactory")
         ofs5:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IFontContextComponent")
         istypelate
         dup
         iffalse ofs10
         pop
         getlocal1
         not
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         ofs10:
         dup
         iffalse ofs11
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IFontContextComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IFontContextComponent"), 1
         getproperty QName(Namespace("mx.core:IFontContextComponent"),"fontContext")
         pushnull
         equals
         ofs11:
         iffalse ofs12
         findpropstrict QName(PackageNamespace("mx.core"),"IFontContextComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IFontContextComponent"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         setproperty QName(Namespace("mx.core:IFontContextComponent"),"fontContext")
         ofs12:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         istypelate
         iffalse ofs13
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         getlocal0
         callpropvoid QName(Namespace("mx.core:IUIComponent"),"parentChanged"), 1
         ofs13:
         getlocal1
         getlex QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         istypelate
         iffalse ofs14
         findpropstrict QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         getlocal1
         callproperty QName(PackageNamespace("mx.managers"),"ILayoutManagerClient"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"nestLevel")
         pushbyte 1
         add
         setproperty QName(Namespace("mx.managers:ILayoutManagerClient"),"nestLevel")
         jump ofs15
         ofs14:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IUITextField")
         istypelate
         iffalse ofs15
         findpropstrict QName(PackageNamespace("mx.core"),"IUITextField")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUITextField"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"nestLevel")
         pushbyte 1
         add
         setproperty QName(Namespace("mx.core:IUITextField"),"nestLevel")
         ofs15:
         getlocal1
         getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
         istypelate
         iffalse ofs16
         getlocal0
         getproperty QName(PackageNamespace(""),"doubleClickEnabled")
         iffalse ofs16
         findpropstrict QName(PackageNamespace("flash.display"),"InteractiveObject")
         getlocal1
         callproperty QName(PackageNamespace("flash.display"),"InteractiveObject"), 1
         pushtrue
         setproperty QName(PackageNamespace(""),"doubleClickEnabled")
         ofs16:
         getlocal1
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         iffalse ofs17
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleClient")
         getlocal1
         callproperty QName(PackageNamespace("mx.styles"),"IStyleClient"), 1
         pushtrue
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"regenerateStyleCache"), 1
         jump ofs18
         ofs17:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IUITextField")
         istypelate
         dup
         iffalse ofs19
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IUITextField")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUITextField"), 1
         getproperty QName(Namespace("mx.core:IUITextField"),"inheritingStyles")
         convert_b
         ofs19:
         iffalse ofs18
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         findpropstrict QName(PackageNamespace("mx.core"),"IUITextField")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUITextField"), 1
         callpropvoid QName(PackageNamespace(""),"initTextField"), 1
         ofs18:
         getlocal1
         getlex QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         istypelate
         iffalse ofs20
         findpropstrict QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         getlocal1
         callproperty QName(PackageNamespace("mx.styles"),"ISimpleStyleClient"), 1
         pushnull
         callpropvoid QName(Namespace("mx.styles:ISimpleStyleClient"),"styleChanged"), 1
         ofs20:
         getlocal1
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         iffalse ofs21
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleClient")
         getlocal1
         callproperty QName(PackageNamespace("mx.styles"),"IStyleClient"), 1
         pushnull
         pushtrue
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"notifyStyleChangeInChildren"), 2
         ofs21:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         iffalse ofs22
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initThemeColor"), 0
         ofs22:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         iffalse ofs23
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         callpropvoid QName(PackageNamespace(""),"stylesInitialized"), 0
         ofs23:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function childAdded(param1:DisplayObject) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childAdded")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         getproperty QName(PackageNamespace(""),"initialized")
         iftrue ofs1
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         callpropvoid QName(PackageNamespace(""),"initialize"), 0
         ofs1:
         jump ofs2
         ofs0:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         istypelate
         iffalse ofs2
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         callpropvoid QName(Namespace("mx.core:IUIComponent"),"initialize"), 0
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function removingChild(param1:DisplayObject) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"removingChild")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function childRemoved(param1:DisplayObject) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childRemoved")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         getproperty QName(Namespace("mx.core:IUIComponent"),"document")
         getlocal1
         ifeq ofs1
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         pushnull
         setproperty QName(Namespace("mx.core:IUIComponent"),"document")
         ofs1:
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         pushnull
         callpropvoid QName(Namespace("mx.core:IUIComponent"),"parentChanged"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function initialize() : void
      {
         trait method QName(PackageNamespace(""),"initialize")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"initialized")
         iffalse ofs0
         returnvoid
         ofs0:
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"PREINITIALIZE")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"createChildren"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"childrenCreated"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initializeAccessibility"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initializationComplete"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function initializationComplete() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"initializationComplete")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"processedDescriptors")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function initializeAccessibility() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"initializeAccessibility")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"createAccessibilityImplementation")
         pushnull
         ifeq ofs0
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal0
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"createAccessibilityImplementation"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function initializeRepeaterArrays(param1:IRepeaterClient) : void
      {
         trait method QName(PackageNamespace(""),"initializeRepeaterArrays")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"IRepeaterClient")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         coerce_a
         dup
         iffalse ofs0
         pop
         getlocal1
         getproperty QName(Namespace("mx.core:IRepeaterClient"),"instanceIndices")
         coerce_a
         ofs0:
         coerce_a
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal1
         getproperty QName(Namespace("mx.core:IRepeaterClient"),"isDocument")
         not
         dup
         iftrue ofs2
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"descriptor")
         getproperty QName(PackageNamespace(""),"document")
         equals
         not
         ofs2:
         coerce_a
         convert_b
         ofs1:
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         not
         ofs3:
         iffalse ofs4
         getlocal0
         getlocal1
         getproperty QName(Namespace("mx.core:IRepeaterClient"),"instanceIndices")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         getlocal0
         getlocal1
         getproperty QName(Namespace("mx.core:IRepeaterClient"),"repeaters")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaters")
         getlocal0
         getlocal1
         getproperty QName(Namespace("mx.core:IRepeaterClient"),"repeaterIndices")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_repeaterIndices")
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function createChildren() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"createChildren")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function childrenCreated() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"childrenCreated")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function invalidateProperties() : void
      {
         trait method QName(PackageNamespace(""),"invalidateProperties")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidatePropertiesFlag")
         iftrue ofs0
         getlocal0
         pushtrue
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidatePropertiesFlag")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         convert_b
         dup
         iffalse ofs1
         pop
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         convert_b
         ofs1:
         iffalse ofs0
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"invalidateProperties"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function invalidateSize() : void
      {
         trait method QName(PackageNamespace(""),"invalidateSize")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateSizeFlag")
         iftrue ofs0
         getlocal0
         pushtrue
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateSizeFlag")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         convert_b
         dup
         iffalse ofs1
         pop
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         convert_b
         ofs1:
         iffalse ofs0
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"invalidateSize"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function invalidateParentSizeAndDisplayList() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"includeInLayout")
         iftrue ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"IInvalidating")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"IInvalidating")
         setlocal1
         getlocal1
         iftrue ofs1
         returnvoid
         ofs1:
         getlocal1
         callpropvoid QName(Namespace("mx.core:IInvalidating"),"invalidateSize"), 0
         getlocal1
         callpropvoid QName(Namespace("mx.core:IInvalidating"),"invalidateDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function invalidateDisplayList() : void
      {
         trait method QName(PackageNamespace(""),"invalidateDisplayList")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateDisplayListFlag")
         iftrue ofs0
         getlocal0
         pushtrue
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateDisplayListFlag")
         getlocal0
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isOnDisplayList"), 0
         convert_b
         dup
         iffalse ofs1
         pop
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         convert_b
         ofs1:
         iffalse ofs0
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"invalidateDisplayList"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function invalidateTransform() : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"updatePending")
         pushfalse
         equals
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushtrue
         setproperty QName(PackageNamespace(""),"updatePending")
         getlocal0
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isOnDisplayList"), 0
         coerce_a
         convert_b
         dup
         iffalse ofs2
         pop
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         coerce_a
         convert_b
         ofs2:
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateDisplayListFlag")
         pushfalse
         equals
         ofs3:
         iffalse ofs1
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"invalidateDisplayList"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function invalidateLayoutDirection() : void
      {
         trait method QName(PackageNamespace(""),"invalidateLayoutDirection")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 10
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"ILayoutDirectionElement")
         setlocal1
         pushbyte 0
         setlocal 4
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IVisualElementContainer")
         setlocal 5
         pushbyte 0
         setlocal 6
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IVisualElement")
         setlocal 7
         pushbyte 0
         setlocal 8
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal 9
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"ILayoutDirectionElement")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"ILayoutDirectionElement")
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         coerce_s
         setlocal2
         getlocal1
         iffalse ofs0
         getlocal1
         getproperty QName(Namespace("mx.core:ILayoutDirectionElement"),"layoutDirection")
         getlocal2
         equals
         not
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace("mx.core"),"LayoutDirection")
         getproperty QName(PackageNamespace(""),"LTR")
         getlocal2
         equals
         not
         ofs1:
         convert_b
         setlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs2
         getlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"mirror")
         equals
         not
         jump ofs3
         ofs2:
         getlocal3
         convert_b
         ofs3:
         iffalse ofs4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs5
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs5:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal3
         setproperty QName(PackageNamespace(""),"mirror")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         setproperty QName(PackageNamespace(""),"layoutWidth")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         ofs4:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"oldLayoutDirection")
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         ifeq ofs6
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IVisualElementContainer")
         istypelate
         iffalse ofs7
         findpropstrict QName(PackageNamespace("mx.core"),"IVisualElementContainer")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IVisualElementContainer"), 1
         coerce QName(PackageNamespace("mx.core"),"IVisualElementContainer")
         dup
         setlocal 5
         getproperty QName(Namespace("mx.core:IVisualElementContainer"),"numElements")
         convert_i
         setlocal 6
         pushbyte 0
         setlocal 4
         jump ofs8
         ofs9:
         label
         getlocal 5
         getlocal 4
         callproperty QName(Namespace("mx.core:IVisualElementContainer"),"getElementAt"), 1
         coerce QName(PackageNamespace("mx.core"),"IVisualElement")
         dup
         setlocal 7
         convert_b
         dup
         iffalse ofs10
         pop
         getlocal 7
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         not
         ofs10:
         iffalse ofs11
         getlocal 7
         callpropvoid QName(Namespace("mx.core:ILayoutDirectionElement"),"invalidateLayoutDirection"), 0
         ofs11:
         inclocal_i 4
         ofs8:
         getlocal 4
         getlocal 6
         iflt ofs9
         jump ofs6
         ofs7:
         getlex QName(PackageNamespace(""),"numChildren")
         convert_i
         setlocal 8
         pushbyte 0
         setlocal 4
         jump ofs12
         ofs13:
         label
         findpropstrict QName(PackageNamespace(""),"getChildAt")
         getlocal 4
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         dup
         setlocal 9
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         not
         dup
         iffalse ofs14
         pop
         getlocal 9
         getlex QName(PackageNamespace("mx.core"),"ILayoutDirectionElement")
         istypelate
         ofs14:
         iffalse ofs15
         findpropstrict QName(PackageNamespace("mx.core"),"ILayoutDirectionElement")
         getlocal 9
         callproperty QName(PackageNamespace("mx.core"),"ILayoutDirectionElement"), 1
         callpropvoid QName(Namespace("mx.core:ILayoutDirectionElement"),"invalidateLayoutDirection"), 0
         ofs15:
         inclocal_i 4
         ofs12:
         getlocal 4
         getlocal 8
         iflt ofs13
         ofs6:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function transformOffsetsChangedHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"transformOffsetsChangedHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function isOnDisplayList() : Boolean
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"isOnDisplayList")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 11
         maxscopedepth 16
         trait slot QName(PackageInternalNs("mx.core"),"p")
         slotid 1
         type QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal1
         pushscope
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setslot 1
         ofs0:
         getscopeobject 1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         iffalse ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         jump ofs2
         ofs1:
         getlocal0
         getsuper QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         ofs2:
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setslot 1
         ofs3:
         jump ofs4
         ofs5:
         getlocal0
         pushscope
         getlocal1
         pushscope
         newcatch 0
         dup
         setlocal2
         dup
         pushscope
         swap
         setslot 1
         pushtrue
         returnvalue
         popscope
         kill 2
         ofs4:
         getscopeobject 1
         getslot 1
         iffalse ofs6
         pushtrue
         jump ofs7
         ofs6:
         pushfalse
         ofs7:
         returnvalue
         end ; code
         try from ofs0 to ofs3 target ofs5 type QName(PackageNamespace(""),"SecurityError") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      public function stylesInitialized() : void
      {
         trait method QName(PackageNamespace(""),"stylesInitialized")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function styleChanged(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"styleChanged")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"styleChanged"), 2
         getlocal1
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal1
         pushstring "styleName"
         equals
         not
         ofs0:
         iffalse ofs1
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         getlocal1
         pushstring "Changed"
         add
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs2
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         getlocal1
         pushstring "Changed"
         add
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs2:
         jump ofs3
         ofs1:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "allStylesChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs3
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "allStylesChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function validateNow() : void
      {
         trait method QName(PackageNamespace(""),"validateNow")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlocal0
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"validateClient"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function validateBaselinePosition() : Boolean
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"validateBaselinePosition")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         pushnan
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         iftrue ofs0
         pushfalse
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"setActualSizeCalled")
         not
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         pushbyte 0
         equals
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         pushbyte 0
         equals
         ofs1:
         iffalse ofs2
         getlocal0
         callpropvoid QName(PackageNamespace(""),"validateNow"), 0
         getlocal0
         callproperty QName(PackageNamespace(""),"getExplicitOrMeasuredWidth"), 0
         convert_d
         setlocal1
         getlocal0
         callproperty QName(PackageNamespace(""),"getExplicitOrMeasuredHeight"), 0
         convert_d
         setlocal2
         getlocal0
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setActualSize"), 2
         ofs2:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"validateNow"), 0
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function callLater(param1:Function, param2:Array = null) : void
      {
         trait method QName(PackageNamespace(""),"callLater")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Function")
         param QName(PackageNamespace(""),"Array")
         optional Null()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"methodQueue")
         findpropstrict QName(PrivateNamespace(null,"#UIComponent/1"),"MethodQueueElement")
         getlocal1
         getlocal2
         constructprop QName(PrivateNamespace(null,"#UIComponent/1"),"MethodQueueElement"), 2
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal3
         getlocal3
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal3
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         coerce_a
         convert_b
         dup
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"usingBridge")
         coerce_a
         convert_b
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         iftrue ofs2
         getlocal3
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"RENDER")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 2
         getlocal3
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 2
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         ofs2:
         getlocal3
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         iffalse ofs1
         getlocal3
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         callpropvoid QName(PackageNamespace(""),"invalidate"), 0
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function cancelAllCallLaters() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"cancelAllCallLaters")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlocal1
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         coerce_a
         convert_b
         dup
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"usingBridge")
         coerce_a
         convert_b
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         iffalse ofs1
         getlocal1
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"RENDER")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"removeEventListener"), 2
         getlocal1
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"removeEventListener"), 2
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"methodQueue")
         pushbyte 0
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function validateProperties() : void
      {
         trait method QName(PackageNamespace(""),"validateProperties")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidatePropertiesFlag")
         iffalse ofs0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"commitProperties"), 0
         getlocal0
         pushfalse
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidatePropertiesFlag")
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function commitProperties() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"commitProperties")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         pushnan
         setlocal2
         pushnull
         coerce_s
         setlocal3
         pushnull
         coerce QName(PackageNamespace("mx.core"),"UIComponent")
         setlocal 4
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         ifeq ofs1
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         divide
         callproperty QName(PackageNamespace(""),"abs"), 1
         convert_d
         setlocal1
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs2
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         getlocal1
         multiply
         initproperty QName(PackageNamespace(""),"explicitMinWidth")
         ofs2:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs3
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         getlocal1
         multiply
         initproperty QName(PackageNamespace(""),"explicitWidth")
         ofs3:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs4
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         getlocal1
         multiply
         initproperty QName(PackageNamespace(""),"explicitMaxWidth")
         ofs4:
         getlocal0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         getlocal1
         multiply
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         getlocal0
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleX")
         dup
         setlocal 5
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         getlocal 5
         kill 5
         setsuper QName(PackageNamespace(""),"scaleX")
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         ifeq ofs5
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         divide
         callproperty QName(PackageNamespace(""),"abs"), 1
         convert_d
         setlocal2
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs6
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         getlocal2
         multiply
         initproperty QName(PackageNamespace(""),"explicitMinHeight")
         ofs6:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs7
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         getlocal2
         multiply
         initproperty QName(PackageNamespace(""),"explicitHeight")
         ofs7:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs8
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         getlocal2
         multiply
         initproperty QName(PackageNamespace(""),"explicitMaxHeight")
         ofs8:
         getlocal0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         getlocal2
         multiply
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         getlocal0
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_scaleY")
         dup
         setlocal 5
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         getlocal 5
         kill 5
         setsuper QName(PackageNamespace(""),"scaleY")
         ofs5:
         jump ofs9
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateDeferred")
         pushnull
         ifeq ofs10
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateDeferred")
         coerce_s
         setlocal3
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateDeferred")
         getlocal0
         getlocal3
         initproperty QName(PackageNamespace(""),"currentState")
         ofs10:
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         ofs9:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateChanged")
         convert_b
         dup
         iffalse ofs11
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"initialized")
         not
         ofs11:
         iffalse ofs12
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateChanged")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"commitCurrentState"), 0
         ofs12:
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnge ofs13
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         astypelate
         coerce QName(PackageNamespace("mx.core"),"UIComponent")
         setlocal 4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"oldLayoutDirection")
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         equals
         not
         dup
         iftrue ofs14
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"parentChangedFlag")
         convert_b
         ofs14:
         dup
         iftrue ofs15
         pop
         getlocal 4
         coerce_a
         convert_b
         dup
         iffalse ofs15
         pop
         getlocal 4
         getproperty QName(PackageNamespace(""),"layoutDirection")
         getlocal 4
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"oldLayoutDirection")
         equals
         not
         coerce_a
         convert_b
         ofs15:
         iffalse ofs13
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateLayoutDirection"), 0
         ofs13:
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldX")
         equals
         not
         dup
         iftrue ofs16
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldY")
         equals
         not
         ofs16:
         iffalse ofs17
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"dispatchMoveEvent"), 0
         ofs17:
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldWidth")
         equals
         not
         dup
         iftrue ofs18
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldHeight")
         equals
         not
         ofs18:
         iffalse ofs19
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"dispatchResizeEvent"), 0
         ofs19:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorStringChanged")
         iffalse ofs20
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"errorStringChanged")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"setBorderColorForErrorString"), 0
         ofs20:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"blendModeChanged")
         iffalse ofs21
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"blendModeChanged")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"blendShaderChanged")
         iftrue ofs22
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_blendMode")
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendMode")
         jump ofs21
         ofs22:
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"blendShaderChanged")
         getlocal0
         getlex QName(PackageNamespace("flash.display"),"BlendMode")
         getproperty QName(PackageNamespace(""),"NORMAL")
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendMode")
         jump ofs23
         ofs24:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"ColorShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"ColorShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs25:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"ColorDodgeShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"ColorDodgeShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs26:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"ColorBurnShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"ColorBurnShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs27:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"ExclusionShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"ExclusionShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs28:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"HueShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"HueShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs29:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"LuminosityShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"LuminosityShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs30:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"SaturationShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"SaturationShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs31:
         label
         getlocal0
         findpropstrict QName(PackageNamespace("mx.graphics.shaderClasses"),"SoftLightShader")
         constructprop QName(PackageNamespace("mx.graphics.shaderClasses"),"SoftLightShader"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$blendShader")
         jump ofs21
         ofs32:
         label
         jump ofs21
         ofs23:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_blendMode")
         setlocal 5
         pushstring "color"
         getlocal 5
         ifstrictne ofs33
         pushbyte 0
         jump ofs34
         ofs33:
         pushstring "colordodge"
         getlocal 5
         ifstrictne ofs35
         pushbyte 1
         jump ofs34
         ofs35:
         pushstring "colorburn"
         getlocal 5
         ifstrictne ofs36
         pushbyte 2
         jump ofs34
         ofs36:
         pushstring "exclusion"
         getlocal 5
         ifstrictne ofs37
         pushbyte 3
         jump ofs34
         ofs37:
         pushstring "hue"
         getlocal 5
         ifstrictne ofs38
         pushbyte 4
         jump ofs34
         ofs38:
         pushstring "luminosity"
         getlocal 5
         ifstrictne ofs39
         pushbyte 5
         jump ofs34
         ofs39:
         pushstring "saturation"
         getlocal 5
         ifstrictne ofs40
         pushbyte 6
         jump ofs34
         ofs40:
         pushstring "softlight"
         getlocal 5
         ifstrictne ofs41
         pushbyte 7
         jump ofs34
         ofs41:
         jump ofs42
         pushbyte 8
         jump ofs42
         ofs42:
         pushbyte 8
         ofs34:
         kill 5
         lookupswitch ofs32, [ofs24, ofs25, ofs26, ofs27, ofs28, ofs29, ofs30, ofs31, ofs32]
         ofs21:
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"parentChangedFlag")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function validateSize(param1:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"validateSize")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal2
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal3
         pushfalse
         setlocal 4
         getlocal1
         iffalse ofs0
         pushbyte 0
         setlocal2
         jump ofs1
         ofs2:
         label
         findpropstrict QName(PackageNamespace(""),"getChildAt")
         getlocal2
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal3
         getlocal3
         getlex QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         istypelate
         iffalse ofs3
         getlocal3
         getlex QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         astypelate
         pushtrue
         callpropvoid QName(Namespace("mx.managers:ILayoutManagerClient"),"validateSize"), 1
         ofs3:
         inclocal_i 2
         ofs1:
         getlocal2
         getlex QName(PackageNamespace(""),"numChildren")
         iflt ofs2
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateSizeFlag")
         iffalse ofs4
         getlocal0
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"measureSizes"), 0
         convert_b
         dup
         setlocal 4
         convert_b
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"includeInLayout")
         convert_b
         ofs5:
         iffalse ofs4
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function canSkipMeasurement() : Boolean
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"canSkipMeasurement")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs0
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function measureSizes() : Boolean
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"measureSizes")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal2
         pushnan
         setlocal3
         pushnan
         setlocal 4
         pushnan
         setlocal 5
         pushfalse
         setlocal1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateSizeFlag")
         iftrue ofs0
         getlocal1
         returnvalue
         ofs0:
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"canSkipMeasurement"), 0
         iffalse ofs1
         getlocal0
         pushfalse
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateSizeFlag")
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinWidth")
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinHeight")
         jump ofs2
         ofs1:
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         callproperty QName(PackageNamespace(""),"abs"), 1
         convert_d
         setlocal 4
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         callproperty QName(PackageNamespace(""),"abs"), 1
         convert_d
         setlocal 5
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs3
         getlocal 4
         pushbyte 1
         ifeq ofs4
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinWidth")
         getlocal 4
         divide
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinWidth")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredWidth")
         getlocal 4
         divide
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredWidth")
         ofs4:
         getlocal 5
         pushbyte 1
         ifeq ofs3
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinHeight")
         getlocal 5
         divide
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinHeight")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredHeight")
         getlocal 5
         divide
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredHeight")
         ofs3:
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"measure"), 0
         getlocal0
         pushfalse
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateSizeFlag")
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredWidth")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         lessthan
         ofs5:
         iffalse ofs6
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         initproperty QName(PackageNamespace(""),"measuredWidth")
         ofs6:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs7
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredWidth")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         greaterthan
         ofs7:
         iffalse ofs8
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         initproperty QName(PackageNamespace(""),"measuredWidth")
         ofs8:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs9
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredHeight")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         lessthan
         ofs9:
         iffalse ofs10
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         initproperty QName(PackageNamespace(""),"measuredHeight")
         ofs10:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs11
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredHeight")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         greaterthan
         ofs11:
         iffalse ofs12
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         initproperty QName(PackageNamespace(""),"measuredHeight")
         ofs12:
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs2
         getlocal 4
         pushbyte 1
         ifeq ofs13
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinWidth")
         getlocal 4
         multiply
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinWidth")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredWidth")
         getlocal 4
         multiply
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredWidth")
         ofs13:
         getlocal 5
         pushbyte 1
         ifeq ofs2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinHeight")
         getlocal 5
         multiply
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredMinHeight")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredHeight")
         getlocal 5
         multiply
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_measuredHeight")
         ofs2:
         getlocal0
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"adjustSizesForScaleChanges"), 0
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldMinWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs14
         getlocal0
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs15
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         convert_d
         jump ofs16
         ofs15:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredMinWidth")
         convert_d
         ofs16:
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldMinWidth")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs17
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         convert_d
         jump ofs18
         ofs17:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredMinHeight")
         convert_d
         ofs18:
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldMinHeight")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs19
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         convert_d
         jump ofs20
         ofs19:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredWidth")
         convert_d
         ofs20:
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldExplicitWidth")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs21
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         convert_d
         jump ofs22
         ofs21:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredHeight")
         convert_d
         ofs22:
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldExplicitHeight")
         pushtrue
         setlocal1
         jump ofs23
         ofs14:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs24
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         convert_d
         jump ofs25
         ofs24:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredMinWidth")
         convert_d
         ofs25:
         convert_d
         setlocal3
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldMinWidth")
         ifeq ofs26
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldMinWidth")
         pushtrue
         setlocal1
         ofs26:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs27
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         convert_d
         jump ofs28
         ofs27:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredMinHeight")
         convert_d
         ofs28:
         convert_d
         setlocal3
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldMinHeight")
         ifeq ofs29
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldMinHeight")
         pushtrue
         setlocal1
         ofs29:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs30
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         convert_d
         jump ofs31
         ofs30:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredWidth")
         convert_d
         ofs31:
         convert_d
         setlocal3
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldExplicitWidth")
         ifeq ofs32
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldExplicitWidth")
         pushtrue
         setlocal1
         ofs32:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs33
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         convert_d
         jump ofs34
         ofs33:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredHeight")
         convert_d
         ofs34:
         convert_d
         setlocal3
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldExplicitHeight")
         ifeq ofs23
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldExplicitHeight")
         pushtrue
         setlocal1
         ofs23:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function measure() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"measure")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"measuredMinWidth")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"measuredMinHeight")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"measuredWidth")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"measuredHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function adjustSizesForScaleChanges() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"adjustSizesForScaleChanges")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         convert_d
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         convert_d
         setlocal2
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         ifeq ofs0
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         divide
         callproperty QName(PackageNamespace(""),"abs"), 1
         convert_d
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         iffalse ofs2
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinWidth")
         getlocal3
         multiply
         initproperty QName(PackageNamespace(""),"explicitMinWidth")
         ofs2:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs3
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         getlocal3
         multiply
         initproperty QName(PackageNamespace(""),"explicitWidth")
         ofs3:
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         iffalse ofs1
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxWidth")
         getlocal3
         multiply
         initproperty QName(PackageNamespace(""),"explicitMaxWidth")
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         ofs0:
         getlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         ifeq ofs4
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs5
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         divide
         callproperty QName(PackageNamespace(""),"abs"), 1
         convert_d
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         iffalse ofs6
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMinHeight")
         getlocal3
         multiply
         initproperty QName(PackageNamespace(""),"explicitMinHeight")
         ofs6:
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         iffalse ofs7
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         getlocal3
         multiply
         initproperty QName(PackageNamespace(""),"explicitHeight")
         ofs7:
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         iffalse ofs5
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitMaxHeight")
         getlocal3
         multiply
         initproperty QName(PackageNamespace(""),"explicitMaxHeight")
         ofs5:
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getExplicitOrMeasuredWidth() : Number
      {
         trait method QName(PackageNamespace(""),"getExplicitOrMeasuredWidth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitWidth")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredWidth")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getExplicitOrMeasuredHeight() : Number
      {
         trait method QName(PackageNamespace(""),"getExplicitOrMeasuredHeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"explicitHeight")
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"measuredHeight")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function get unscaledWidth() : Number
      {
         trait getter QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledWidth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function getUnscaledWidth() : Number
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getUnscaledWidth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledWidth")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function setUnscaledWidth(param1:Number) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"setUnscaledWidth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         convert_d
         setlocal2
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal2
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleX")
         callproperty QName(PackageNamespace(""),"abs"), 1
         multiply
         convert_d
         setlocal2
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitWidth")
         getlocal2
         ifne ofs1
         returnvoid
         ofs1:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs2
         getlocal0
         getlex QName(PackageNamespace(""),"NaN")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentWidth")
         ofs2:
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitWidth")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function get unscaledHeight() : Number
      {
         trait getter QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledHeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         callproperty QName(PackageNamespace(""),"abs"), 1
         divide
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function getUnscaledHeight() : Number
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getUnscaledHeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledHeight")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function setUnscaledHeight(param1:Number) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"setUnscaledHeight")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         convert_d
         setlocal2
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs0
         getlocal2
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldScaleY")
         callproperty QName(PackageNamespace(""),"abs"), 1
         multiply
         convert_d
         setlocal2
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitHeight")
         getlocal2
         ifne ofs1
         returnvoid
         ofs1:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs2
         getlocal0
         getlex QName(PackageNamespace(""),"NaN")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_percentHeight")
         ofs2:
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_explicitHeight")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateSize"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function measureText(param1:String) : TextLineMetrics
      {
         trait method QName(PackageNamespace(""),"measureText")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace("flash.text"),"TextLineMetrics")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"determineTextFormatFromStyles"), 0
         getlocal1
         callproperty QName(PackageNamespace(""),"measureText"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function measureHTMLText(param1:String) : TextLineMetrics
      {
         trait method QName(PackageNamespace(""),"measureHTMLText")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace("flash.text"),"TextLineMetrics")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"determineTextFormatFromStyles"), 0
         getlocal1
         callproperty QName(PackageNamespace(""),"measureHTMLText"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function validateMatrix() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"PerspectiveProjection")
         setlocal1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         equals
         not
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"updatePending")
         pushtrue
         equals
         ofs0:
         iffalse ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"applyComputedMatrix"), 0
         ofs1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_maintainProjectionCenter")
         iffalse ofs2
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"perspectiveProjection")
         coerce QName(PackageNamespace("flash.geom"),"PerspectiveProjection")
         setlocal1
         getlocal1
         pushnull
         ifeq ofs2
         getlocal1
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledWidth")
         pushbyte 2
         divide
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledHeight")
         pushbyte 2
         divide
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         setproperty QName(PackageNamespace(""),"projectionCenter")
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function validateDisplayList() : void
      {
         trait method QName(PackageNamespace(""),"validateDisplayList")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         pushnan
         setlocal2
         pushnan
         setlocal3
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"oldLayoutDirection")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateDisplayListFlag")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         astypelate
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlocal1
         iffalse ofs1
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"isProxy")
         convert_b
         dup
         iftrue ofs2
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         getproperty QName(Namespace("mx.managers:ISystemManager"),"topLevelSystemManager")
         equals
         dup
         iffalse ofs2
         pop
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"document")
         getlocal0
         equals
         not
         ofs2:
         iffalse ofs1
         getlocal0
         getlocal0
         callproperty QName(PackageNamespace(""),"getExplicitOrMeasuredWidth"), 0
         getlocal0
         callproperty QName(PackageNamespace(""),"getExplicitOrMeasuredHeight"), 0
         callpropvoid QName(PackageNamespace(""),"setActualSize"), 2
         ofs1:
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         convert_d
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         convert_d
         setlocal3
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs3
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         pushbyte 0
         equals
         iffalse ofs4
         pushbyte 0
         convert_d
         jump ofs5
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         divide
         convert_d
         ofs5:
         convert_d
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         pushbyte 0
         equals
         iffalse ofs6
         pushbyte 0
         convert_d
         jump ofs7
         ofs6:
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         divide
         convert_d
         ofs7:
         convert_d
         setlocal3
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"lastUnscaledWidth")
         subtract
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushdouble 0.00001
         ifnlt ofs8
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"lastUnscaledWidth")
         convert_d
         setlocal2
         ofs8:
         getlex QName(PackageNamespace(""),"Math")
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"lastUnscaledHeight")
         subtract
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushdouble 0.00001
         ifnlt ofs3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"lastUnscaledHeight")
         convert_d
         setlocal3
         ofs3:
         getlocal0
         getlocal2
         getlocal3
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"updateDisplayList"), 2
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"lastUnscaledWidth")
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"lastUnscaledHeight")
         getlocal0
         pushfalse
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"invalidateDisplayListFlag")
         jump ofs9
         ofs0:
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs9:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function updateDisplayList(param1:Number, param2:Number) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"updateDisplayList")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getConstraintValue(param1:String) : *
      {
         trait method QName(PackageNamespace(""),"getConstraintValue")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setConstraintValue(param1:String, param2:*) : void
      {
         trait method QName(PackageNamespace(""),"setConstraintValue")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get left() : Object
      {
         trait getter QName(PackageNamespace(""),"left")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "left"
         callproperty QName(PackageNamespace(""),"getConstraintValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set left(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"left")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "left"
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         coerce_a
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"undefined")
         coerce_a
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setConstraintValue"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get right() : Object
      {
         trait getter QName(PackageNamespace(""),"right")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "right"
         callproperty QName(PackageNamespace(""),"getConstraintValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set right(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"right")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "right"
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         coerce_a
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"undefined")
         coerce_a
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setConstraintValue"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get top() : Object
      {
         trait getter QName(PackageNamespace(""),"top")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "top"
         callproperty QName(PackageNamespace(""),"getConstraintValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set top(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"top")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "top"
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         coerce_a
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"undefined")
         coerce_a
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setConstraintValue"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get bottom() : Object
      {
         trait getter QName(PackageNamespace(""),"bottom")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "bottom"
         callproperty QName(PackageNamespace(""),"getConstraintValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set bottom(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"bottom")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "bottom"
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         coerce_a
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"undefined")
         coerce_a
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setConstraintValue"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get horizontalCenter() : Object
      {
         trait getter QName(PackageNamespace(""),"horizontalCenter")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "horizontalCenter"
         callproperty QName(PackageNamespace(""),"getConstraintValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set horizontalCenter(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"horizontalCenter")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "horizontalCenter"
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         coerce_a
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"undefined")
         coerce_a
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setConstraintValue"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get verticalCenter() : Object
      {
         trait getter QName(PackageNamespace(""),"verticalCenter")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "verticalCenter"
         callproperty QName(PackageNamespace(""),"getConstraintValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set verticalCenter(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"verticalCenter")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "verticalCenter"
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         coerce_a
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"undefined")
         coerce_a
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setConstraintValue"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get baseline() : Object
      {
         trait getter QName(PackageNamespace(""),"baseline")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "baseline"
         callproperty QName(PackageNamespace(""),"getConstraintValue"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set baseline(param1:Object) : void
      {
         trait setter QName(PackageNamespace(""),"baseline")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "baseline"
         getlocal1
         pushnull
         ifeq ofs0
         getlocal1
         coerce_a
         jump ofs1
         ofs0:
         getlex QName(PackageNamespace(""),"undefined")
         coerce_a
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setConstraintValue"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function horizontalGradientMatrix(param1:Number, param2:Number, param3:Number, param4:Number) : Matrix
      {
         trait method QName(PackageNamespace(""),"horizontalGradientMatrix")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"tempMatrix")
         getlocal3
         getlocal 4
         pushbyte 0
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"createGradientBox"), 5
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"tempMatrix")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function verticalGradientMatrix(param1:Number, param2:Number, param3:Number, param4:Number) : Matrix
      {
         trait method QName(PackageNamespace(""),"verticalGradientMatrix")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"tempMatrix")
         getlocal3
         getlocal 4
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 2
         divide
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"createGradientBox"), 5
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"tempMatrix")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function drawRoundRect(param1:Number, param2:Number, param3:Number, param4:Number, param5:Object = null, param6:Object = null, param7:Object = null, param8:Object = null, param9:String = null, param10:Array = null, param11:Object = null) : void
      {
         trait method QName(PackageNamespace(""),"drawRoundRect")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"Object")
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 10
         localcount 17
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 13
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 14
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal 15
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 16
         getlex QName(PackageNamespace(""),"graphics")
         coerce QName(PackageNamespace("flash.display"),"Graphics")
         setlocal 12
         getlocal3
         not
         dup
         iftrue ofs0
         pop
         getlocal 4
         not
         ofs0:
         iffalse ofs1
         returnvoid
         ofs1:
         getlocal 6
         pushnull
         ifstricteq ofs2
         getlocal 6
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         iffalse ofs3
         getlocal 7
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         iffalse ofs4
         getlocal 7
         getlex QName(PackageNamespace(""),"Array")
         astypelate
         coerce QName(PackageNamespace(""),"Array")
         setlocal 14
         jump ofs5
         ofs4:
         getlocal 7
         getlocal 7
         newarray 2
         coerce QName(PackageNamespace(""),"Array")
         setlocal 14
         ofs5:
         getlocal 10
         iftrue ofs6
         pushbyte 0
         pushshort 255
         newarray 2
         coerce QName(PackageNamespace(""),"Array")
         setlocal 10
         ofs6:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal 15
         getlocal 8
         iffalse ofs7
         getlocal 8
         getlex QName(PackageNamespace("flash.geom"),"Matrix")
         istypelate
         iffalse ofs8
         findpropstrict QName(PackageNamespace("flash.geom"),"Matrix")
         getlocal 8
         callproperty QName(PackageNamespace("flash.geom"),"Matrix"), 1
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal 15
         jump ofs7
         ofs8:
         findpropstrict QName(PackageNamespace("flash.geom"),"Matrix")
         constructprop QName(PackageNamespace("flash.geom"),"Matrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal 15
         getlocal 8
         getlex QName(PackageNamespace(""),"Number")
         istypelate
         iffalse ofs9
         getlocal 15
         getlocal3
         getlocal 4
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal 8
         callproperty QName(PackageNamespace(""),"Number"), 1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         pushshort 180
         divide
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"createGradientBox"), 5
         jump ofs7
         ofs9:
         getlocal 15
         getlocal 8
         getproperty Multiname("w",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 8
         getproperty Multiname("h",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 8
         getproperty Multiname("r",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 8
         getproperty Multiname("x",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 8
         getproperty Multiname("y",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"createGradientBox"), 5
         ofs7:
         getlocal 9
         getlex QName(PackageNamespace("flash.display"),"GradientType")
         getproperty QName(PackageNamespace(""),"RADIAL")
         ifne ofs10
         getlocal 12
         getlex QName(PackageNamespace("flash.display"),"GradientType")
         getproperty QName(PackageNamespace(""),"RADIAL")
         getlocal 6
         getlex QName(PackageNamespace(""),"Array")
         astypelate
         getlocal 14
         getlocal 10
         getlocal 15
         callpropvoid QName(PackageNamespace(""),"beginGradientFill"), 5
         jump ofs11
         ofs10:
         getlocal 12
         getlex QName(PackageNamespace("flash.display"),"GradientType")
         getproperty QName(PackageNamespace(""),"LINEAR")
         getlocal 6
         getlex QName(PackageNamespace(""),"Array")
         astypelate
         getlocal 14
         getlocal 10
         getlocal 15
         callpropvoid QName(PackageNamespace(""),"beginGradientFill"), 5
         ofs11:
         jump ofs2
         ofs3:
         getlocal 12
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal 6
         callproperty QName(PackageNamespace(""),"Number"), 1
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal 7
         callproperty QName(PackageNamespace(""),"Number"), 1
         callpropvoid QName(PackageNamespace(""),"beginFill"), 2
         ofs2:
         getlocal 5
         iftrue ofs12
         getlocal 12
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"drawRect"), 4
         jump ofs13
         ofs12:
         getlocal 5
         getlex QName(PackageNamespace(""),"Number")
         istypelate
         iffalse ofs14
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal 5
         callproperty QName(PackageNamespace(""),"Number"), 1
         pushbyte 2
         multiply
         convert_d
         setlocal 13
         getlocal 12
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         getlocal 13
         getlocal 13
         callpropvoid QName(PackageNamespace(""),"drawRoundRect"), 6
         jump ofs13
         ofs14:
         getlex QName(PackageNamespace("mx.utils"),"GraphicsUtil")
         getlocal 12
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         getlocal 5
         getproperty Multiname("tl",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 5
         getproperty Multiname("tr",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 5
         getproperty Multiname("bl",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 5
         getproperty Multiname("br",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"drawRoundRectComplex"), 9
         ofs13:
         getlocal 11
         iffalse ofs15
         getlocal 11
         getproperty Multiname("r",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 16
         getlex QName(PackageNamespace(""),"Number")
         istypelate
         iffalse ofs16
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal 16
         callproperty QName(PackageNamespace(""),"Number"), 1
         pushbyte 2
         multiply
         convert_d
         setlocal 13
         getlocal 12
         getlocal 11
         getproperty Multiname("x",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 11
         getproperty Multiname("y",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 11
         getproperty Multiname("w",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 11
         getproperty Multiname("h",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 13
         getlocal 13
         callpropvoid QName(PackageNamespace(""),"drawRoundRect"), 6
         jump ofs15
         ofs16:
         getlex QName(PackageNamespace("mx.utils"),"GraphicsUtil")
         getlocal 12
         getlocal 11
         getproperty Multiname("x",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 11
         getproperty Multiname("y",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 11
         getproperty Multiname("w",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 11
         getproperty Multiname("h",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 16
         getproperty Multiname("tl",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 16
         getproperty Multiname("tr",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 16
         getproperty Multiname("bl",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 16
         getproperty Multiname("br",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"drawRoundRectComplex"), 9
         ofs15:
         getlocal 6
         pushnull
         ifstricteq ofs17
         getlocal 12
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         ofs17:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function move(param1:Number, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"move")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushfalse
         setlocal3
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         ifeq ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         getlocal1
         setsuper QName(PackageNamespace(""),"x")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutX")
         ofs2:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "xChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs3
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "xChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs3:
         pushtrue
         setlocal3
         ofs0:
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         ifeq ofs4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs5
         getlocal0
         getlocal2
         setsuper QName(PackageNamespace(""),"y")
         jump ofs6
         ofs5:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal2
         setproperty QName(PackageNamespace(""),"layoutY")
         ofs6:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "yChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs7
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "yChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs7:
         pushtrue
         setlocal3
         ofs4:
         getlocal3
         iffalse ofs8
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"dispatchMoveEvent"), 0
         ofs8:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setActualSize(param1:Number, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"setActualSize")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushfalse
         setlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         getlocal1
         ifeq ofs0
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_width")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutWidth")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         ofs1:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "widthChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs2
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "widthChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs2:
         pushtrue
         setlocal3
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         getlocal2
         ifeq ofs3
         getlocal0
         getlocal2
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_height")
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "heightChanged"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs4
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "heightChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs4:
         pushtrue
         setlocal3
         ofs3:
         getlocal3
         iffalse ofs5
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"dispatchResizeEvent"), 0
         ofs5:
         getlocal0
         pushtrue
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"setActualSizeCalled")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function contentToGlobal(param1:Point) : Point
      {
         trait method QName(PackageNamespace(""),"contentToGlobal")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Point")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"localToGlobal")
         getlocal1
         callproperty QName(PackageNamespace(""),"localToGlobal"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function globalToContent(param1:Point) : Point
      {
         trait method QName(PackageNamespace(""),"globalToContent")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Point")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"globalToLocal")
         getlocal1
         callproperty QName(PackageNamespace(""),"globalToLocal"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function contentToLocal(param1:Point) : Point
      {
         trait method QName(PackageNamespace(""),"contentToLocal")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Point")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function localToContent(param1:Point) : Point
      {
         trait method QName(PackageNamespace(""),"localToContent")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Point")
         returns QName(PackageNamespace("flash.geom"),"Point")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getFocus() : InteractiveObject
      {
         trait method QName(PackageNamespace(""),"getFocus")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.display"),"InteractiveObject")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlocal1
         iftrue ofs0
         pushnull
         returnvalue
         ofs0:
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         iffalse ofs1
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         returnvalue
         ofs1:
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         iffalse ofs2
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         getproperty QName(PackageNamespace(""),"focus")
         returnvalue
         ofs2:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setFocus() : void
      {
         trait method QName(PackageNamespace(""),"setFocus")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal1
         getlocal1
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         coerce_a
         convert_b
         dup
         iftrue ofs0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"usingBridge")
         coerce_a
         convert_b
         ofs0:
         iffalse ofs1
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterDispatcherCount")
         pushbyte 0
         ifne ofs2
         getlocal1
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         getlocal0
         setproperty QName(PackageNamespace(""),"focus")
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         pushnull
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         jump ofs3
         ofs2:
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getlocal0
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         getlocal1
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"setFocusLater")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 2
         ofs3:
         jump ofs4
         ofs1:
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getlocal0
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"setFocusLater")
         callpropvoid QName(PackageNamespace(""),"callLater"), 1
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function getFocusObject() : DisplayObject
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getFocusObject")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.display"),"DisplayObject")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"focusManager")
         coerce QName(PackageNamespace("mx.managers"),"IFocusManager")
         setlocal1
         getlocal1
         not
         dup
         iftrue ofs0
         pop
         getlocal1
         getproperty QName(Namespace("mx.managers:IFocusManager"),"focusPane")
         not
         ofs0:
         iffalse ofs1
         pushnull
         returnvalue
         ofs1:
         getlocal1
         getproperty QName(Namespace("mx.managers:IFocusManager"),"focusPane")
         getproperty QName(PackageNamespace(""),"numChildren")
         pushbyte 0
         equals
         iffalse ofs2
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         jump ofs3
         ofs2:
         getlocal1
         getproperty QName(Namespace("mx.managers:IFocusManager"),"focusPane")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         ofs3:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function drawFocus(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"drawFocus")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         setlocal 4
         pushnull
         coerce QName(PackageNamespace(""),"Class")
         setlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         iftrue ofs0
         returnvoid
         ofs0:
         getlocal0
         callproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getFocusObject"), 0
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"focusManager")
         iffalse ofs1
         getlocal0
         getproperty QName(PackageNamespace(""),"focusManager")
         getproperty QName(Namespace("mx.managers:IFocusManager"),"focusPane")
         coerce QName(PackageNamespace("flash.display"),"Sprite")
         jump ofs2
         ofs1:
         pushnull
         coerce QName(PackageNamespace("flash.display"),"Sprite")
         ofs2:
         coerce QName(PackageNamespace("flash.display"),"Sprite")
         setlocal3
         getlocal1
         convert_b
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"preventDrawFocus")
         not
         ofs3:
         iffalse ofs4
         getlocal3
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         dup
         setlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         ifeq ofs5
         getlocal 4
         iffalse ofs6
         getlocal 4
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         istypelate
         iffalse ofs7
         findpropstrict QName(PackageNamespace("mx.managers"),"ISystemManager")
         getlocal 4
         callproperty QName(PackageNamespace("mx.managers"),"ISystemManager"), 1
         pushnull
         setproperty QName(Namespace("mx.managers:ISystemManager"),"focusPane")
         jump ofs6
         ofs7:
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal 4
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         pushnull
         setproperty QName(Namespace("mx.core:IUIComponent"),"focusPane")
         ofs6:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.managers"),"ISystemManager")
         istypelate
         iffalse ofs8
         findpropstrict QName(PackageNamespace("mx.managers"),"ISystemManager")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.managers"),"ISystemManager"), 1
         getlocal3
         setproperty QName(Namespace("mx.managers:ISystemManager"),"focusPane")
         jump ofs5
         ofs8:
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         getlocal3
         setproperty QName(Namespace("mx.core:IUIComponent"),"focusPane")
         ofs5:
         getlocal0
         pushstring "focusSkin"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce QName(PackageNamespace(""),"Class")
         dup
         setlocal 5
         iftrue ofs9
         returnvoid
         ofs9:
         getlocal2
         convert_b
         dup
         iffalse ofs10
         pop
         getlocal2
         getlocal 5
         istypelate
         not
         ofs10:
         iffalse ofs11
         getlocal3
         getlocal2
         callpropvoid QName(PackageNamespace(""),"removeChild"), 1
         pushnull
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal2
         ofs11:
         getlocal2
         iftrue ofs12
         getlocal 5
         construct 0
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal2
         getlocal2
         pushstring "focus"
         setproperty QName(PackageNamespace(""),"name")
         getlocal3
         getlocal2
         callpropvoid QName(PackageNamespace(""),"addChild"), 1
         ofs12:
         getlocal2
         getlex QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         istypelate
         iffalse ofs13
         findpropstrict QName(PackageNamespace("mx.managers"),"ILayoutManagerClient")
         getlocal2
         callproperty QName(PackageNamespace("mx.managers"),"ILayoutManagerClient"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"nestLevel")
         setproperty QName(Namespace("mx.managers:ILayoutManagerClient"),"nestLevel")
         ofs13:
         getlocal2
         getlex QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         istypelate
         iffalse ofs14
         findpropstrict QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         getlocal2
         callproperty QName(PackageNamespace("mx.styles"),"ISimpleStyleClient"), 1
         getlocal0
         setproperty QName(Namespace("mx.styles:ISimpleStyleClient"),"styleName")
         ofs14:
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("mx.events"),"MoveEvent")
         getproperty QName(PackageNamespace(""),"MOVE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_moveHandler")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 3
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("mx.events"),"MoveEvent")
         getproperty QName(PackageNamespace(""),"MOVE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_moveHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_resizeHandler")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 3
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_resizeHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"REMOVED")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_removedHandler")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 3
         getlocal2
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"hasFocusRect")
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"adjustFocusRect"), 0
         jump ofs15
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"hasFocusRect")
         iffalse ofs15
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"hasFocusRect")
         getlocal2
         iffalse ofs16
         getlocal2
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlocal2
         getlex QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         istypelate
         iffalse ofs16
         findpropstrict QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         getlocal2
         callproperty QName(PackageNamespace("mx.styles"),"ISimpleStyleClient"), 1
         pushnull
         setproperty QName(Namespace("mx.styles:ISimpleStyleClient"),"styleName")
         ofs16:
         findpropstrict QName(PackageNamespace(""),"removeEventListener")
         getlex QName(PackageNamespace("mx.events"),"MoveEvent")
         getproperty QName(PackageNamespace(""),"MOVE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_moveHandler")
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"removeEventListener")
         getlex QName(PackageNamespace("mx.events"),"MoveEvent")
         getproperty QName(PackageNamespace(""),"MOVE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_moveHandler")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 3
         findpropstrict QName(PackageNamespace(""),"removeEventListener")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_resizeHandler")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 3
         findpropstrict QName(PackageNamespace(""),"removeEventListener")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_resizeHandler")
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 2
         findpropstrict QName(PackageNamespace(""),"removeEventListener")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"REMOVED")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"focusObj_removedHandler")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 3
         ofs15:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function adjustFocusRect(param1:DisplayObject = null) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"adjustFocusRect")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         optional Null()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 10
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal2
         pushnan
         setlocal3
         pushnan
         setlocal 6
         pushnan
         setlocal 7
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 8
         pushnan
         setlocal 9
         getlocal1
         iftrue ofs0
         getlocal0
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         ofs0:
         getlocal1
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         iffalse ofs1
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledWidth")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getproperty QName(PackageNamespace(""),"scaleX")
         callproperty QName(PackageNamespace(""),"abs"), 1
         multiply
         convert_d
         setlocal2
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal1
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledHeight")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getproperty QName(PackageNamespace(""),"scaleY")
         callproperty QName(PackageNamespace(""),"abs"), 1
         multiply
         convert_d
         setlocal3
         jump ofs2
         ofs1:
         getlocal1
         getproperty QName(PackageNamespace(""),"width")
         convert_d
         setlocal2
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         convert_d
         setlocal3
         ofs2:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         dup
         iftrue ofs3
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         ofs3:
         iffalse ofs4
         returnvoid
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"focusManager")
         coerce QName(PackageNamespace("mx.managers"),"IFocusManager")
         dup
         setlocal 4
         iftrue ofs5
         returnvoid
         ofs5:
         findpropstrict QName(PackageNamespace("mx.core"),"IFlexDisplayObject")
         getlocal0
         callproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getFocusObject"), 0
         callproperty QName(PackageNamespace("mx.core"),"IFlexDisplayObject"), 1
         coerce QName(PackageNamespace("mx.core"),"IFlexDisplayObject")
         dup
         setlocal 5
         iffalse ofs6
         getlocal0
         getproperty QName(PackageNamespace(""),"errorString")
         convert_b
         dup
         iffalse ofs7
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"errorString")
         pushstring ""
         equals
         not
         ofs7:
         iffalse ofs8
         getlocal0
         pushstring "errorColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 6
         jump ofs9
         ofs8:
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnlt ofs10
         getlocal0
         pushstring "themeColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 6
         jump ofs9
         ofs10:
         getlocal0
         pushstring "focusColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 6
         ofs9:
         getlocal0
         pushstring "focusThickness"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 7
         getlocal 5
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         iffalse ofs11
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleClient")
         getlocal 5
         callproperty QName(PackageNamespace("mx.styles"),"IStyleClient"), 1
         pushstring "focusColor"
         getlocal 6
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"setStyle"), 2
         ofs11:
         getlocal 5
         getlocal2
         pushbyte 2
         getlocal 7
         multiply
         add
         getlocal3
         pushbyte 2
         getlocal 7
         multiply
         add
         callpropvoid QName(Namespace("mx.core:IFlexDisplayObject"),"setActualSize"), 2
         getlocal0
         getproperty QName(PackageNamespace(""),"rotation")
         iffalse ofs12
         getlocal0
         getproperty QName(PackageNamespace(""),"rotation")
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         pushshort 180
         divide
         convert_d
         setlocal 9
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"cos"), 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"sin"), 1
         subtract
         multiply
         subtract
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"cos"), 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"sin"), 1
         add
         multiply
         subtract
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 8
         findpropstrict QName(PackageNamespace("flash.display"),"DisplayObject")
         getlocal 5
         callproperty QName(PackageNamespace("flash.display"),"DisplayObject"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"rotation")
         setproperty QName(PackageNamespace(""),"rotation")
         jump ofs13
         ofs12:
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         subtract
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         subtract
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 8
         findpropstrict QName(PackageNamespace("flash.display"),"DisplayObject")
         getlocal 5
         callproperty QName(PackageNamespace("flash.display"),"DisplayObject"), 1
         pushbyte 0
         setproperty QName(PackageNamespace(""),"rotation")
         ofs13:
         getlocal1
         getproperty QName(PackageNamespace(""),"parent")
         getlocal0
         ifne ofs14
         getlocal 8
         getlocal 8
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 8
         getlocal 8
         getproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs14:
         getlocal1
         getlocal0
         ifeq ofs15
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         convert_b
         dup
         iffalse ofs16
         pop
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"mirror")
         convert_b
         ofs16:
         iffalse ofs15
         getlocal 8
         getlocal 8
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         getlocal1
         getproperty QName(PackageNamespace(""),"width")
         subtract
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs15:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlocal 8
         callproperty QName(PackageNamespace(""),"localToGlobal"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 8
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlocal 8
         callproperty QName(PackageNamespace(""),"globalToLocal"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 8
         getlocal 5
         getlocal 8
         getproperty QName(PackageNamespace(""),"x")
         getlocal 8
         getproperty QName(PackageNamespace(""),"y")
         callpropvoid QName(Namespace("mx.core:IFlexDisplayObject"),"move"), 2
         getlocal 5
         getlex QName(PackageNamespace("mx.core"),"IInvalidating")
         istypelate
         iffalse ofs17
         findpropstrict QName(PackageNamespace("mx.core"),"IInvalidating")
         getlocal 5
         callproperty QName(PackageNamespace("mx.core"),"IInvalidating"), 1
         callpropvoid QName(Namespace("mx.core:IInvalidating"),"validateNow"), 0
         jump ofs6
         ofs17:
         getlocal 5
         getlex QName(PackageNamespace("mx.core"),"IProgrammaticSkin")
         istypelate
         iffalse ofs6
         findpropstrict QName(PackageNamespace("mx.core"),"IProgrammaticSkin")
         getlocal 5
         callproperty QName(PackageNamespace("mx.core"),"IProgrammaticSkin"), 1
         callpropvoid QName(Namespace("mx.core:IProgrammaticSkin"),"validateNow"), 0
         ofs6:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function dispatchPropertyChangeEvent(param1:String, param2:*, param3:*) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"dispatchPropertyChangeEvent")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param null
         param null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         pushstring "propertyChange"
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         getlocal0
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function dispatchMoveEvent() : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"dispatchMoveEvent")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.events"),"MoveEvent")
         setlocal1
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         getlex QName(PackageNamespace("mx.events"),"MoveEvent")
         getproperty QName(PackageNamespace(""),"MOVE")
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.events"),"MoveEvent")
         getlex QName(PackageNamespace("mx.events"),"MoveEvent")
         getproperty QName(PackageNamespace(""),"MOVE")
         constructprop QName(PackageNamespace("mx.events"),"MoveEvent"), 1
         coerce QName(PackageNamespace("mx.events"),"MoveEvent")
         setlocal1
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldX")
         setproperty QName(PackageNamespace(""),"oldX")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldY")
         setproperty QName(PackageNamespace(""),"oldY")
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldX")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldY")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function dispatchResizeEvent() : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"dispatchResizeEvent")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.events"),"ResizeEvent")
         setlocal1
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.events"),"ResizeEvent")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         constructprop QName(PackageNamespace("mx.events"),"ResizeEvent"), 1
         coerce QName(PackageNamespace("mx.events"),"ResizeEvent")
         setlocal1
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldWidth")
         setproperty QName(PackageNamespace(""),"oldWidth")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldHeight")
         setproperty QName(PackageNamespace(""),"oldHeight")
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs0:
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldWidth")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function childXYChanged() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"childXYChanged")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function mapKeycodeForLayoutDirection(param1:KeyboardEvent, param2:Boolean = false) : uint
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"mapKeycodeForLayoutDirection")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("flash.events"),"KeyboardEvent")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getproperty QName(PackageNamespace(""),"keyCode")
         convert_u
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal2
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         getlex QName(PackageNamespace("mx.core"),"LayoutDirection")
         getproperty QName(PackageNamespace(""),"RTL")
         equals
         ofs2:
         iffalse ofs3
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"LEFT")
         convert_u
         setlocal3
         ofs3:
         jump ofs4
         ofs5:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         getlex QName(PackageNamespace("mx.core"),"LayoutDirection")
         getproperty QName(PackageNamespace(""),"RTL")
         ifne ofs6
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"LEFT")
         convert_u
         setlocal3
         ofs6:
         jump ofs4
         ofs7:
         label
         getlocal2
         convert_b
         dup
         iffalse ofs8
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         getlex QName(PackageNamespace("mx.core"),"LayoutDirection")
         getproperty QName(PackageNamespace(""),"RTL")
         equals
         ofs8:
         iffalse ofs9
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"RIGHT")
         convert_u
         setlocal3
         ofs9:
         jump ofs4
         ofs10:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"layoutDirection")
         getlex QName(PackageNamespace("mx.core"),"LayoutDirection")
         getproperty QName(PackageNamespace(""),"RTL")
         ifne ofs11
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"RIGHT")
         convert_u
         setlocal3
         ofs11:
         jump ofs4
         ofs12:
         label
         jump ofs4
         ofs0:
         getlocal3
         setlocal 4
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"DOWN")
         getlocal 4
         ifstrictne ofs13
         pushbyte 0
         jump ofs14
         ofs13:
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"RIGHT")
         getlocal 4
         ifstrictne ofs15
         pushbyte 1
         jump ofs14
         ofs15:
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"UP")
         getlocal 4
         ifstrictne ofs16
         pushbyte 2
         jump ofs14
         ofs16:
         getlex QName(PackageNamespace("flash.ui"),"Keyboard")
         getproperty QName(PackageNamespace(""),"LEFT")
         getlocal 4
         ifstrictne ofs17
         pushbyte 3
         jump ofs14
         ofs17:
         jump ofs18
         pushbyte 4
         jump ofs18
         ofs18:
         pushbyte 4
         ofs14:
         kill 4
         lookupswitch ofs12, [ofs1, ofs5, ofs7, ofs10, ofs12]
         ofs4:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setCurrentState(param1:String, param2:Boolean = true) : void
      {
         trait method QName(PackageNamespace(""),"setCurrentState")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         iffalse ofs0
         getlocal0
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getDefaultState"), 0
         coerce_s
         jump ofs1
         ofs0:
         getlocal1
         coerce_s
         ofs1:
         coerce_s
         setlocal1
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"currentState")
         equals
         not
         dup
         iffalse ofs2
         pop
         getlocal0
         getlocal1
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         convert_b
         dup
         iffalse ofs3
         pop
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"currentState")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         convert_b
         ofs3:
         not
         ofs2:
         iffalse ofs4
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         getlocal0
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IStateClient2")
         istypelate
         dup
         iffalse ofs5
         pop
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"currentState")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         convert_b
         ofs5:
         iffalse ofs6
         pushfalse
         jump ofs7
         ofs6:
         getlocal2
         convert_b
         ofs7:
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"playStateTransition")
         getlocal0
         getproperty QName(PackageNamespace(""),"initialized")
         iffalse ofs8
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"commitCurrentState"), 0
         jump ofs4
         ofs8:
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentStateChanged")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasState(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"hasState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         pushfalse
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 2
         pushnull
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function isBaseState(param1:String) : Boolean
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"isBaseState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         not
         dup
         iftrue ofs0
         pop
         getlocal1
         pushstring ""
         equals
         ofs0:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function getDefaultState() : String
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"getDefaultState")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IStateClient2")
         istypelate
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"states")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PackageNamespace(""),"states")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("name",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce_s
         jump ofs2
         ofs1:
         pushnull
         coerce_s
         ofs2:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function commitCurrentState() : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"commitCurrentState")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.events"),"StateChangeEvent")
         setlocal3
         pushnan
         setlocal 6
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"playStateTransition")
         iffalse ofs0
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getTransition"), 2
         coerce QName(PackageNamespace("mx.states"),"Transition")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("mx.states"),"Transition")
         ofs1:
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"findCommonBaseState"), 2
         coerce_s
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         iffalse ofs2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         coerce_s
         jump ofs3
         ofs2:
         pushstring ""
         ofs3:
         coerce_s
         setlocal 4
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal 5
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         iffalse ofs4
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         getproperty QName(PackageNamespace(""),"autoReverse")
         convert_b
         dup
         iffalse ofs5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"transitionFromState")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         equals
         ofs5:
         dup
         iffalse ofs6
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"transitionToState")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         equals
         ofs6:
         iffalse ofs7
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         getproperty QName(PackageNamespace(""),"effect")
         getproperty QName(Namespace("mx.effects:IEffect"),"duration")
         pushbyte 0
         ifne ofs8
         pushbyte 0
         convert_d
         setlocal 6
         jump ofs7
         ofs8:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         getproperty QName(PackageNamespace(""),"effect")
         getproperty QName(Namespace("mx.effects:IEffect"),"playheadTime")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         getproperty QName(PackageNamespace(""),"effect")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getTotalDuration"), 1
         divide
         convert_d
         setlocal 6
         ofs7:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         getproperty QName(PackageNamespace(""),"effect")
         callpropvoid QName(Namespace("mx.effects:IEffect"),"end"), 0
         ofs4:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"initializeState"), 1
         getlocal1
         iffalse ofs9
         getlocal1
         getproperty QName(PackageNamespace(""),"effect")
         callpropvoid QName(Namespace("mx.effects:IEffect"),"captureStartValues"), 0
         ofs9:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         getlex QName(PackageNamespace("mx.events"),"StateChangeEvent")
         getproperty QName(PackageNamespace(""),"CURRENT_STATE_CHANGING")
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs10
         findpropstrict QName(PackageNamespace("mx.events"),"StateChangeEvent")
         getlex QName(PackageNamespace("mx.events"),"StateChangeEvent")
         getproperty QName(PackageNamespace(""),"CURRENT_STATE_CHANGING")
         constructprop QName(PackageNamespace("mx.events"),"StateChangeEvent"), 1
         coerce QName(PackageNamespace("mx.events"),"StateChangeEvent")
         setlocal3
         getlocal3
         getlocal 4
         setproperty QName(PackageNamespace(""),"oldState")
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         iffalse ofs11
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         coerce_s
         jump ofs12
         ofs11:
         pushstring ""
         ofs12:
         setproperty QName(PackageNamespace(""),"newState")
         getlocal0
         getlocal3
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs10:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         convert_b
         dup
         iffalse ofs13
         pop
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"EXIT_STATE")
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         convert_b
         ofs13:
         iffalse ofs14
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"EXIT_STATE")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs14:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         getlocal2
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"removeState"), 2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"requestedCurrentState")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         getlocal0
         getlocal 4
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         pushtrue
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"stateChanged"), 3
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"currentState")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         iffalse ofs15
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ENTER_STATE")
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs16
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ENTER_STATE")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs16:
         jump ofs17
         ofs15:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         getlocal2
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"applyState"), 2
         ofs17:
         findpropstrict QName(PackageNamespace(""),"hasEventListener")
         getlex QName(PackageNamespace("mx.events"),"StateChangeEvent")
         getproperty QName(PackageNamespace(""),"CURRENT_STATE_CHANGE")
         callproperty QName(PackageNamespace(""),"hasEventListener"), 1
         iffalse ofs18
         findpropstrict QName(PackageNamespace("mx.events"),"StateChangeEvent")
         getlex QName(PackageNamespace("mx.events"),"StateChangeEvent")
         getproperty QName(PackageNamespace(""),"CURRENT_STATE_CHANGE")
         constructprop QName(PackageNamespace("mx.events"),"StateChangeEvent"), 1
         coerce QName(PackageNamespace("mx.events"),"StateChangeEvent")
         setlocal3
         getlocal3
         getlocal 4
         setproperty QName(PackageNamespace(""),"oldState")
         getlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         iffalse ofs19
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         coerce_s
         jump ofs20
         ofs19:
         pushstring ""
         ofs20:
         setproperty QName(PackageNamespace(""),"newState")
         getlocal0
         getlocal3
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs18:
         getlocal1
         iffalse ofs21
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         callpropvoid QName(Namespace("mx.managers:ILayoutManager"),"validateNow"), 0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         getlocal0
         getlocal 4
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"transitionFromState")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentState")
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"transitionToState")
         getlocal1
         getproperty QName(PackageNamespace(""),"effect")
         getlex QName(PackageNamespace("mx.events"),"EffectEvent")
         getproperty QName(PackageNamespace(""),"EFFECT_END")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"transition_effectEndHandler")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 2
         getlocal1
         getproperty QName(PackageNamespace(""),"effect")
         callpropvoid QName(Namespace("mx.effects:IEffect"),"play"), 0
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 6
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs22
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"effect")
         getproperty QName(Namespace("mx.effects:IEffect"),"duration")
         pushbyte 0
         equals
         not
         ofs22:
         iffalse ofs21
         getlocal1
         getproperty QName(PackageNamespace(""),"effect")
         pushbyte 1
         getlocal 6
         subtract
         getlocal0
         getlocal1
         getproperty QName(PackageNamespace(""),"effect")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getTotalDuration"), 1
         multiply
         setproperty QName(Namespace("mx.effects:IEffect"),"playheadTime")
         ofs21:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function getTotalDuration(param1:IEffect) : Number
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"getTotalDuration")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.effects"),"IEffect")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_d
         setlocal2
         findpropstrict QName(PackageNamespace(""),"Object")
         getlocal1
         callproperty QName(PackageNamespace(""),"Object"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         getlex QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectLoaded")
         iftrue ofs0
         findproperty QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectLoaded")
         pushtrue
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectLoaded")
         getlex QName(PackageNamespace("flash.system"),"ApplicationDomain")
         getproperty QName(PackageNamespace(""),"currentDomain")
         pushstring "mx.effects.CompositeEffect"
         callproperty QName(PackageNamespace(""),"hasDefinition"), 1
         iffalse ofs0
         findproperty QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectType")
         findpropstrict QName(PackageNamespace(""),"Class")
         getlex QName(PackageNamespace("flash.system"),"ApplicationDomain")
         getproperty QName(PackageNamespace(""),"currentDomain")
         pushstring "mx.effects.CompositeEffect"
         callproperty QName(PackageNamespace(""),"getDefinition"), 1
         callproperty QName(PackageNamespace(""),"Class"), 1
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectType")
         ofs0:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectType")
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal1
         getlex QName(PrivateNamespace(null,"#UIComponent"),"compositeEffectType")
         istypelate
         ofs1:
         iffalse ofs2
         getlocal3
         getproperty Multiname("compositeDuration",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         convert_d
         setlocal2
         jump ofs3
         ofs2:
         getlocal1
         getproperty QName(Namespace("mx.effects:IEffect"),"duration")
         convert_d
         setlocal2
         ofs3:
         pushstring "repeatDelay"
         getlocal1
         in
         iffalse ofs4
         getlocal3
         getproperty Multiname("repeatDelay",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         convert_i
         jump ofs5
         ofs4:
         pushbyte 0
         ofs5:
         convert_i
         setlocal 4
         pushstring "repeatCount"
         getlocal1
         in
         iffalse ofs6
         getlocal3
         getproperty Multiname("repeatCount",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         convert_i
         jump ofs7
         ofs6:
         pushbyte 0
         ofs7:
         convert_i
         setlocal 5
         pushstring "startDelay"
         getlocal1
         in
         iffalse ofs8
         getlocal3
         getproperty Multiname("startDelay",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         convert_i
         jump ofs9
         ofs8:
         pushbyte 0
         ofs9:
         convert_i
         setlocal 6
         getlocal2
         getlocal 5
         multiply
         getlocal 4
         getlocal 5
         decrement
         multiply
         add
         getlocal 6
         add
         convert_d
         setlocal2
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function transition_effectEndHandler(param1:EffectEvent) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"transition_effectEndHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.events"),"EffectEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_currentTransition")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function getState(param1:String, param2:Boolean = true) : State
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"getState")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace("mx.states"),"State")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"states")
         not
         dup
         iftrue ofs0
         pop
         getlocal0
         getlocal1
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         convert_b
         ofs0:
         iffalse ofs1
         pushnull
         returnvalue
         ofs1:
         pushbyte 0
         setlocal3
         jump ofs2
         ofs3:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"states")
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("name",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal1
         ifne ofs4
         getlocal0
         getproperty QName(PackageNamespace(""),"states")
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         ofs4:
         inclocal_i 3
         ofs2:
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"states")
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs3
         getlocal2
         iffalse ofs5
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"resourceManager")
         pushstring "core"
         pushstring "stateUndefined"
         getlocal1
         newarray 1
         callproperty QName(Namespace("mx.resources:IResourceManager"),"getString"), 3
         coerce_s
         setlocal 4
         findpropstrict QName(PackageNamespace(""),"ArgumentError")
         getlocal 4
         constructprop QName(PackageNamespace(""),"ArgumentError"), 1
         throw
         ofs5:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function findCommonBaseState(param1:String, param2:String) : String
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"findCommonBaseState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 8
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal3
         getlocal0
         getlocal2
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal 4
         getlocal3
         not
         dup
         iftrue ofs0
         pop
         getlocal 4
         not
         ofs0:
         iffalse ofs1
         pushstring ""
         returnvalue
         ofs1:
         getlocal0
         getlocal3
         getproperty QName(PackageNamespace(""),"basedOn")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal0
         getlocal 4
         getproperty QName(PackageNamespace(""),"basedOn")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"isBaseState"), 1
         convert_b
         ofs2:
         iffalse ofs3
         pushstring ""
         returnvalue
         ofs3:
         getlocal0
         getlocal3
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getBaseStates"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal 5
         getlocal0
         getlocal 4
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getBaseStates"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal 6
         pushstring ""
         setlocal 7
         jump ofs4
         ofs5:
         label
         getlocal 5
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"pop"), 0
         coerce_s
         setlocal 7
         getlocal 6
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"pop"), 0
         getlocal 5
         getproperty QName(PackageNamespace(""),"length")
         not
         dup
         iftrue ofs6
         pop
         getlocal 6
         getproperty QName(PackageNamespace(""),"length")
         not
         ofs6:
         iffalse ofs4
         jump ofs7
         ofs4:
         getlocal 5
         getlocal 5
         getproperty QName(PackageNamespace(""),"length")
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 6
         getlocal 6
         getproperty QName(PackageNamespace(""),"length")
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ifeq ofs5
         ofs7:
         getlocal 5
         getproperty QName(PackageNamespace(""),"length")
         convert_b
         dup
         iffalse ofs8
         pop
         getlocal 5
         getlocal 5
         getproperty QName(PackageNamespace(""),"length")
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 4
         getproperty QName(PackageNamespace(""),"name")
         equals
         ofs8:
         iffalse ofs9
         getlocal 4
         getproperty QName(PackageNamespace(""),"name")
         coerce_s
         setlocal 7
         jump ofs10
         ofs9:
         getlocal 6
         getproperty QName(PackageNamespace(""),"length")
         convert_b
         dup
         iffalse ofs11
         pop
         getlocal 6
         getlocal 6
         getproperty QName(PackageNamespace(""),"length")
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal3
         getproperty QName(PackageNamespace(""),"name")
         equals
         ofs11:
         iffalse ofs10
         getlocal3
         getproperty QName(PackageNamespace(""),"name")
         coerce_s
         setlocal 7
         ofs10:
         getlocal 7
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function getBaseStates(param1:State) : Array
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"getBaseStates")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.states"),"State")
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         jump ofs0
         ofs1:
         label
         getlocal2
         getlocal1
         getproperty QName(PackageNamespace(""),"basedOn")
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal0
         getlocal1
         getproperty QName(PackageNamespace(""),"basedOn")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal1
         ofs0:
         getlocal1
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"basedOn")
         convert_b
         ofs2:
         iftrue ofs1
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function removeState(param1:String, param2:String) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"removeState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         pushbyte 0
         setlocal 5
         getlocal0
         getlocal1
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal3
         getlocal1
         getlocal2
         ifne ofs0
         returnvoid
         ofs0:
         getlocal3
         iffalse ofs1
         getlocal3
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"dispatchExitState"), 0
         getlocal3
         getproperty QName(PackageNamespace(""),"overrides")
         coerce QName(PackageNamespace(""),"Array")
         dup
         setlocal 4
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal 5
         jump ofs2
         ofs3:
         label
         getlocal 4
         getlocal 5
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal0
         callpropvoid Multiname("remove",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         getlocal 5
         decrement_i
         setlocal 5
         ofs2:
         getlocal 5
         iftrue ofs3
         getlocal3
         getproperty QName(PackageNamespace(""),"basedOn")
         getlocal2
         ifeq ofs1
         getlocal0
         getlocal3
         getproperty QName(PackageNamespace(""),"basedOn")
         getlocal2
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"removeState"), 2
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function applyState(param1:String, param2:String) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"applyState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         pushbyte 0
         setlocal 5
         getlocal0
         getlocal1
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal3
         getlocal1
         getlocal2
         ifne ofs0
         returnvoid
         ofs0:
         getlocal3
         iffalse ofs1
         getlocal3
         getproperty QName(PackageNamespace(""),"basedOn")
         getlocal2
         ifeq ofs2
         getlocal0
         getlocal3
         getproperty QName(PackageNamespace(""),"basedOn")
         getlocal2
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"applyState"), 2
         ofs2:
         getlocal3
         getproperty QName(PackageNamespace(""),"overrides")
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs3
         ofs4:
         label
         getlocal 4
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal0
         callpropvoid Multiname("apply",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         inclocal_i 5
         ofs3:
         getlocal 5
         getlocal 4
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs4
         getlocal3
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"dispatchEnterState"), 0
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function initializeState(param1:String) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"initializeState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal2
         jump ofs0
         ofs1:
         label
         getlocal2
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initialize"), 0
         getlocal0
         getlocal2
         getproperty QName(PackageNamespace(""),"basedOn")
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getState"), 1
         coerce QName(PackageNamespace("mx.states"),"State")
         setlocal2
         ofs0:
         getlocal2
         iftrue ofs1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function getTransition(param1:String, param2:String) : Transition
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"getTransition")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace("mx.states"),"Transition")
         
         body
         maxstack 2
         localcount 7
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal 6
         pushnull
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal3
         pushbyte 0
         setlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"transitions")
         iftrue ofs0
         pushnull
         returnvalue
         ofs0:
         getlocal1
         iftrue ofs1
         pushstring ""
         setlocal1
         ofs1:
         getlocal2
         iftrue ofs2
         pushstring ""
         setlocal2
         ofs2:
         pushbyte 0
         setlocal 5
         jump ofs3
         ofs4:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"transitions")
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.states"),"Transition")
         dup
         setlocal 6
         getproperty QName(PackageNamespace(""),"fromState")
         pushstring "*"
         equals
         dup
         iffalse ofs5
         pop
         getlocal 6
         getproperty QName(PackageNamespace(""),"toState")
         pushstring "*"
         equals
         ofs5:
         dup
         iffalse ofs6
         pop
         getlocal 4
         pushbyte 1
         lessthan
         ofs6:
         iffalse ofs7
         getlocal 6
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal3
         pushbyte 1
         setlocal 4
         jump ofs8
         ofs7:
         getlocal 6
         getproperty QName(PackageNamespace(""),"fromState")
         getlocal1
         equals
         dup
         iffalse ofs9
         pop
         getlocal 6
         getproperty QName(PackageNamespace(""),"toState")
         pushstring "*"
         equals
         ofs9:
         dup
         iffalse ofs10
         pop
         getlocal 4
         pushbyte 2
         lessthan
         ofs10:
         iffalse ofs11
         getlocal 6
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal3
         pushbyte 2
         setlocal 4
         jump ofs8
         ofs11:
         getlocal 6
         getproperty QName(PackageNamespace(""),"fromState")
         pushstring "*"
         equals
         dup
         iffalse ofs12
         pop
         getlocal 6
         getproperty QName(PackageNamespace(""),"toState")
         getlocal2
         equals
         ofs12:
         dup
         iffalse ofs13
         pop
         getlocal 4
         pushbyte 3
         lessthan
         ofs13:
         iffalse ofs14
         getlocal 6
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal3
         pushbyte 3
         setlocal 4
         jump ofs8
         ofs14:
         getlocal 6
         getproperty QName(PackageNamespace(""),"fromState")
         getlocal1
         equals
         dup
         iffalse ofs15
         pop
         getlocal 6
         getproperty QName(PackageNamespace(""),"toState")
         getlocal2
         equals
         ofs15:
         dup
         iffalse ofs16
         pop
         getlocal 4
         pushbyte 4
         lessthan
         ofs16:
         iffalse ofs8
         getlocal 6
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal3
         pushbyte 4
         setlocal 4
         jump ofs17
         ofs8:
         inclocal_i 5
         ofs3:
         getlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"transitions")
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs4
         ofs17:
         getlocal3
         convert_b
         dup
         iffalse ofs18
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"effect")
         not
         ofs18:
         iffalse ofs19
         pushnull
         coerce QName(PackageNamespace("mx.states"),"Transition")
         setlocal3
         ofs19:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function get currentCSSState() : String
      {
         trait getter QName(ProtectedNamespace("mx.core:UIComponent"),"currentCSSState")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"currentState")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get styleParent() : IAdvancedStyleClient
      {
         trait getter QName(PackageNamespace(""),"styleParent")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.styles"),"IAdvancedStyleClient")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.styles"),"IAdvancedStyleClient")
         astypelate
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function matchesCSSState(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"matchesCSSState")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"currentCSSState")
         getlocal1
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function matchesCSSType(param1:String) : Boolean
      {
         trait method QName(PackageNamespace(""),"matchesCSSType")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getlocal0
         getlocal1
         callproperty QName(PackageNamespace(""),"matchesCSSType"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function initProtoChain() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initProtoChain")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"initProtoChain"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getClassStyleDeclarations() : Array
      {
         trait method QName(PackageNamespace(""),"getClassStyleDeclarations")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getlocal0
         callproperty QName(PackageNamespace(""),"getClassStyleDeclarations"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function regenerateStyleCache(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"regenerateStyleCache")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 5
         getlocal0
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initProtoChain"), 0
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IRawChildrenContainer"), 1
         getproperty QName(Namespace("mx.core:IRawChildrenContainer"),"rawChildren")
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace("mx.core"),"IChildList")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IChildList"), 1
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         ofs1:
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setlocal2
         getlocal2
         getproperty QName(Namespace("mx.core:IChildList"),"numChildren")
         convert_i
         setlocal3
         pushbyte 0
         setlocal 4
         jump ofs2
         ofs3:
         label
         getlocal2
         getlocal 4
         callproperty QName(Namespace("mx.core:IChildList"),"getChildAt"), 1
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 5
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         iffalse ofs4
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleClient")
         getlocal 5
         callproperty QName(PackageNamespace("mx.styles"),"IStyleClient"), 1
         getproperty QName(Namespace("mx.styles:IStyleClient"),"inheritingStyles")
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getproperty QName(PackageNamespace(""),"STYLE_UNINITIALIZED")
         ifeq ofs5
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleClient")
         getlocal 5
         callproperty QName(PackageNamespace("mx.styles"),"IStyleClient"), 1
         getlocal1
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"regenerateStyleCache"), 1
         ofs5:
         jump ofs6
         ofs4:
         getlocal 5
         getlex QName(PackageNamespace("mx.core"),"IUITextField")
         istypelate
         iffalse ofs6
         findpropstrict QName(PackageNamespace("mx.core"),"IUITextField")
         getlocal 5
         callproperty QName(PackageNamespace("mx.core"),"IUITextField"), 1
         getproperty QName(Namespace("mx.core:IUITextField"),"inheritingStyles")
         iffalse ofs6
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         findpropstrict QName(PackageNamespace("mx.core"),"IUITextField")
         getlocal 5
         callproperty QName(PackageNamespace("mx.core"),"IUITextField"), 1
         callpropvoid QName(PackageNamespace(""),"initTextField"), 1
         ofs6:
         inclocal_i 4
         ofs2:
         getlocal 4
         getlocal3
         iflt ofs3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function stateChanged(param1:String, param2:String, param3:Boolean) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"stateChanged")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"currentCSSState")
         coerce_a
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal1
         getlocal2
         equals
         not
         coerce_a
         convert_b
         ofs0:
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager2"),"hasPseudoCondition"), 1
         convert_b
         dup
         iftrue ofs1
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager2"),"hasPseudoCondition"), 1
         convert_b
         ofs1:
         iffalse ofs2
         getlocal0
         getlocal3
         callpropvoid QName(PackageNamespace(""),"regenerateStyleCache"), 1
         getlocal0
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initThemeColor"), 0
         getlocal0
         pushnull
         callpropvoid QName(PackageNamespace(""),"styleChanged"), 1
         getlocal0
         pushnull
         getlocal3
         callpropvoid QName(PackageNamespace(""),"notifyStyleChangeInChildren"), 2
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable(style="true")]
      public function getStyle(param1:String) : *
      {
         trait method QName(PackageNamespace(""),"getStyle")
         flag METADATA
         metadata "Bindable"
         item "style" "true"
         end ; metadata
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         iftrue ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"undefined")
         strictequals
         not
         ofs1:
         iffalse ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getproperty QName(Namespace("mx.styles:IStyleManager"),"inheritingStyles")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         iffalse ofs2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce_a
         jump ofs3
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce_a
         ofs3:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setStyle(param1:String, param2:*) : void
      {
         trait method QName(PackageNamespace(""),"setStyle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         iffalse ofs0
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getlocal0
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"setStyle"), 3
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         iftrue ofs2
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Object")
         constructprop QName(PackageNamespace(""),"Object"), 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         ofs2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         getlocal1
         getlocal2
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setDeferredStyles() : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"setDeferredStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         iftrue ofs0
         returnvoid
         ofs0:
         pushbyte 0
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         coerce_a
         setlocal3
         jump ofs1
         ofs2:
         label
         getlocal3
         getlocal2
         nextname
         coerce_s
         setlocal1
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getlocal0
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"setStyle"), 3
         ofs1:
         hasnext2 3, 2
         iftrue ofs2
         kill 3
         kill 2
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"deferredSetStyles")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function clearStyle(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"clearStyle")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlex QName(PackageNamespace(""),"undefined")
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function notifyStyleChangeInChildren(param1:String, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"notifyStyleChangeInChildren")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         setlocal 5
         getlocal0
         pushnull
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"cachedTextFormat")
         getlex QName(PackageNamespace(""),"numChildren")
         convert_i
         setlocal3
         pushbyte 0
         setlocal 4
         jump ofs0
         ofs1:
         label
         findpropstrict QName(PackageNamespace(""),"getChildAt")
         getlocal 4
         callproperty QName(PackageNamespace(""),"getChildAt"), 1
         getlex QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         astypelate
         coerce QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         dup
         setlocal 5
         iffalse ofs2
         getlocal 5
         getlocal1
         callpropvoid QName(Namespace("mx.styles:ISimpleStyleClient"),"styleChanged"), 1
         getlocal 5
         getlex QName(PackageNamespace("mx.styles"),"IStyleClient")
         istypelate
         iffalse ofs2
         findpropstrict QName(PackageNamespace("mx.styles"),"IStyleClient")
         getlocal 5
         callproperty QName(PackageNamespace("mx.styles"),"IStyleClient"), 1
         getlocal1
         getlocal2
         callpropvoid QName(Namespace("mx.styles:IStyleClient"),"notifyStyleChangeInChildren"), 2
         ofs2:
         inclocal_i 4
         ofs0:
         getlocal 4
         getlocal3
         iflt ofs1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function initThemeColor() : Boolean
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"initThemeColor")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 11
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         pushnan
         setlocal3
         pushnan
         setlocal 4
         pushbyte 0
         setlocal 5
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 6
         pushnull
         coerce QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         setlocal 7
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 8
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 9
         pushnull
         coerce QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         setlocal 10
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         ifnge ofs0
         pushtrue
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleName")
         coerce QName(PackageNamespace(""),"Object")
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleDeclaration")
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleDeclaration")
         pushstring "themeColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleDeclaration")
         pushstring "rollOverColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_styleDeclaration")
         pushstring "selectionColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 4
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         callproperty QName(Namespace("mx.styles:IStyleManager2"),"hasAdvancedSelectors"), 0
         iffalse ofs2
         getlocal2
         pushnull
         strictequals
         dup
         iftrue ofs3
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         not
         ofs3:
         iffalse ofs4
         getlex QName(PackageNamespace("mx.styles"),"StyleProtoChain")
         getlocal0
         callproperty QName(PackageNamespace(""),"getMatchingStyleDeclarations"), 1
         coerce QName(PackageNamespace(""),"Array")
         dup
         setlocal 6
         getproperty QName(PackageNamespace(""),"length")
         decrement
         convert_i
         setlocal 5
         jump ofs5
         ofs6:
         label
         getlocal 6
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         dup
         setlocal 7
         iffalse ofs7
         getlocal 7
         pushstring "themeColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal 7
         pushstring "rollOverColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal3
         getlocal 7
         pushstring "selectionColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 4
         ofs7:
         getlocal2
         pushnull
         strictequals
         not
         dup
         iffalse ofs8
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         convert_b
         ofs8:
         iffalse ofs9
         jump ofs4
         ofs9:
         getlocal 5
         decrement_i
         setlocal 5
         ofs5:
         getlocal 5
         pushbyte 0
         ifge ofs6
         ofs4:
         jump ofs10
         ofs2:
         getlocal2
         pushnull
         strictequals
         dup
         iftrue ofs11
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         not
         ofs11:
         dup
         iffalse ofs12
         pop
         getlocal1
         coerce_a
         convert_b
         dup
         iffalse ofs12
         pop
         getlocal1
         getlex QName(PackageNamespace("mx.styles"),"ISimpleStyleClient")
         istypelate
         not
         coerce_a
         convert_b
         ofs12:
         iffalse ofs13
         getlocal1
         getlex QName(PackageNamespace(""),"String")
         istypelate
         iffalse ofs14
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         pushstring "."
         getlocal1
         add
         callproperty QName(Namespace("mx.styles:IStyleManager2"),"getMergedStyleDeclaration"), 1
         coerce QName(PackageNamespace(""),"Object")
         jump ofs15
         ofs14:
         getlocal1
         coerce QName(PackageNamespace(""),"Object")
         ofs15:
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 8
         iffalse ofs13
         getlocal 8
         pushstring "themeColor"
         callproperty Multiname("getStyle",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal 8
         pushstring "rollOverColor"
         callproperty Multiname("getStyle",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         convert_d
         setlocal3
         getlocal 8
         pushstring "selectionColor"
         callproperty Multiname("getStyle",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         convert_d
         setlocal 4
         ofs13:
         getlocal2
         pushnull
         strictequals
         dup
         iftrue ofs16
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         not
         ofs16:
         iffalse ofs10
         getlocal0
         callproperty QName(PackageNamespace(""),"getClassStyleDeclarations"), 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal 9
         pushbyte 0
         setlocal 5
         jump ofs17
         ofs18:
         label
         getlocal 9
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.styles"),"CSSStyleDeclaration")
         dup
         setlocal 10
         iffalse ofs19
         getlocal 10
         pushstring "themeColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlocal 10
         pushstring "rollOverColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal3
         getlocal 10
         pushstring "selectionColor"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         convert_d
         setlocal 4
         ofs19:
         getlocal2
         pushnull
         strictequals
         not
         dup
         iffalse ofs20
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         convert_b
         ofs20:
         iffalse ofs21
         jump ofs10
         ofs21:
         inclocal_i 5
         ofs17:
         getlocal 5
         getlocal 9
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs18
         ofs10:
         getlocal2
         pushnull
         strictequals
         not
         dup
         iffalse ofs22
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         convert_b
         ofs22:
         dup
         iffalse ofs23
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         ofs23:
         dup
         iffalse ofs24
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 4
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         convert_b
         ofs24:
         iffalse ofs25
         getlocal0
         getlocal2
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"setThemeColor"), 1
         pushtrue
         returnvalue
         ofs25:
         getlocal2
         pushnull
         strictequals
         not
         dup
         iffalse ofs26
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal2
         callproperty QName(Namespace("mx.styles:IStyleManager"),"isValidStyleValue"), 1
         convert_b
         ofs26:
         dup
         iffalse ofs27
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs27:
         dup
         iffalse ofs28
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 4
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs28:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function setThemeColor(param1:Object) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"setThemeColor")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal2
         getlocal2
         getlex QName(PackageNamespace(""),"String")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace(""),"parseInt")
         findpropstrict QName(PackageNamespace(""),"String")
         getlocal1
         callproperty QName(PackageNamespace(""),"String"), 1
         callproperty QName(PackageNamespace(""),"parseInt"), 1
         convert_d
         setlocal2
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         callproperty QName(PackageNamespace(""),"Number"), 1
         convert_d
         setlocal2
         ofs1:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs2
         getlocal0
         getproperty QName(PackageNamespace(""),"styleManager")
         getlocal1
         callproperty QName(Namespace("mx.styles:IStyleManager"),"getColorName"), 1
         convert_d
         setlocal2
         ofs2:
         getlex QName(PackageNamespace("mx.utils"),"ColorUtil")
         getlocal2
         pushbyte 50
         callproperty QName(PackageNamespace(""),"adjustBrightness2"), 2
         convert_d
         setlocal3
         getlex QName(PackageNamespace("mx.utils"),"ColorUtil")
         getlocal2
         pushbyte 70
         callproperty QName(PackageNamespace(""),"adjustBrightness2"), 2
         convert_d
         setlocal 4
         getlocal0
         pushstring "selectionColor"
         getlocal3
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         getlocal0
         pushstring "rollOverColor"
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"setStyle"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function determineTextFormatFromStyles() : UITextFormat
      {
         trait method QName(PackageNamespace(""),"determineTextFormatFromStyles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.core"),"UITextFormat")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal2
         pushnull
         coerce_s
         setlocal3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"cachedTextFormat")
         coerce QName(PackageNamespace("mx.core"),"UITextFormat")
         setlocal1
         getlocal1
         iftrue ofs0
         getlex QName(PackageNamespace("mx.utils"),"StringUtil")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontFamily",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushstring ","
         callproperty QName(PackageNamespace(""),"trimArrayElements"), 2
         coerce_s
         setlocal2
         findpropstrict QName(PackageNamespace("mx.core"),"UITextFormat")
         getlocal0
         callproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getNonNullSystemManager"), 0
         getlocal2
         constructprop QName(PackageNamespace("mx.core"),"UITextFormat"), 2
         coerce QName(PackageNamespace("mx.core"),"UITextFormat")
         setlocal1
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         setproperty QName(PackageNamespace(""),"moduleFactory")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("textAlign",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce_s
         setlocal3
         getlocal3
         pushstring "start"
         ifne ofs1
         getlex QName(PackageNamespace("flash.text"),"TextFormatAlign")
         getproperty QName(PackageNamespace(""),"LEFT")
         coerce_s
         setlocal3
         jump ofs2
         ofs1:
         getlocal3
         pushstring "end"
         ifne ofs2
         getlex QName(PackageNamespace("flash.text"),"TextFormatAlign")
         getproperty QName(PackageNamespace(""),"RIGHT")
         coerce_s
         setlocal3
         ofs2:
         getlocal1
         getlocal3
         setproperty QName(PackageNamespace(""),"align")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontWeight",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushstring "bold"
         equals
         setproperty QName(PackageNamespace(""),"bold")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"enabled")
         iffalse ofs3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("color",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         jump ofs4
         ofs3:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("disabledColor",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         ofs4:
         setproperty QName(PackageNamespace(""),"color")
         getlocal1
         getlocal2
         setproperty QName(PackageNamespace(""),"font")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("textIndent",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"indent")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontStyle",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushstring "italic"
         equals
         setproperty QName(PackageNamespace(""),"italic")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("kerning",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"kerning")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         getproperty Multiname("leading",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"leading")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         getproperty Multiname("paddingLeft",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"leftMargin")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("letterSpacing",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"letterSpacing")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         getproperty Multiname("paddingRight",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"rightMargin")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontSize",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"size")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_nonInheritingStyles")
         getproperty Multiname("textDecoration",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushstring "underline"
         equals
         setproperty QName(PackageNamespace(""),"underline")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontAntiAliasType",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"antiAliasType")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontGridFitType",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"gridFitType")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontSharpness",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"sharpness")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("fontThickness",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"thickness")
         getlocal1
         getlocal0
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getTextFieldClassName"), 0
         pushstring "mx.core::UIFTETextField"
         equals
         dup
         iftrue ofs5
         pop
         getlocal0
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getTextInputClassName"), 0
         pushstring "mx.controls::MXFTETextInput"
         equals
         ofs5:
         setproperty QName(PackageNamespace(""),"useFTE")
         getlocal1
         getproperty QName(PackageNamespace(""),"useFTE")
         iffalse ofs6
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("direction",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"direction")
         getlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_inheritingStyles")
         getproperty Multiname("locale",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"locale")
         ofs6:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"cachedTextFormat")
         ofs0:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function executeBindings(param1:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"executeBindings")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"descriptor")
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"descriptor")
         getproperty QName(PackageNamespace(""),"document")
         convert_b
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PackageNamespace(""),"descriptor")
         getproperty QName(PackageNamespace(""),"document")
         coerce QName(PackageNamespace(""),"Object")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"parentDocument")
         coerce QName(PackageNamespace(""),"Object")
         ofs2:
         coerce QName(PackageNamespace(""),"Object")
         setlocal2
         getlex QName(PackageNamespace("mx.binding"),"BindingManager")
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"executeBindings"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function registerEffects(param1:Array) : void
      {
         trait method QName(PackageNamespace(""),"registerEffects")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal 4
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs0
         ofs1:
         label
         getlex QName(PackageNamespace("mx.effects"),"EffectManager")
         getlocal1
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getEventForEffectTrigger"), 1
         coerce_s
         dup
         setlocal 4
         pushnull
         equals
         not
         dup
         iffalse ofs2
         pop
         getlocal 4
         pushstring ""
         equals
         not
         ofs2:
         iffalse ofs3
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlocal 4
         getlex QName(PackageNamespace("mx.effects"),"EffectManager")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"eventHandler")
         pushfalse
         getlex QName(PackageNamespace("mx.core"),"EventPriority")
         getproperty QName(PackageNamespace(""),"EFFECT")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 4
         ofs3:
         inclocal_i 3
         ofs0:
         getlocal3
         getlocal2
         iflt ofs1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function addOverlay(param1:uint, param2:RoundedRectangle = null) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"addOverlay")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace("mx.geom"),"RoundedRectangle")
         optional Null()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         iftrue ofs0
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayColor")
         getlocal0
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         constructprop QName(PackageNamespace("mx.core"),"UIComponent"), 0
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         pushstring "overlay"
         setproperty QName(PackageNamespace(""),"name")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         pushtrue
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         getlocal0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         getlocal1
         getlocal2
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"fillOverlay"), 3
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"attachOverlay"), 0
         getlocal2
         iftrue ofs1
         findpropstrict QName(PackageNamespace(""),"addEventListener")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"overlay_resizeHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         getlocal0
         pushbyte 1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         jump ofs2
         ofs0:
         getlocal0
         dup
         setlocal3
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         increment_i
         setlocal 4
         getlocal3
         getlocal 4
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         kill 4
         kill 3
         ofs2:
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"ChildExistenceChangedEvent")
         getlex QName(PackageNamespace("mx.events"),"ChildExistenceChangedEvent")
         getproperty QName(PackageNamespace(""),"OVERLAY_CREATED")
         pushtrue
         pushfalse
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         constructprop QName(PackageNamespace("mx.events"),"ChildExistenceChangedEvent"), 4
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function attachOverlay() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"attachOverlay")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         callpropvoid QName(PackageNamespace(""),"addChild"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function fillOverlay(param1:UIComponent, param2:uint, param3:RoundedRectangle = null) : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"fillOverlay")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("mx.core"),"UIComponent")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace("mx.geom"),"RoundedRectangle")
         optional Null()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal3
         iftrue ofs0
         findpropstrict QName(PackageNamespace("mx.geom"),"RoundedRectangle")
         pushbyte 0
         dup
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledWidth")
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"unscaledHeight")
         pushbyte 0
         constructprop QName(PackageNamespace("mx.geom"),"RoundedRectangle"), 5
         coerce QName(PackageNamespace("mx.geom"),"RoundedRectangle")
         setlocal3
         ofs0:
         getlocal1
         getproperty QName(PackageNamespace(""),"graphics")
         coerce QName(PackageNamespace("flash.display"),"Graphics")
         dup
         setlocal 4
         callpropvoid QName(PackageNamespace(""),"clear"), 0
         getlocal 4
         getlocal2
         callpropvoid QName(PackageNamespace(""),"beginFill"), 1
         getlocal 4
         getlocal3
         getproperty QName(PackageNamespace(""),"x")
         getlocal3
         getproperty QName(PackageNamespace(""),"y")
         getlocal3
         getproperty QName(PackageNamespace(""),"width")
         getlocal3
         getproperty QName(PackageNamespace(""),"height")
         getlocal3
         getproperty QName(PackageNamespace(""),"cornerRadius")
         pushbyte 2
         multiply
         getlocal3
         getproperty QName(PackageNamespace(""),"cornerRadius")
         pushbyte 2
         multiply
         callpropvoid QName(PackageNamespace(""),"drawRoundRect"), 6
         getlocal 4
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function removeOverlay() : void
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"removeOverlay")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         pushbyte 0
         greaterthan
         dup
         iffalse ofs0
         pop
         getlocal0
         dup
         setlocal1
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         decrement_i
         dup
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayReferenceCount")
         kill 2
         kill 1
         pushbyte 0
         equals
         ofs0:
         dup
         iffalse ofs1
         pop
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         convert_b
         ofs1:
         iffalse ofs2
         findpropstrict QName(PackageNamespace(""),"removeEventListener")
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         getproperty QName(PackageNamespace(""),"RESIZE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"overlay_resizeHandler")
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 2
         getlocal0
         pushstring "overlay"
         callsuper QName(PackageNamespace(""),"getChildByName"), 1
         iffalse ofs3
         getlocal0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$removeChild"), 1
         ofs3:
         getlocal0
         pushnull
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function overlay_resizeHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"overlay_resizeHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlay")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"effectOverlayColor")
         pushnull
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"fillOverlay"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function get isEffectStarted() : Boolean
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"isEffectStarted")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_isEffectStarted")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function set isEffectStarted(param1:Boolean) : void
      {
         trait setter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"isEffectStarted")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_isEffectStarted")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function effectStarted(param1:IEffectInstance) : void
      {
         trait method QName(PackageNamespace(""),"effectStarted")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.effects"),"IEffectInstance")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal 4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getlocal1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal1
         getproperty QName(Namespace("mx.effects:IEffectInstance"),"effect")
         callproperty QName(Namespace("mx.effects:IEffect"),"getAffectedProperties"), 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         pushbyte 0
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal2
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce_s
         setlocal 4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 4
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"undefined")
         ifne ofs2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 4
         newarray 0
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs2:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 4
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal1
         callpropvoid Multiname("push",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         inclocal_i 3
         ofs0:
         getlocal3
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs1
         getlocal0
         pushtrue
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"isEffectStarted")
         getlocal1
         getproperty QName(Namespace("mx.effects:IEffectInstance"),"hideFocusRing")
         iffalse ofs3
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"preventDrawFocus")
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"drawFocus"), 1
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function effectFinished(param1:IEffectInstance) : void
      {
         trait method QName(PackageNamespace(""),"effectFinished")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.effects"),"IEffectInstance")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_endingEffectInstances")
         getlocal1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"UPDATE_COMPLETE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"updateCompleteHandler")
         pushfalse
         pushbyte 0
         pushtrue
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"addEventListener"), 5
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function endEffectsStarted() : void
      {
         trait method QName(PackageNamespace(""),"endEffectsStarted")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal1
         pushbyte 0
         setlocal2
         jump ofs0
         ofs1:
         label
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getlocal2
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callpropvoid Multiname("end",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 0
         inclocal_i 2
         ofs0:
         getlocal2
         getlocal1
         iflt ofs1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function updateCompleteHandler(param1:FlexEvent) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"updateCompleteHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.events"),"FlexEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"layoutManager")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"UPDATE_COMPLETE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"updateCompleteHandler")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"removeEventListener"), 2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_endingEffectInstances")
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"processEffectFinished"), 1
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_endingEffectInstances")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function processEffectFinished(param1:Array) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"processEffectFinished")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 10
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal3
         pushnull
         coerce QName(PackageNamespace("mx.effects"),"IEffectInstance")
         setlocal 4
         pushnull
         coerce QName(PackageNamespace("mx.effects"),"IEffectInstance")
         setlocal 5
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 6
         pushbyte 0
         setlocal 7
         pushnull
         coerce_s
         setlocal 8
         pushbyte 0
         setlocal 9
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getproperty QName(PackageNamespace(""),"length")
         decrement
         convert_i
         setlocal2
         jump ofs0
         ofs1:
         label
         pushbyte 0
         setlocal3
         jump ofs2
         ofs3:
         label
         getlocal1
         getlocal3
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.effects"),"IEffectInstance")
         dup
         setlocal 4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getlocal2
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ifne ofs4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getlocal2
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.effects"),"IEffectInstance")
         setlocal 5
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getlocal2
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         getlocal 5
         getproperty QName(Namespace("mx.effects:IEffectInstance"),"effect")
         callproperty QName(Namespace("mx.effects:IEffect"),"getAffectedProperties"), 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal 6
         pushbyte 0
         setlocal 7
         jump ofs5
         ofs6:
         label
         getlocal 6
         getlocal 7
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce_s
         setlocal 8
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 8
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"undefined")
         ifeq ofs7
         pushbyte 0
         setlocal 9
         jump ofs8
         ofs9:
         label
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 8
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 9
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 4
         ifne ofs10
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 8
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 9
         pushbyte 1
         callpropvoid Multiname("splice",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 2
         jump ofs11
         ofs10:
         inclocal_i 9
         ofs8:
         getlocal 9
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 8
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("length",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         iflt ofs9
         ofs11:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 8
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("length",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushbyte 0
         ifne ofs7
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal 8
         deleteproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pop
         ofs7:
         inclocal_i 7
         ofs5:
         getlocal 7
         getlocal 6
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs6
         jump ofs12
         ofs4:
         inclocal_i 3
         ofs2:
         getlocal3
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs3
         ofs12:
         getlocal2
         decrement_i
         setlocal2
         ofs0:
         getlocal2
         pushbyte 0
         ifge ofs1
         getlocal0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_effectsStarted")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         iffalse ofs13
         pushtrue
         jump ofs14
         ofs13:
         pushfalse
         ofs14:
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"isEffectStarted")
         getlocal 4
         convert_b
         dup
         iffalse ofs15
         pop
         getlocal 4
         getproperty QName(Namespace("mx.effects:IEffectInstance"),"hideFocusRing")
         convert_b
         ofs15:
         iffalse ofs16
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"preventDrawFocus")
         ofs16:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function getEffectsForProperty(param1:String) : Array
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getEffectsForProperty")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"undefined")
         ifeq ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_affectedProperties")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Array")
         jump ofs1
         ofs0:
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function createReferenceOnParentDocument(param1:IFlexDisplayObject) : void
      {
         trait method QName(PackageNamespace(""),"createReferenceOnParentDocument")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"IFlexDisplayObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 9
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         pushbyte 0
         setlocal 4
         pushbyte 0
         setlocal 5
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 6
         pushnull
         coerce QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         setlocal 7
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         pushstring ""
         equals
         not
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         getlocal2
         iftrue ofs2
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getlocal0
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         jump ofs1
         ofs2:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         getlocal3
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         iftrue ofs3
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         newarray 0
         dup
         setlocal 8
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 8
         kill 8
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         ofs3:
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs4
         ofs5:
         label
         getlocal3
         getlocal2
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 6
         getlex QName(PackageNamespace(""),"Array")
         istypelate
         iftrue ofs6
         getlocal3
         getlocal2
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         newarray 0
         dup
         setlocal 8
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal 8
         kill 8
         coerce QName(PackageNamespace(""),"Object")
         setlocal 6
         ofs6:
         getlocal 6
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         inclocal_i 5
         ofs4:
         getlocal 5
         getlocal 4
         decrement
         iflt ofs5
         getlocal3
         getlocal2
         getlocal 4
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal0
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal1
         pushstring "propertyChange"
         callproperty QName(Namespace("flash.events:IEventDispatcher"),"hasEventListener"), 1
         iffalse ofs1
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         coerce QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         setlocal 7
         getlocal1
         getlocal 7
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"dispatchEvent"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function deleteReferenceOnParentDocument(param1:IFlexDisplayObject) : void
      {
         trait method QName(PackageNamespace(""),"deleteReferenceOnParentDocument")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"IFlexDisplayObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 10
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         pushbyte 0
         setlocal 5
         pushbyte 0
         setlocal 6
         pushbyte 0
         setlocal 7
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal 8
         pushnull
         coerce QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         setlocal 9
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         pushstring ""
         equals
         not
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_instanceIndices")
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         getlocal2
         iftrue ofs2
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         pushnull
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         jump ofs1
         ofs2:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         getlocal3
         iftrue ofs3
         returnvoid
         ofs3:
         newarray 0
         coerce QName(PackageNamespace(""),"Array")
         dup
         setlocal 4
         getlocal3
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal 5
         pushbyte 0
         setlocal 6
         jump ofs4
         ofs5:
         label
         getlocal3
         getlocal2
         getlocal 6
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 8
         iftrue ofs6
         returnvoid
         ofs6:
         getlocal 8
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         getlocal 4
         getlocal3
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         inclocal_i 6
         ofs4:
         getlocal 6
         getlocal 5
         decrement
         iflt ofs5
         getlocal3
         getlocal2
         getlocal 5
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushbyte 1
         callpropvoid Multiname("splice",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 2
         getlocal 4
         getproperty QName(PackageNamespace(""),"length")
         decrement
         convert_i
         setlocal 7
         jump ofs7
         ofs8:
         label
         getlocal 4
         getlocal 7
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("length",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushbyte 0
         ifne ofs9
         getlocal 4
         getlocal 7
         decrement
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal2
         getlocal 7
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushbyte 1
         callpropvoid Multiname("splice",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 2
         ofs9:
         getlocal 7
         decrement_i
         setlocal 7
         ofs7:
         getlocal 7
         pushbyte 0
         ifgt ofs8
         getlocal 4
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         dup
         iffalse ofs10
         pop
         getlocal 4
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("length",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushbyte 0
         equals
         ofs10:
         iffalse ofs11
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         pushnull
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         jump ofs1
         ofs11:
         getlocal1
         pushstring "propertyChange"
         callproperty QName(Namespace("flash.events:IEventDispatcher"),"hasEventListener"), 1
         iffalse ofs1
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"id")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"createUpdateEvent"), 4
         coerce QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         setlocal 9
         getlocal1
         getlocal 9
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"dispatchEvent"), 1
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getRepeaterItem(param1:int = -1) : Object
      {
         trait method QName(PackageNamespace(""),"getRepeaterItem")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         optional Integer(-1)
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"repeaters")
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs0
         pushnull
         returnvalue
         ofs0:
         getlocal1
         pushbyte -1
         ifne ofs1
         getlocal2
         getproperty QName(PackageNamespace(""),"length")
         decrement
         convert_i
         setlocal1
         ofs1:
         getlocal2
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PackageNamespace(""),"repeaterIndices")
         getlocal1
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callproperty Multiname("getItemAt",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function resourcesChanged() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"resourcesChanged")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function prepareToPrint(param1:IFlexDisplayObject) : Object
      {
         trait method QName(PackageNamespace(""),"prepareToPrint")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"IFlexDisplayObject")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function finishPrint(param1:Object, param2:IFlexDisplayObject) : void
      {
         trait method QName(PackageNamespace(""),"finishPrint")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace("mx.core"),"IFlexDisplayObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function callLaterDispatcher(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 11
         maxscopedepth 16
         trait slot QName(PackageInternalNs("mx.core"),"event")
         slotid 1
         type QName(PackageNamespace("flash.events"),"Event")
         end ; trait
         trait slot QName(PackageInternalNs("mx.core"),"callLaterErrorEvent")
         slotid 2
         type QName(PackageNamespace("mx.events"),"DynamicEvent")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal2
         pushscope
         getscopeobject 1
         pushnull
         coerce QName(PackageNamespace("mx.events"),"DynamicEvent")
         setslot 2
         getscopeobject 1
         getlocal1
         setslot 1
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         dup
         setlocal3
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterDispatcherCount")
         increment_i
         setlocal 4
         getlocal3
         getlocal 4
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterDispatcherCount")
         kill 4
         kill 3
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(PackageNamespace(""),"catchCallLaterExceptions")
         iftrue ofs0
         getlocal0
         getscopeobject 1
         getslot 1
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher2"), 1
         jump ofs1
         ofs0:
         getlocal0
         getscopeobject 1
         getslot 1
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher2"), 1
         ofs2:
         jump ofs1
         ofs3:
         getlocal0
         pushscope
         getlocal2
         pushscope
         newcatch 0
         dup
         setlocal3
         dup
         pushscope
         swap
         setslot 1
         getscopeobject 1
         findpropstrict QName(PackageNamespace("mx.events"),"DynamicEvent")
         pushstring "callLaterError"
         constructprop QName(PackageNamespace("mx.events"),"DynamicEvent"), 1
         coerce QName(PackageNamespace("mx.events"),"DynamicEvent")
         setslot 2
         getscopeobject 1
         getslot 2
         getscopeobject 2
         getslot 1
         setproperty Multiname("error",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getscopeobject 1
         getslot 2
         getlocal0
         setproperty Multiname("source",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"systemManager")
         getscopeobject 1
         getslot 2
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"dispatchEvent"), 1
         popscope
         kill 3
         ofs1:
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         dup
         setlocal3
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterDispatcherCount")
         decrement_i
         setlocal 4
         getlocal3
         getlocal 4
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterDispatcherCount")
         kill 4
         kill 3
         returnvoid
         end ; code
         try from ofs0 to ofs2 target ofs3 type QName(PackageNamespace(""),"Error") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      private function callLaterDispatcher2(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher2")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PrivateNamespace(null,"#UIComponent/1"),"MethodQueueElement")
         setlocal 6
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"callLaterSuspendCount")
         pushbyte 0
         ifngt ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal2
         getlocal2
         coerce_a
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal2
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         coerce_a
         dup
         iftrue ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"usingBridge")
         coerce_a
         ofs2:
         coerce_a
         convert_b
         ofs1:
         dup
         iffalse ofs3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         convert_b
         ofs3:
         iffalse ofs4
         getlocal2
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"RENDER")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"removeEventListener"), 2
         getlocal2
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"callLaterDispatcher")
         callpropvoid QName(Namespace("flash.events:IEventDispatcher"),"removeEventListener"), 2
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"listeningForRender")
         ofs4:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"methodQueue")
         coerce QName(PackageNamespace(""),"Array")
         setlocal3
         getlocal0
         newarray 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"methodQueue")
         getlocal3
         getproperty QName(PackageNamespace(""),"length")
         convert_i
         setlocal 4
         pushbyte 0
         setlocal 5
         jump ofs5
         ofs6:
         label
         findpropstrict QName(PrivateNamespace(null,"#UIComponent/1"),"MethodQueueElement")
         getlocal3
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         callproperty QName(PrivateNamespace(null,"#UIComponent/1"),"MethodQueueElement"), 1
         coerce QName(PrivateNamespace(null,"#UIComponent/1"),"MethodQueueElement")
         dup
         setlocal 6
         getproperty QName(PackageNamespace(""),"method")
         pushnull
         getlocal 6
         getproperty QName(PackageNamespace(""),"args")
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"apply"), 2
         inclocal_i 5
         ofs5:
         getlocal 5
         getlocal 4
         iflt ofs6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function keyDownHandler(param1:KeyboardEvent) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"keyDownHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"KeyboardEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function keyUpHandler(param1:KeyboardEvent) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"keyUpHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"KeyboardEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function isOurFocus(param1:DisplayObject) : Boolean
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"isOurFocus")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         equals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function focusInHandler(param1:FocusEvent) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"focusInHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"FocusEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.managers"),"IFocusManager")
         setlocal2
         getlocal0
         findpropstrict QName(PackageNamespace("flash.display"),"DisplayObject")
         getlocal1
         getproperty QName(PackageNamespace(""),"target")
         callproperty QName(PackageNamespace("flash.display"),"DisplayObject"), 1
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"isOurFocus"), 1
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"focusManager")
         coerce QName(PackageNamespace("mx.managers"),"IFocusManager")
         setlocal2
         getlocal2
         convert_b
         dup
         iffalse ofs1
         pop
         getlocal2
         getproperty QName(Namespace("mx.managers:IFocusManager"),"showFocusIndicator")
         convert_b
         ofs1:
         iffalse ofs2
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"drawFocus"), 1
         ofs2:
         getlex QName(PackageNamespace("mx.core"),"ContainerGlobals")
         getlocal1
         getproperty QName(PackageNamespace(""),"relatedObject")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkFocus"), 2
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function focusOutHandler(param1:FocusEvent) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"focusOutHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"FocusEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         findpropstrict QName(PackageNamespace("flash.display"),"DisplayObject")
         getlocal1
         getproperty QName(PackageNamespace(""),"target")
         callproperty QName(PackageNamespace("flash.display"),"DisplayObject"), 1
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"isOurFocus"), 1
         iffalse ofs0
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"drawFocus"), 1
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function addedHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"addedHandler")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 11
         maxscopedepth 16
         trait slot QName(PackageInternalNs("mx.core"),"event")
         slotid 1
         type QName(PackageNamespace("flash.events"),"Event")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal2
         pushscope
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         getslot 1
         getproperty QName(PackageNamespace(""),"eventPhase")
         getlex QName(PackageNamespace("flash.events"),"EventPhase")
         getproperty QName(PackageNamespace(""),"AT_TARGET")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"IContainer")
         istypelate
         dup
         iffalse ofs1
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IContainer")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"IContainer"), 1
         getproperty QName(Namespace("mx.core:IContainer"),"creatingContentPane")
         convert_b
         ofs1:
         iffalse ofs2
         getscopeobject 1
         getslot 1
         callpropvoid QName(PackageNamespace(""),"stopImmediatePropagation"), 0
         returnvoid
         ofs2:
         jump ofs3
         ofs4:
         getlocal0
         pushscope
         getlocal2
         pushscope
         newcatch 0
         dup
         setlocal3
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 3
         ofs3:
         returnvoid
         end ; code
         try from ofs0 to ofs2 target ofs4 type QName(PackageNamespace(""),"SecurityError") name QName(PackageNamespace(""),"error") end
         end ; body
         end ; method
      }
      
      private function removedHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"removedHandler")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 11
         maxscopedepth 16
         trait slot QName(PackageInternalNs("mx.core"),"event")
         slotid 1
         type QName(PackageNamespace("flash.events"),"Event")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal2
         pushscope
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         getslot 1
         getproperty QName(PackageNamespace(""),"eventPhase")
         getlex QName(PackageNamespace("flash.events"),"EventPhase")
         getproperty QName(PackageNamespace(""),"AT_TARGET")
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"IContainer")
         istypelate
         dup
         iffalse ofs1
         pop
         findpropstrict QName(PackageNamespace("mx.core"),"IContainer")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"IContainer"), 1
         getproperty QName(Namespace("mx.core:IContainer"),"creatingContentPane")
         convert_b
         ofs1:
         iffalse ofs2
         getscopeobject 1
         getslot 1
         callpropvoid QName(PackageNamespace(""),"stopImmediatePropagation"), 0
         returnvoid
         ofs2:
         jump ofs3
         ofs4:
         getlocal0
         pushscope
         getlocal2
         pushscope
         newcatch 0
         dup
         setlocal3
         dup
         pushscope
         swap
         setslot 1
         popscope
         kill 3
         ofs3:
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateSystemManager"), 0
         returnvoid
         end ; code
         try from ofs0 to ofs2 target ofs4 type QName(PackageNamespace(""),"SecurityError") name QName(PackageNamespace(""),"error") end
         end ; body
         end ; method
      }
      
      private function setFocusLater(param1:Event = null) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"setFocusLater")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("flash.events"),"Event")
         optional Null()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         coerce QName(PackageNamespace("mx.managers"),"ISystemManager")
         setlocal2
         getlocal2
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal2
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         convert_b
         ofs0:
         iffalse ofs1
         getlocal2
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"ENTER_FRAME")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"setFocusLater")
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 2
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         iffalse ofs2
         getlocal2
         getproperty QName(Namespace("mx.managers:ISystemManager"),"stage")
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         setproperty QName(PackageNamespace(""),"focus")
         ofs2:
         getlex QName(PackageNamespace("mx.core"),"UIComponentGlobals")
         pushnull
         setproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"nextFocusObject")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function focusObj_scrollHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"focusObj_scrollHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"adjustFocusRect"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function focusObj_moveHandler(param1:MoveEvent) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"focusObj_moveHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.events"),"MoveEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"adjustFocusRect"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function focusObj_resizeHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"focusObj_resizeHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PackageNamespace("mx.events"),"ResizeEvent")
         istypelate
         iffalse ofs0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"adjustFocusRect"), 0
         ofs0:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function focusObj_removedHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"focusObj_removedHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getproperty QName(PackageNamespace(""),"target")
         getlocal0
         ifeq ofs0
         returnvoid
         ofs0:
         getlocal0
         callproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getFocusObject"), 0
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal2
         getlocal2
         iffalse ofs1
         getlocal2
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function layer_PropertyChange(param1:PropertyChangeEvent) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"layer_PropertyChange")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushfalse
         setlocal2
         pushnan
         setlocal3
         jump ofs0
         ofs1:
         label
         getlocal1
         getproperty QName(PackageNamespace(""),"newValue")
         convert_b
         dup
         iffalse ofs2
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_visible")
         convert_b
         ofs2:
         convert_b
         setlocal2
         getlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         ifeq ofs3
         getlocal0
         getlocal2
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$visible")
         ofs3:
         jump ofs4
         ofs5:
         label
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         getproperty QName(PackageNamespace(""),"newValue")
         callproperty QName(PackageNamespace(""),"Number"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_alpha")
         multiply
         convert_d
         setlocal3
         getlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$alpha")
         ifeq ofs6
         getlocal0
         getlocal3
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$alpha")
         ofs6:
         jump ofs4
         ofs7:
         label
         jump ofs4
         ofs0:
         getlocal1
         getproperty QName(PackageNamespace(""),"property")
         setlocal 4
         pushstring "effectiveVisibility"
         getlocal 4
         ifstrictne ofs8
         pushbyte 0
         jump ofs9
         ofs8:
         pushstring "effectiveAlpha"
         getlocal 4
         ifstrictne ofs10
         pushbyte 1
         jump ofs9
         ofs10:
         jump ofs11
         pushbyte 2
         jump ofs11
         ofs11:
         pushbyte 2
         ofs9:
         kill 4
         lookupswitch ofs7, [ofs1, ofs5, ofs7]
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function validationResultHandler(param1:ValidationResultEvent) : void
      {
         trait method QName(PackageNamespace(""),"validationResultHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.events"),"ValidationResultEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal3
         pushnull
         coerce QName(PackageNamespace("mx.validators"),"ValidationResult")
         setlocal 4
         pushbyte 0
         setlocal 5
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorObjectArray")
         pushnull
         ifstrictne ofs0
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"errorObjectArray")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorObjectArray")
         getlocal1
         getproperty QName(PackageNamespace(""),"target")
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         convert_i
         setlocal2
         getlocal1
         getproperty QName(PackageNamespace(""),"type")
         getlex QName(PackageNamespace("mx.events"),"ValidationResultEvent")
         getproperty QName(PackageNamespace(""),"VALID")
         ifne ofs1
         getlocal2
         pushbyte -1
         ifeq ofs2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorObjectArray")
         getlocal2
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         getlocal2
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         pushstring "\n"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"join"), 1
         initproperty QName(PackageNamespace(""),"errorString")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs2
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"VALID")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs2:
         jump ofs3
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"validationSubField")
         pushnull
         equals
         not
         dup
         iffalse ofs4
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"validationSubField")
         pushstring ""
         equals
         not
         ofs4:
         dup
         iffalse ofs5
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"results")
         convert_b
         ofs5:
         iffalse ofs6
         pushbyte 0
         setlocal 5
         jump ofs7
         ofs8:
         label
         getlocal1
         getproperty QName(PackageNamespace(""),"results")
         getlocal 5
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace("mx.validators"),"ValidationResult")
         dup
         setlocal 4
         getproperty QName(PackageNamespace(""),"subField")
         getlocal0
         getproperty QName(PackageNamespace(""),"validationSubField")
         ifne ofs9
         getlocal 4
         getproperty QName(PackageNamespace(""),"isError")
         iffalse ofs10
         getlocal 4
         getproperty QName(PackageNamespace(""),"errorMessage")
         coerce_s
         setlocal3
         jump ofs11
         ofs10:
         getlocal2
         pushbyte -1
         ifeq ofs11
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorObjectArray")
         getlocal2
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         getlocal2
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         pushstring "\n"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"join"), 1
         initproperty QName(PackageNamespace(""),"errorString")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         ifne ofs11
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"VALID")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs11:
         jump ofs12
         ofs9:
         inclocal_i 5
         ofs7:
         getlocal 5
         getlocal1
         getproperty QName(PackageNamespace(""),"results")
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs8
         ofs12:
         jump ofs13
         ofs6:
         getlocal1
         getproperty QName(PackageNamespace(""),"results")
         convert_b
         dup
         iffalse ofs14
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"results")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         greaterthan
         ofs14:
         iffalse ofs13
         getlocal1
         getproperty QName(PackageNamespace(""),"results")
         pushbyte 0
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getproperty Multiname("errorMessage",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         coerce_s
         setlocal3
         ofs13:
         getlocal3
         convert_b
         dup
         iffalse ofs15
         pop
         getlocal2
         pushbyte -1
         equals
         not
         ofs15:
         iffalse ofs16
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         getlocal2
         getlocal3
         setproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         pushstring "\n"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"join"), 1
         initproperty QName(PackageNamespace(""),"errorString")
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"INVALID")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         jump ofs3
         ofs16:
         getlocal3
         convert_b
         dup
         iffalse ofs17
         pop
         getlocal2
         pushbyte -1
         equals
         ofs17:
         iffalse ofs3
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorObjectArray")
         getlocal1
         getproperty QName(PackageNamespace(""),"target")
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         getlocal3
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"errorArray")
         pushstring "\n"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"join"), 1
         initproperty QName(PackageNamespace(""),"errorString")
         getlocal0
         findpropstrict QName(PackageNamespace("mx.events"),"FlexEvent")
         getlex QName(PackageNamespace("mx.events"),"FlexEvent")
         getproperty QName(PackageNamespace(""),"INVALID")
         constructprop QName(PackageNamespace("mx.events"),"FlexEvent"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function resourceManager_changeHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"resourceManager_changeHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"resourcesChanged"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function filterChangeHandler(param1:Event) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"filterChangeHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_filters")
         initproperty QName(PackageNamespace(""),"filters")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function owns(param1:DisplayObject) : Boolean
      {
         trait method QName(PackageNamespace(""),"owns")
         dispid 0
         method
         name null
         flag NEED_ACTIVATION
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 11
         maxscopedepth 16
         trait slot QName(PackageInternalNs("mx.core"),"child")
         slotid 1
         type QName(PackageNamespace("flash.display"),"DisplayObject")
         end ; trait
         trait slot QName(PackageInternalNs("mx.core"),"childList")
         slotid 2
         type QName(PackageNamespace("mx.core"),"IChildList")
         end ; trait
         
         code
         getlocal0
         pushscope
         newactivation
         dup
         setlocal2
         pushscope
         getscopeobject 1
         getlocal1
         setslot 1
         getscopeobject 1
         getlocal0
         getlex QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         istypelate
         iffalse ofs0
         findpropstrict QName(PackageNamespace("mx.core"),"IRawChildrenContainer")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IRawChildrenContainer"), 1
         getproperty QName(Namespace("mx.core:IRawChildrenContainer"),"rawChildren")
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         jump ofs1
         ofs0:
         findpropstrict QName(PackageNamespace("mx.core"),"IChildList")
         getlocal0
         callproperty QName(PackageNamespace("mx.core"),"IChildList"), 1
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         ofs1:
         coerce QName(PackageNamespace("mx.core"),"IChildList")
         setslot 2
         getscopeobject 1
         getslot 2
         getscopeobject 1
         getslot 1
         callproperty QName(Namespace("mx.core:IChildList"),"contains"), 1
         iffalse ofs2
         pushtrue
         returnvalue
         ofs2:
         jump ofs3
         ofs4:
         label
         getscopeobject 1
         getslot 1
         getlex QName(PackageNamespace("mx.core"),"IUIComponent")
         istypelate
         iffalse ofs5
         getscopeobject 1
         findpropstrict QName(PackageNamespace("mx.core"),"IUIComponent")
         getscopeobject 1
         getslot 1
         callproperty QName(PackageNamespace("mx.core"),"IUIComponent"), 1
         getproperty QName(Namespace("mx.core:IUIComponent"),"owner")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setslot 1
         jump ofs3
         ofs5:
         getscopeobject 1
         getscopeobject 1
         getslot 1
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setslot 1
         ofs3:
         getscopeobject 1
         getslot 1
         convert_b
         dup
         iffalse ofs6
         pop
         getscopeobject 1
         getslot 1
         getlocal0
         equals
         not
         ofs6:
         iftrue ofs4
         ofs7:
         jump ofs8
         ofs9:
         getlocal0
         pushscope
         getlocal2
         pushscope
         newcatch 0
         dup
         setlocal3
         dup
         pushscope
         swap
         setslot 1
         pushfalse
         returnvalue
         popscope
         kill 3
         ofs8:
         getscopeobject 1
         getslot 1
         getlocal0
         equals
         returnvalue
         end ; code
         try from ofs2 to ofs7 target ofs9 type QName(PackageNamespace(""),"SecurityError") name QName(PackageNamespace(""),"e") end
         end ; body
         end ; method
      }
      
      mx_internal function getFontContext(param1:String, param2:Boolean, param3:Boolean, param4:* = undefined) : IFlexModuleFactory
      {
         trait method QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getFontContext")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         param null
         optional Undefined()
         returns QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         
         body
         maxstack 8
         localcount 6
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"#UIComponent"),"noEmbeddedFonts")
         iffalse ofs0
         pushnull
         returnvalue
         ofs0:
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"embeddedFontRegistry")
         coerce QName(PackageNamespace("mx.core"),"IEmbeddedFontRegistry")
         dup
         setlocal 5
         iffalse ofs1
         getlocal 5
         getlocal1
         getlocal2
         getlocal3
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         getlocal 4
         callproperty QName(Namespace("mx.core:IEmbeddedFontRegistry"),"getAssociatedModuleFactory"), 7
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         jump ofs2
         ofs1:
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         ofs2:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function createInFontContext(param1:Class) : Object
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"createInFontContext")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Class")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 7
         localcount 10
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"hasFontContextBeenSaved")
         getlex QName(PackageNamespace("mx.utils"),"StringUtil")
         getlocal0
         pushstring "fontFamily"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         pushstring ","
         callproperty QName(PackageNamespace(""),"trimArrayElements"), 2
         coerce_s
         setlocal2
         getlocal0
         pushstring "fontWeight"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce_s
         setlocal3
         getlocal0
         pushstring "fontStyle"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce_s
         setlocal 4
         getlocal3
         pushstring "bold"
         equals
         setlocal 5
         getlocal 4
         pushstring "italic"
         equals
         setlocal 6
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         coerce_s
         dup
         setlocal 7
         pushstring "mx.core::UITextField"
         ifne ofs0
         getlocal0
         callproperty QName(PrivateNamespace(null,"#UIComponent"),"getTextFieldClassName"), 0
         coerce_s
         dup
         setlocal 7
         pushstring "mx.core::UIFTETextField"
         ifne ofs0
         findpropstrict QName(PackageNamespace(""),"Class")
         getlex QName(PackageNamespace("flash.system"),"ApplicationDomain")
         getproperty QName(PackageNamespace(""),"currentDomain")
         getlocal 7
         callproperty QName(PackageNamespace(""),"getDefinition"), 1
         callproperty QName(PackageNamespace(""),"Class"), 1
         coerce QName(PackageNamespace(""),"Class")
         setlocal1
         ofs0:
         getlocal0
         getlocal0
         getlocal2
         getlocal 5
         getlocal 6
         getlocal 7
         pushstring "mx.core::UIFTETextField"
         equals
         callproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"getFontContext"), 4
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"oldEmbeddedFontContext")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldEmbeddedFontContext")
         iffalse ofs1
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldEmbeddedFontContext")
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         ofs2:
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         setlocal 8
         getlocal0
         getlocal 8
         getlocal 7
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"createInModuleContext"), 2
         coerce QName(PackageNamespace(""),"Object")
         dup
         setlocal 9
         pushnull
         ifne ofs3
         getlocal1
         construct 0
         coerce QName(PackageNamespace(""),"Object")
         setlocal 9
         ofs3:
         getlocal 7
         pushstring "mx.core::UIFTETextField"
         ifne ofs4
         getlocal 9
         getlocal 8
         setproperty Multiname("fontContext",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         ofs4:
         getlocal 9
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function getTextFieldClassName() : String
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"getTextFieldClassName")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "textFieldClass"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce QName(PackageNamespace(""),"Class")
         setlocal1
         getlocal1
         not
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         lessthan
         ofs0:
         iffalse ofs1
         pushstring "mx.core::UITextField"
         returnvalue
         ofs1:
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function getTextInputClassName() : String
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"getTextInputClassName")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         pushstring "textInputClass"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce QName(PackageNamespace(""),"Class")
         setlocal1
         getlocal1
         not
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"compatibilityVersion")
         getlex QName(PackageNamespace("mx.core"),"FlexVersion")
         getproperty QName(PackageNamespace(""),"VERSION_4_0")
         lessthan
         ofs0:
         iffalse ofs1
         pushstring "mx.core::TextInput"
         returnvalue
         ofs1:
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function createInModuleContext(param1:IFlexModuleFactory, param2:String) : Object
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"createInModuleContext")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         getlocal1
         iffalse ofs0
         getlocal1
         getlocal2
         callproperty QName(Namespace("mx.core:IFlexModuleFactory"),"create"), 1
         coerce QName(PackageNamespace(""),"Object")
         setlocal3
         ofs0:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasFontContextChanged() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasFontContextChanged")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 7
         localcount 7
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"hasFontContextBeenSaved")
         iftrue ofs0
         pushfalse
         returnvalue
         ofs0:
         getlex QName(PackageNamespace("mx.utils"),"StringUtil")
         getlocal0
         pushstring "fontFamily"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         pushstring ","
         callproperty QName(PackageNamespace(""),"trimArrayElements"), 2
         coerce_s
         setlocal1
         getlocal0
         pushstring "fontWeight"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce_s
         setlocal2
         getlocal0
         pushstring "fontStyle"
         callproperty QName(PackageNamespace(""),"getStyle"), 1
         coerce_s
         setlocal3
         getlocal2
         pushstring "bold"
         equals
         setlocal 4
         getlocal3
         pushstring "italic"
         equals
         setlocal 5
         getlex QName(PrivateNamespace(null,"#UIComponent"),"noEmbeddedFonts")
         iffalse ofs1
         pushnull
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         jump ofs2
         ofs1:
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"embeddedFontRegistry")
         getlocal1
         getlocal 4
         getlocal 5
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"moduleFactory")
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         callproperty QName(Namespace("mx.core:IEmbeddedFontRegistry"),"getAssociatedModuleFactory"), 6
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         ofs2:
         coerce QName(PackageNamespace("mx.core"),"IFlexModuleFactory")
         dup
         setlocal 6
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"oldEmbeddedFontContext")
         equals
         not
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function createAutomationIDPart(param1:IAutomationObject) : Object
      {
         trait method QName(PackageNamespace(""),"createAutomationIDPart")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.automation"),"IAutomationObject")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getlocal1
         callproperty Multiname("createAutomationIDPart",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         returnvalue
         ofs0:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function createAutomationIDPartWithRequiredProperties(param1:IAutomationObject, param2:Array) : Object
      {
         trait method QName(PackageNamespace(""),"createAutomationIDPartWithRequiredProperties")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.automation"),"IAutomationObject")
         param QName(PackageNamespace(""),"Array")
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getlocal1
         getlocal2
         callproperty Multiname("createAutomationIDPartWithRequiredProperties",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 2
         returnvalue
         ofs0:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function resolveAutomationIDPart(param1:Object) : Array
      {
         trait method QName(PackageNamespace(""),"resolveAutomationIDPart")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Object")
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getlocal1
         callproperty Multiname("resolveAutomationIDPart",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         returnvalue
         ofs0:
         newarray 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getAutomationChildAt(param1:int) : IAutomationObject
      {
         trait method QName(PackageNamespace(""),"getAutomationChildAt")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace("mx.automation"),"IAutomationObject")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getlocal1
         callproperty Multiname("getAutomationChildAt",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         returnvalue
         ofs0:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getAutomationChildren() : Array
      {
         trait method QName(PackageNamespace(""),"getAutomationChildren")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         callproperty Multiname("getAutomationChildren",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 0
         returnvalue
         ofs0:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get numAutomationChildren() : int
      {
         trait getter QName(PackageNamespace(""),"numAutomationChildren")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getproperty Multiname("numAutomationChildren",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         ofs0:
         pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationTabularData() : Object
      {
         trait getter QName(PackageNamespace(""),"automationTabularData")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Object")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getproperty Multiname("automationTabularData",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         returnvalue
         ofs0:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationOwner() : DisplayObjectContainer
      {
         trait getter QName(PackageNamespace(""),"automationOwner")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"owner")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationParent() : DisplayObjectContainer
      {
         trait getter QName(PackageNamespace(""),"automationParent")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationEnabled() : Boolean
      {
         trait getter QName(PackageNamespace(""),"automationEnabled")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"enabled")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get automationVisible() : Boolean
      {
         trait getter QName(PackageNamespace(""),"automationVisible")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"visible")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function replayAutomatableEvent(param1:Event) : Boolean
      {
         trait method QName(PackageNamespace(""),"replayAutomatableEvent")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         iffalse ofs0
         getlocal0
         getproperty QName(PackageNamespace(""),"automationDelegate")
         getlocal1
         callproperty Multiname("replayAutomatableEvent",[PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")]), 1
         returnvalue
         ofs0:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getVisibleRect(param1:DisplayObject = null) : Rectangle
      {
         trait method QName(PackageNamespace(""),"getVisibleRect")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("flash.display"),"DisplayObject")
         optional Null()
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         iftrue ofs0
         findpropstrict QName(PackageNamespace("flash.display"),"DisplayObject")
         getlocal0
         getproperty QName(PackageNamespace(""),"systemManager")
         callproperty QName(PackageNamespace("flash.display"),"DisplayObject"), 1
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$parent")
         iffalse ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         jump ofs2
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         ofs2:
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal2
         getlocal2
         iftrue ofs3
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 0
         returnvalue
         ofs3:
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal3
         getlocal2
         getlocal3
         callproperty QName(PackageNamespace(""),"localToGlobal"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal3
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         getlocal3
         getproperty QName(PackageNamespace(""),"x")
         getlocal3
         getproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"height")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 4
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal 4
         getlocal0
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal 5
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 0
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal 6
         jump ofs4
         ofs5:
         label
         ofs4:
         getlocal 5
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         iffalse ofs6
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal 5
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$parent")
         iffalse ofs7
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal 5
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal 5
         jump ofs8
         ofs7:
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal 5
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal 5
         ofs8:
         jump ofs9
         ofs6:
         getlocal 5
         getproperty QName(PackageNamespace(""),"parent")
         coerce QName(PackageNamespace("flash.display"),"DisplayObject")
         setlocal 5
         ofs9:
         getlocal 5
         convert_b
         dup
         iffalse ofs10
         pop
         getlocal 5
         getproperty QName(PackageNamespace(""),"scrollRect")
         convert_b
         ofs10:
         iffalse ofs11
         getlocal 5
         getproperty QName(PackageNamespace(""),"scrollRect")
         callproperty QName(PackageNamespace(""),"clone"), 0
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal 6
         getlocal 5
         getlocal 6
         getproperty QName(PackageNamespace(""),"topLeft")
         callproperty QName(PackageNamespace(""),"localToGlobal"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal3
         getlocal 6
         getlocal3
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlocal 6
         getlocal3
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         getlocal 4
         getlocal 6
         callproperty QName(PackageNamespace(""),"intersection"), 1
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal 4
         ofs11:
         getlocal 5
         convert_b
         dup
         iffalse ofs12
         pop
         getlocal 5
         getlocal1
         equals
         not
         ofs12:
         iftrue ofs5
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function dispatchEvent(param1:Event) : Boolean
      {
         trait method QName(PackageNamespace(""),"dispatchEvent")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.events"),"Event")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"dispatchEventHook")
         pushnull
         ifeq ofs0
         findpropstrict QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"dispatchEventHook")
         getlocal1
         getlocal0
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"dispatchEventHook"), 2
         ofs0:
         getlocal0
         getlocal1
         callsuper QName(PackageNamespace(""),"dispatchEvent"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function get mouseX() : Number
      {
         trait getter QName(PackageNamespace(""),"mouseX")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"root")
         not
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace(""),"root")
         getlex QName(PackageNamespace("flash.display"),"Stage")
         istypelate
         ofs0:
         dup
         iftrue ofs1
         pop
         getlex QName(PackageNamespace(""),"root")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseX")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"undefined")
         strictequals
         ofs1:
         iffalse ofs2
         getlocal0
         getsuper QName(PackageNamespace(""),"mouseX")
         returnvalue
         ofs2:
         findpropstrict QName(PackageNamespace(""),"globalToLocal")
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlex QName(PackageNamespace(""),"root")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseX")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         pushbyte 0
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         callproperty QName(PackageNamespace(""),"globalToLocal"), 1
         getproperty QName(PackageNamespace(""),"x")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function get mouseY() : Number
      {
         trait getter QName(PackageNamespace(""),"mouseY")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"root")
         not
         dup
         iftrue ofs0
         pop
         getlex QName(PackageNamespace(""),"root")
         getlex QName(PackageNamespace("flash.display"),"Stage")
         istypelate
         ofs0:
         dup
         iftrue ofs1
         pop
         getlex QName(PackageNamespace(""),"root")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseY")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"undefined")
         strictequals
         ofs1:
         iffalse ofs2
         getlocal0
         getsuper QName(PackageNamespace(""),"mouseY")
         returnvalue
         ofs2:
         findpropstrict QName(PackageNamespace(""),"globalToLocal")
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         pushbyte 0
         getlex QName(PackageNamespace(""),"root")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"fakeMouseY")
         getproperty MultinameL([PackageNamespace(""),PrivateNamespace(null,"#UIComponent/1"),PrivateNamespace(null,"#UIComponent"),Namespace("http://www.adobe.com/2006/flex/mx/internal"),PackageNamespace("mx.core"),PackageInternalNs("mx.core"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.core:UIComponent"),StaticProtectedNs("mx.core:UIComponent"),StaticProtectedNs("mx.core:FlexSprite"),StaticProtectedNs("flash.display:Sprite"),StaticProtectedNs("flash.display:DisplayObjectContainer"),StaticProtectedNs("flash.display:InteractiveObject"),StaticProtectedNs("flash.display:DisplayObject"),StaticProtectedNs("flash.events:EventDispatcher"),StaticProtectedNs("Object")])
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         callproperty QName(PackageNamespace(""),"globalToLocal"), 1
         getproperty QName(PackageNamespace(""),"y")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function initAdvancedLayoutFeatures() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.core"),"AdvancedLayoutFeatures")
         constructprop QName(PackageNamespace("mx.core"),"AdvancedLayoutFeatures"), 0
         coerce QName(PackageNamespace("mx.core"),"AdvancedLayoutFeatures")
         setlocal1
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleX")
         setproperty QName(PackageNamespace(""),"layoutScaleX")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleY")
         setproperty QName(PackageNamespace(""),"layoutScaleY")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"scaleZ")
         setproperty QName(PackageNamespace(""),"layoutScaleZ")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"rotationX")
         setproperty QName(PackageNamespace(""),"layoutRotationX")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"rotationY")
         setproperty QName(PackageNamespace(""),"layoutRotationY")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"rotation")
         setproperty QName(PackageNamespace(""),"layoutRotationZ")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"layoutX")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"layoutY")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"z")
         setproperty QName(PackageNamespace(""),"layoutZ")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"width")
         setproperty QName(PackageNamespace(""),"layoutWidth")
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function setTransform(param1:flash.geom.Transform) : void
      {
         trait method QName(PrivateNamespace(null,"#UIComponent"),"setTransform")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Transform")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_transform")
         getlex QName(PackageNamespace("mx.geom"),"Transform")
         astypelate
         coerce QName(PackageNamespace("mx.geom"),"Transform")
         setlocal2
         getlocal2
         iffalse ofs0
         getlocal2
         pushnull
         setproperty QName(PackageNamespace(""),"target")
         ofs0:
         getlocal1
         getlex QName(PackageNamespace("mx.geom"),"Transform")
         astypelate
         coerce QName(PackageNamespace("mx.geom"),"Transform")
         setlocal3
         getlocal3
         iffalse ofs1
         getlocal3
         getlocal0
         setproperty QName(PackageNamespace(""),"target")
         ofs1:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_transform")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function get $transform() : flash.geom.Transform
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"$transform")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Transform")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function get transform() : flash.geom.Transform
      {
         trait getter QName(PackageNamespace(""),"transform")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Transform")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_transform")
         pushnull
         ifne ofs0
         getlocal0
         findpropstrict QName(PackageNamespace("mx.geom"),"Transform")
         getlocal0
         constructprop QName(PackageNamespace("mx.geom"),"Transform"), 1
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"setTransform"), 1
         ofs0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_transform")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function set transform(param1:flash.geom.Transform) : void
      {
         trait setter QName(PackageNamespace(""),"transform")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Transform")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 8
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getproperty QName(PackageNamespace(""),"matrix")
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal2
         getlocal1
         getproperty QName(PackageNamespace(""),"matrix3D")
         coerce QName(PackageNamespace("flash.geom"),"Matrix3D")
         setlocal3
         getlocal1
         getproperty QName(PackageNamespace(""),"colorTransform")
         coerce QName(PackageNamespace("flash.geom"),"ColorTransform")
         setlocal 4
         getlocal1
         getproperty QName(PackageNamespace(""),"perspectiveProjection")
         coerce QName(PackageNamespace("flash.geom"),"PerspectiveProjection")
         setlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal 6
         getlocal1
         getlex QName(PackageNamespace("mx.geom"),"Transform")
         astypelate
         coerce QName(PackageNamespace("mx.geom"),"Transform")
         dup
         setlocal 7
         iffalse ofs0
         getlocal 7
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"applyMatrix")
         iftrue ofs1
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal2
         ofs1:
         getlocal 7
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"applyMatrix3D")
         iftrue ofs0
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix3D")
         setlocal3
         ofs0:
         getlocal0
         getlocal1
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"setTransform"), 1
         getlocal2
         pushnull
         ifeq ofs2
         getlocal0
         getlocal2
         callproperty QName(PackageNamespace(""),"clone"), 0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setLayoutMatrix"), 2
         jump ofs3
         ofs2:
         getlocal3
         pushnull
         ifeq ofs3
         getlocal0
         getlocal3
         callproperty QName(PackageNamespace(""),"clone"), 0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setLayoutMatrix3D"), 2
         ofs3:
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getlocal 4
         setproperty QName(PackageNamespace(""),"colorTransform")
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getlocal 5
         setproperty QName(PackageNamespace(""),"perspectiveProjection")
         getlocal0
         getproperty QName(PackageNamespace(""),"maintainProjectionCenter")
         iffalse ofs4
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         ofs4:
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs5
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get postLayoutTransformOffsets() : TransformOffsets
      {
         trait getter QName(PackageNamespace(""),"postLayoutTransformOffsets")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.geom"),"TransformOffsets")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifeq ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"postLayoutTransformOffsets")
         coerce QName(PackageNamespace("mx.geom"),"TransformOffsets")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("mx.geom"),"TransformOffsets")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set postLayoutTransformOffsets(param1:TransformOffsets) : void
      {
         trait setter QName(PackageNamespace(""),"postLayoutTransformOffsets")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.geom"),"TransformOffsets")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"postLayoutTransformOffsets")
         pushnull
         ifeq ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"postLayoutTransformOffsets")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"CHANGE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"transformOffsetsChangedHandler")
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 2
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"postLayoutTransformOffsets")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"postLayoutTransformOffsets")
         pushnull
         ifeq ofs2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"postLayoutTransformOffsets")
         getlex QName(PackageNamespace("flash.events"),"Event")
         getproperty QName(PackageNamespace(""),"CHANGE")
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"transformOffsetsChangedHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         ofs2:
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs3
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs3:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set maintainProjectionCenter(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"maintainProjectionCenter")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_maintainProjectionCenter")
         getlocal1
         convert_b
         dup
         iffalse ofs0
         pop
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"perspectiveProjection")
         pushnull
         equals
         ofs0:
         iffalse ofs1
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         findpropstrict QName(PackageNamespace("flash.geom"),"PerspectiveProjection")
         constructprop QName(PackageNamespace("flash.geom"),"PerspectiveProjection"), 0
         setproperty QName(PackageNamespace(""),"perspectiveProjection")
         ofs1:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get maintainProjectionCenter() : Boolean
      {
         trait getter QName(PackageNamespace(""),"maintainProjectionCenter")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_maintainProjectionCenter")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setLayoutMatrix(param1:Matrix, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setLayoutMatrix")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Matrix")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutMatrix")
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal 4
         getlocal0
         pushtrue
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_hasComplexLayoutMatrix")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs2
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getlocal1
         setproperty QName(PackageNamespace(""),"matrix")
         jump ofs3
         ofs2:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutMatrix")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         ofs3:
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutMatrix")
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs5
         ofs4:
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs5:
         callproperty QName(PackageNamespace(""),"isEqual"), 2
         iffalse ofs6
         returnvoid
         ofs6:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal2
         iffalse ofs7
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         ofs7:
         getlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs8
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs8:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setLayoutMatrix3D(param1:Matrix3D, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setLayoutMatrix3D")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Matrix3D")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         convert_b
         dup
         iffalse ofs0
         pop
         getlex QName(PackageNamespace("mx.utils"),"MatrixUtil")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutMatrix3D")
         getlocal1
         callproperty QName(PackageNamespace(""),"isEqual3D"), 2
         convert_b
         ofs0:
         iffalse ofs1
         returnvoid
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         setlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs2
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs2:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"layoutMatrix3D")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"invalidateProperties"), 0
         getlocal2
         iffalse ofs3
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         ofs3:
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"is3D")
         ifeq ofs4
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"validateMatrix"), 0
         ofs4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function transformAround(param1:Vector3D, param2:Vector3D = null, param3:Vector3D = null, param4:Vector3D = null, param5:Vector3D = null, param6:Vector3D = null, param7:Vector3D = null, param8:Boolean = true) : void
      {
         trait method QName(PackageNamespace(""),"transformAround")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace(""),"Boolean")
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         optional Null()
         optional True()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 16
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushfalse
         setlocal 9
         pushfalse
         setlocal 10
         pushnan
         setlocal 11
         pushnan
         setlocal 12
         pushnan
         setlocal 13
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 14
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 15
         getlocal 8
         iftrue ofs0
         getlocal0
         getproperty QName(PrivateNamespace(null,"#UIComponent"),"_includeInLayout")
         convert_b
         setlocal 9
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_includeInLayout")
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal2
         pushnull
         equals
         not
         dup
         iffalse ofs2
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs3
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 1
         equals
         not
         ofs3:
         dup
         iftrue ofs4
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs4
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 1
         equals
         not
         ofs4:
         dup
         iftrue ofs2
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         getproperty QName(PackageNamespace(""),"z")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs2
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"z")
         pushbyte 1
         equals
         not
         ofs2:
         dup
         iftrue ofs5
         pop
         getlocal3
         pushnull
         equals
         not
         dup
         iffalse ofs5
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         getproperty QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs6
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         not
         ofs6:
         dup
         iftrue ofs7
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         getproperty QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs7
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         equals
         not
         ofs7:
         dup
         iftrue ofs5
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         getproperty QName(PackageNamespace(""),"z")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs5
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"z")
         pushbyte 0
         equals
         not
         ofs5:
         dup
         iftrue ofs8
         pop
         getlocal 4
         pushnull
         equals
         not
         dup
         iffalse ofs9
         pop
         getlocal 4
         getproperty QName(PackageNamespace(""),"z")
         pushbyte 0
         equals
         not
         ofs9:
         dup
         iffalse ofs8
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 4
         getproperty QName(PackageNamespace(""),"z")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs8:
         dup
         iftrue ofs10
         pop
         getlocal 5
         pushnull
         equals
         not
         ofs10:
         dup
         iftrue ofs11
         pop
         getlocal 6
         pushnull
         equals
         not
         ofs11:
         dup
         iftrue ofs12
         pop
         getlocal 7
         pushnull
         equals
         not
         dup
         iffalse ofs12
         pop
         getlocal 4
         pushnull
         equals
         dup
         iftrue ofs13
         pop
         getlocal 7
         getproperty QName(PackageNamespace(""),"x")
         getlocal 4
         getproperty QName(PackageNamespace(""),"x")
         equals
         not
         ofs13:
         dup
         iftrue ofs14
         pop
         getlocal 7
         getproperty QName(PackageNamespace(""),"y")
         getlocal 4
         getproperty QName(PackageNamespace(""),"y")
         equals
         not
         ofs14:
         dup
         iftrue ofs12
         pop
         getlocal 7
         getproperty QName(PackageNamespace(""),"z")
         getlocal 4
         getproperty QName(PackageNamespace(""),"z")
         equals
         not
         ofs12:
         convert_b
         dup
         setlocal 10
         iffalse ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifeq ofs15
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutX")
         convert_d
         setlocal 11
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutY")
         convert_d
         setlocal 12
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutZ")
         convert_d
         setlocal 13
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         getlocal 5
         getlocal 6
         getlocal 7
         callpropvoid QName(PackageNamespace(""),"transformAround"), 7
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"invalidateParentSizeAndDisplayList"), 0
         getlocal 11
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutX")
         ifeq ofs16
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "xChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs16:
         getlocal 12
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutY")
         ifeq ofs17
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "yChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs17:
         getlocal 13
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutZ")
         ifeq ofs18
         getlocal0
         findpropstrict QName(PackageNamespace("flash.events"),"Event")
         pushstring "zChanged"
         constructprop QName(PackageNamespace("flash.events"),"Event"), 1
         callpropvoid QName(PackageNamespace(""),"dispatchEvent"), 1
         ofs18:
         jump ofs19
         ofs15:
         getlocal 4
         pushnull
         equals
         dup
         iffalse ofs20
         pop
         getlocal1
         pushnull
         equals
         not
         ofs20:
         iffalse ofs21
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         pushnull
         ifne ofs22
         findproperty QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 0
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         ofs22:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         callproperty QName(PackageNamespace(""),"transformPoint"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 14
         ofs21:
         getlocal3
         pushnull
         equals
         not
         dup
         iffalse ofs23
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         getproperty QName(PackageNamespace(""),"z")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs23:
         iffalse ofs24
         getlocal0
         getlocal3
         getproperty QName(PackageNamespace(""),"z")
         setproperty QName(PackageNamespace(""),"rotation")
         ofs24:
         getlocal2
         pushnull
         ifeq ofs25
         getlocal0
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         initproperty QName(PackageNamespace(""),"scaleX")
         getlocal0
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         initproperty QName(PackageNamespace(""),"scaleY")
         ofs25:
         getlocal1
         pushnull
         ifne ofs26
         getlocal 4
         pushnull
         ifeq ofs27
         getlocal0
         getlocal 4
         getproperty QName(PackageNamespace(""),"x")
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlocal 4
         getproperty QName(PackageNamespace(""),"y")
         initproperty QName(PackageNamespace(""),"y")
         ofs27:
         jump ofs19
         ofs26:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         pushnull
         ifne ofs28
         findproperty QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 0
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         ofs28:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         callproperty QName(PackageNamespace(""),"transformPoint"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 15
         getlocal 4
         pushnull
         ifeq ofs29
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         getlocal 4
         getproperty QName(PackageNamespace(""),"x")
         getlocal 15
         getproperty QName(PackageNamespace(""),"x")
         subtract
         add
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         getlocal 4
         getproperty QName(PackageNamespace(""),"y")
         getlocal 15
         getproperty QName(PackageNamespace(""),"y")
         subtract
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs19
         ofs29:
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"x")
         getlocal 14
         getproperty QName(PackageNamespace(""),"x")
         getlocal 15
         getproperty QName(PackageNamespace(""),"x")
         subtract
         add
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"y")
         getlocal 14
         getproperty QName(PackageNamespace(""),"y")
         getlocal 15
         getproperty QName(PackageNamespace(""),"y")
         subtract
         add
         initproperty QName(PackageNamespace(""),"y")
         ofs19:
         getlocal 8
         iftrue ofs30
         getlocal0
         getlocal 9
         initproperty QName(PrivateNamespace(null,"#UIComponent"),"_includeInLayout")
         ofs30:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function transformPointToParent(param1:Vector3D, param2:Vector3D, param3:Vector3D) : void
      {
         trait method QName(PackageNamespace(""),"transformPointToParent")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         param QName(PackageNamespace("flash.geom"),"Vector3D")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 4
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifeq ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushtrue
         getlocal1
         getlocal2
         getlocal3
         callpropvoid QName(PackageNamespace(""),"transformPointToParent"), 4
         jump ofs1
         ofs0:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         pushnull
         ifne ofs2
         findproperty QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 0
         setproperty QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         ofs2:
         getlocal1
         iffalse ofs3
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         jump ofs4
         ofs3:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         ofs4:
         getlocal0
         getproperty QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         pushnull
         ifeq ofs5
         getlocal0
         getproperty QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         callproperty QName(PackageNamespace(""),"transformPoint"), 1
         coerce QName(PackageNamespace("flash.geom"),"Point")
         jump ofs6
         ofs5:
         getlex QName(PrivateNamespace(null,"#UIComponent"),"xformPt")
         coerce QName(PackageNamespace("flash.geom"),"Point")
         ofs6:
         coerce QName(PackageNamespace("flash.geom"),"Point")
         setlocal 4
         getlocal2
         pushnull
         ifeq ofs7
         getlocal2
         getlocal 4
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlocal2
         getlocal 4
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         getlocal2
         pushbyte 0
         setproperty QName(PackageNamespace(""),"z")
         ofs7:
         getlocal3
         pushnull
         ifeq ofs1
         getlocal3
         getlocal 4
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlocal3
         getlocal 4
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         getlocal3
         pushbyte 0
         setproperty QName(PackageNamespace(""),"z")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function set layoutMatrix3D(param1:Matrix3D) : void
      {
         trait setter QName(PackageNamespace(""),"layoutMatrix3D")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.geom"),"Matrix3D")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setLayoutMatrix3D"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get depth() : Number
      {
         trait getter QName(PackageNamespace(""),"depth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         pushbyte 0
         convert_d
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"depth")
         convert_d
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set depth(param1:Number) : void
      {
         trait setter QName(PackageNamespace(""),"depth")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"depth")
         ifne ofs0
         returnvoid
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs1
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs1:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"depth")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         getlex QName(PackageNamespace("mx.core"),"UIComponent")
         istypelate
         iffalse ofs2
         findpropstrict QName(PackageNamespace("mx.core"),"UIComponent")
         getlocal0
         getproperty QName(PackageNamespace(""),"parent")
         callproperty QName(PackageNamespace("mx.core"),"UIComponent"), 1
         callpropvoid QName(PackageNamespace(""),"invalidateLayering"), 0
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function invalidateLayering() : void
      {
         trait method QName(PackageNamespace(""),"invalidateLayering")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function applyComputedMatrix() : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"applyComputedMatrix")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushfalse
         setproperty QName(PackageNamespace(""),"updatePending")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"is3D")
         iffalse ofs0
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"computedMatrix3D")
         setproperty QName(PackageNamespace(""),"matrix3D")
         jump ofs1
         ofs0:
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"computedMatrix")
         setproperty QName(PackageNamespace(""),"matrix")
         ofs1:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      mx_internal function get computedMatrix() : Matrix
      {
         trait getter QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"computedMatrix")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"computedMatrix")
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function setStretchXY(param1:Number, param2:Number) : void
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"setStretchXY")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs0:
         getlocal1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"stretchX")
         equals
         not
         dup
         iftrue ofs1
         pop
         getlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"stretchY")
         equals
         not
         ofs1:
         iffalse ofs2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal1
         setproperty QName(PackageNamespace(""),"stretchX")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getlocal2
         setproperty QName(PackageNamespace(""),"stretchY")
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"#UIComponent"),"invalidateTransform"), 0
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getPreferredBoundsWidth(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getPreferredBoundsWidth")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getPreferredBoundsWidth"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getPreferredBoundsHeight(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getPreferredBoundsHeight")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getPreferredBoundsHeight"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMinBoundsWidth(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getMinBoundsWidth")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getMinBoundsWidth"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMinBoundsHeight(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getMinBoundsHeight")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getMinBoundsHeight"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMaxBoundsWidth(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getMaxBoundsWidth")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getMaxBoundsWidth"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMaxBoundsHeight(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getMaxBoundsHeight")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getMaxBoundsHeight"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getBoundsXAtSize(param1:Number, param2:Number, param3:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getBoundsXAtSize")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getBoundsXAtSize"), 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getBoundsYAtSize(param1:Number, param2:Number, param3:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getBoundsYAtSize")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getBoundsYAtSize"), 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getLayoutBoundsWidth(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getLayoutBoundsWidth")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getLayoutBoundsWidth"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getLayoutBoundsHeight(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getLayoutBoundsHeight")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getLayoutBoundsHeight"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getLayoutBoundsX(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getLayoutBoundsX")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getLayoutBoundsX"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getLayoutBoundsY(param1:Boolean = true) : Number
      {
         trait method QName(PackageNamespace(""),"getLayoutBoundsY")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callproperty QName(PackageNamespace(""),"getLayoutBoundsY"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setLayoutBoundsPosition(param1:Number, param2:Number, param3:Boolean = true) : void
      {
         trait method QName(PackageNamespace(""),"setLayoutBoundsPosition")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setLayoutBoundsPosition"), 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setLayoutBoundsSize(param1:Number, param2:Number, param3:Boolean = true) : void
      {
         trait method QName(PackageNamespace(""),"setLayoutBoundsSize")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("mx.core"),"LayoutElementUIComponentUtils")
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         jump ofs1
         ofs0:
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         ofs1:
         callpropvoid QName(PackageNamespace(""),"setLayoutBoundsSize"), 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getLayoutMatrix() : Matrix
      {
         trait method QName(PackageNamespace(""),"getLayoutMatrix")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         equals
         not
         dup
         iftrue ofs0
         pop
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         pushnull
         equals
         ofs0:
         iffalse ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs2
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs2:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutMatrix")
         callproperty QName(PackageNamespace(""),"clone"), 0
         returnvalue
         jump ofs1
         ofs1:
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get hasLayoutMatrix3D() : Boolean
      {
         trait getter QName(PackageNamespace(""),"hasLayoutMatrix3D")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutIs3D")
         convert_b
         jump ofs1
         ofs0:
         pushfalse
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get is3D() : Boolean
      {
         trait getter QName(PackageNamespace(""),"is3D")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         iffalse ofs0
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"is3D")
         convert_b
         jump ofs1
         ofs0:
         pushfalse
         ofs1:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getLayoutMatrix3D() : Matrix3D
      {
         trait method QName(PackageNamespace(""),"getLayoutMatrix3D")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Matrix3D")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifne ofs0
         getlocal0
         callpropvoid QName(ProtectedNamespace("mx.core:UIComponent"),"initAdvancedLayoutFeatures"), 0
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutMatrix3D")
         callproperty QName(PackageNamespace(""),"clone"), 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function nonDeltaLayoutMatrix() : Matrix
      {
         trait method QName(ProtectedNamespace("mx.core:UIComponent"),"nonDeltaLayoutMatrix")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Matrix")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 10
         maxscopedepth 11
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("mx.core:UIComponent"),"hasComplexLayoutMatrix")
         iftrue ofs0
         pushnull
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         pushnull
         ifeq ofs1
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_layoutFeatures")
         getproperty QName(PackageNamespace(""),"layoutMatrix")
         returnvalue
         ofs1:
         getlocal0
         getsuper QName(PackageNamespace(""),"transform")
         getproperty QName(PackageNamespace(""),"matrix")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

class MethodQueueElement
{
   method
   name null
   returns null
   
   body
   maxstack 1
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   
   code
   getlocal0
   pushscope
   returnvoid
   end ; code
   end ; body
   end ; method
   
   public var method:Function;
   
   public var args:Array;
   
   public function MethodQueueElement(param1:Function, param2:Array = null)
   {
      method
      name null
      flag HAS_OPTIONAL
      param QName(PackageNamespace(""),"Function")
      param QName(PackageNamespace(""),"Array")
      optional Null()
      returns null
      
      body
      maxstack 2
      localcount 3
      initscopedepth 4
      maxscopedepth 5
      
      code
      getlocal0
      pushscope
      getlocal0
      constructsuper 0
      getlocal0
      getlocal1
      initproperty QName(PackageNamespace(""),"method")
      getlocal0
      getlocal2
      initproperty QName(PackageNamespace(""),"args")
      returnvoid
      end ; code
      end ; body
      end ; method
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 9

code
getlocal0
pushscope
findpropstrict Multiname("UIComponent",[PackageNamespace("mx.core")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
pushscope
getlex QName(PackageNamespace("flash.display"),"DisplayObject")
pushscope
getlex QName(PackageNamespace("flash.display"),"InteractiveObject")
pushscope
getlex QName(PackageNamespace("flash.display"),"DisplayObjectContainer")
pushscope
getlex QName(PackageNamespace("flash.display"),"Sprite")
pushscope
getlex QName(PackageNamespace("mx.core"),"FlexSprite")
pushscope
getlex QName(PackageNamespace("mx.core"),"FlexSprite")
newclass #UIComponent
popscope
popscope
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace("mx.core"),"UIComponent")
findpropstrict Multiname("MethodQueueElement",[PrivateNamespace(null,"#UIComponent/1")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace(""),"Object")
newclass #MethodQueueElement
popscope
initproperty QName(PrivateNamespace(null,"#UIComponent/1"),"MethodQueueElement")
returnvoid
end ; code
end ; body
end ; method

