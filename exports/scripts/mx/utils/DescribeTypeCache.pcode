package mx.utils
{
   import flash.utils.describeType;
   import flash.utils.getDefinitionByName;
   import flash.utils.getQualifiedClassName;
   import mx.binding.BindabilityInfo;
   import mx.core.mx_internal;
   
   use namespace mx_internal;
   
   public class DescribeTypeCache
   {
      mx_internal static const VERSION:String = "4.1.0.21490";
      
      private static var typeCache:Object;
      
      private static var cacheHandlers:Object;
      
      method
      name null
      returns null
      
      body
      maxstack 3
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal0
      pushscope
      findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      pushstring "4.1.0.21490"
      initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      findproperty QName(PrivateNamespace(null,"247"),"typeCache")
      newobject 0
      setproperty QName(PrivateNamespace(null,"247"),"typeCache")
      findproperty QName(PrivateNamespace(null,"247"),"cacheHandlers")
      newobject 0
      setproperty QName(PrivateNamespace(null,"247"),"cacheHandlers")
      findpropstrict QName(PackageNamespace(""),"registerCacheHandler")
      pushstring "bindabilityInfo"
      getlex QName(PrivateNamespace(null,"247"),"bindabilityInfoHandler")
      callpropvoid QName(PackageNamespace(""),"registerCacheHandler"), 2
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public function DescribeTypeCache()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function describeType(param1:*) : DescribeTypeCacheRecord
      {
         trait method QName(PackageNamespace(""),"describeType")
         flag FINAL
         dispid 3
         method
         name null
         param null
         returns QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnull
         coerce_s
         setlocal2
         pushnull
         coerce_s
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"XML")
         setlocal 4
         pushnull
         coerce QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord")
         setlocal 5
         getlocal1
         getlex QName(PackageNamespace(""),"String")
         istypelate
         iffalse ofs002a
         getlocal1
         dup
         setlocal 6
         coerce_s
         setlocal2
         getlocal 6
         kill 6
         coerce_s
         setlocal3
         jump ofs003d
         ofs002a:
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         dup
         setlocal 6
         coerce_s
         setlocal2
         getlocal 6
         kill 6
         coerce_s
         setlocal3
         ofs003d:
         getlocal1
         getlex QName(PackageNamespace(""),"Class")
         istypelate
         iffalse ofs004b
         getlocal3
         pushstring "$"
         add
         setlocal3
         ofs004b:
         getlocal3
         getlex QName(PrivateNamespace(null,"247"),"typeCache")
         in
         iffalse ofs005c
         getlex QName(PrivateNamespace(null,"247"),"typeCache")
         getlocal3
         getproperty MultinameL([PrivateNamespace(null,"247"),PackageNamespace(""),PackageNamespace("mx.utils"),PrivateNamespace(null,"406"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:DescribeTypeCache"),StaticProtectedNs("mx.utils:DescribeTypeCache"),StaticProtectedNs("Object")])
         returnvalue
         ofs005c:
         getlocal1
         getlex QName(PackageNamespace(""),"String")
         istypelate
         iffalse ofs006e
         findpropstrict QName(PackageNamespace("flash.utils"),"getDefinitionByName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getDefinitionByName"), 1
         coerce_a
         setlocal1
         ofs006e:
         findpropstrict QName(PackageNamespace("flash.utils"),"describeType")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"describeType"), 1
         coerce QName(PackageNamespace(""),"XML")
         setlocal 4
         findpropstrict QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord")
         constructprop QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord"), 0
         coerce QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord")
         dup
         setlocal 5
         getlocal 4
         setproperty QName(PackageNamespace(""),"typeDescription")
         getlocal 5
         getlocal2
         setproperty QName(PackageNamespace(""),"typeName")
         getlex QName(PrivateNamespace(null,"247"),"typeCache")
         getlocal3
         getlocal 5
         setproperty MultinameL([PrivateNamespace(null,"247"),PackageNamespace(""),PackageNamespace("mx.utils"),PrivateNamespace(null,"406"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:DescribeTypeCache"),StaticProtectedNs("mx.utils:DescribeTypeCache"),StaticProtectedNs("Object")])
         getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function registerCacheHandler(param1:String, param2:Function) : void
      {
         trait method QName(PackageNamespace(""),"registerCacheHandler")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Function")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PrivateNamespace(null,"247"),"cacheHandlers")
         getlocal1
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"247"),PackageNamespace(""),PackageNamespace("mx.utils"),PrivateNamespace(null,"406"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:DescribeTypeCache"),StaticProtectedNs("mx.utils:DescribeTypeCache"),StaticProtectedNs("Object")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      internal static function extractValue(param1:String, param2:DescribeTypeCacheRecord) : *
      {
         trait method QName(PackageInternalNs("mx.utils"),"extractValue")
         flag FINAL
         dispid 5
         method
         name null
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord")
         returns null
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PrivateNamespace(null,"247"),"cacheHandlers")
         in
         iffalse ofs001b
         getlex QName(PrivateNamespace(null,"247"),"cacheHandlers")
         dup
         setlocal3
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"247"),PackageNamespace(""),PackageNamespace("mx.utils"),PrivateNamespace(null,"406"),PackageInternalNs("mx.utils"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("mx.utils:DescribeTypeCache"),StaticProtectedNs("mx.utils:DescribeTypeCache"),StaticProtectedNs("Object")])
         getlocal3
         getlocal2
         call 1
         kill 3
         returnvalue
         ofs001b:
         getlex QName(PackageNamespace(""),"undefined")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function bindabilityInfoHandler(param1:DescribeTypeCacheRecord) : *
      {
         trait method QName(PrivateNamespace(null,"247"),"bindabilityInfoHandler")
         flag FINAL
         dispid 6
         method
         name null
         param QName(PackageNamespace("mx.utils"),"DescribeTypeCacheRecord")
         returns null
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("mx.binding"),"BindabilityInfo")
         getlocal1
         getproperty QName(PackageNamespace(""),"typeDescription")
         constructprop QName(PackageNamespace("mx.binding"),"BindabilityInfo"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 3

code
getlocal0
pushscope
findpropstrict Multiname("DescribeTypeCache",[PackageNamespace("mx.utils")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace(""),"Object")
newclass 128
popscope
initproperty QName(PackageNamespace("mx.utils"),"DescribeTypeCache")
returnvoid
end ; code
end ; body
end ; method

