package
{
   import org.flixel.FlxG;
   
   public class EnemySeahorse extends Enemy
   {
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 32;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 250;
      
      private static const DEFENSE:int = 10;
      
      private static const OFFENSE:int = 2;
      
      private static const MODE_WAIT:int = 0;
      
      private static const MODE_COS_UP_LEFT:int = 1;
      
      private static const MODE_COS_DOWN_LEFT:int = 2;
      
      private static const MODE_COS_UP_RIGHT:int = 3;
      
      private static const MODE_COS_DOWN_RIGHT:int = 4;
      
      private static const MODE_SEMICIRCLE_LEFT_UP:int = 5;
      
      private static const MODE_SEMICIRCLE_LEFT_DOWN:int = 6;
      
      private static const MODE_SEMICIRCLE_RIGHT_UP:int = 7;
      
      private static const MODE_SEMICIRCLE_RIGHT_DOWN:int = 8;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 8
      maxscopedepth 9
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"85"),"IMG_WIDTH")
      pushbyte 16
      initproperty QName(PrivateNamespace(null,"85"),"IMG_WIDTH")
      findproperty QName(PrivateNamespace(null,"85"),"IMG_HEIGHT")
      pushbyte 32
      initproperty QName(PrivateNamespace(null,"85"),"IMG_HEIGHT")
      findproperty QName(PrivateNamespace(null,"85"),"IMG_OFS_X")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"85"),"IMG_OFS_X")
      findproperty QName(PrivateNamespace(null,"85"),"IMG_OFS_Y")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"85"),"IMG_OFS_Y")
      findproperty QName(PrivateNamespace(null,"85"),"MAX_HP")
      pushshort 250
      initproperty QName(PrivateNamespace(null,"85"),"MAX_HP")
      findproperty QName(PrivateNamespace(null,"85"),"DEFENSE")
      pushbyte 10
      initproperty QName(PrivateNamespace(null,"85"),"DEFENSE")
      findproperty QName(PrivateNamespace(null,"85"),"OFFENSE")
      pushbyte 2
      initproperty QName(PrivateNamespace(null,"85"),"OFFENSE")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_WAIT")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"85"),"MODE_WAIT")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_COS_UP_LEFT")
      pushbyte 1
      initproperty QName(PrivateNamespace(null,"85"),"MODE_COS_UP_LEFT")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_LEFT")
      pushbyte 2
      initproperty QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_LEFT")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_COS_UP_RIGHT")
      pushbyte 3
      initproperty QName(PrivateNamespace(null,"85"),"MODE_COS_UP_RIGHT")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_RIGHT")
      pushbyte 4
      initproperty QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_RIGHT")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_UP")
      pushbyte 5
      initproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_UP")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_DOWN")
      pushbyte 6
      initproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_DOWN")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_UP")
      pushbyte 7
      initproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_UP")
      findproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_DOWN")
      pushbyte 8
      initproperty QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_DOWN")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var mode:int = 0;
      
      private var originX:Number;
      
      private var originY:Number;
      
      private var theta:Number = 0;
      
      private var elapsed:Number = 0;
      
      private var X_RADIUS:Number = 70;
      
      private var Y_RADIUS:Number = 20;
      
      private var MOVE_TIME:Number = 1.8;
      
      private var AI_TRIGGER_TIMEOUT:Number = 1.5;
      
      private var _aiTriggerTimeout:Number = 0;
      
      public function EnemySeahorse(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns null
         
         body
         maxstack 7
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs001e
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_insaneMode")
         convert_b
         ofs001e:
         iffalse ofs0039
         getlocal0
         pushdouble 1.3
         initproperty QName(PrivateNamespace(null,"85"),"MOVE_TIME")
         getlocal0
         pushshort 130
         initproperty QName(PrivateNamespace(null,"85"),"X_RADIUS")
         getlocal0
         pushbyte 40
         initproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         jump ofs006c
         ofs0039:
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs0055
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         ofs0055:
         iffalse ofs006c
         getlocal0
         pushdouble 1.9
         initproperty QName(PrivateNamespace(null,"85"),"MOVE_TIME")
         getlocal0
         pushshort 140
         initproperty QName(PrivateNamespace(null,"85"),"X_RADIUS")
         getlocal0
         pushbyte 50
         initproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         ofs006c:
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"85"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"85"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"85"),"OFFENSE")
         pushtrue
         constructsuper 6
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemySeahorse")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"85"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"85"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"85"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"85"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"85"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"85"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"MOVE_TIME")
         initproperty QName(PrivateNamespace(null,"85"),"elapsed")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         findproperty QName(PackageNamespace(""),"visible")
         pushtrue
         initproperty QName(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function normalizedSigmoid(param1:Number) : Number
      {
         trait method QName(PrivateNamespace(null,"85"),"normalizedSigmoid")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushbyte 1
         dup
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         pushbyte 12
         multiply
         pushbyte 6
         subtract
         negate
         callproperty QName(PackageNamespace(""),"exp"), 1
         add
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function triggerAi3() : void
      {
         trait method QName(PackageNamespace(""),"triggerAi3")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"_aiTriggerTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"85"),"_aiTriggerTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"_aiTriggerTimeout")
         pushbyte 0
         ifngt ofs001c
         returnvoid
         ofs001c:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"AI_TRIGGER_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"85"),"_aiTriggerTimeout")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"85"),"elapsed")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         setproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         setproperty QName(PrivateNamespace(null,"85"),"originY")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs0064
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         ifne ofs0059
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_LEFT")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         jump ofs0060
         ofs0059:
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         ofs0060:
         jump ofs0080
         ofs0064:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs0079
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_RIGHT")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         jump ofs0080
         ofs0079:
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_DOWN")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         ofs0080:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updatePosition() : void
      {
         trait method QName(PackageNamespace(""),"updatePosition")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"mode")
         getlex QName(PrivateNamespace(null,"85"),"MODE_WAIT")
         ifne ofs0015
         returnvoid
         ofs0015:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"MOVE_TIME")
         divide
         callproperty QName(PrivateNamespace(null,"85"),"normalizedSigmoid"), 1
         convert_d
         setlocal1
         jump ofs0242
         ofs0029:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"X_RADIUS")
         getlocal1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         jump ofs02e5
         ofs005d:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"X_RADIUS")
         getlocal1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs02e5
         ofs0091:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"X_RADIUS")
         getlocal1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         jump ofs02e5
         ofs00c5:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"X_RADIUS")
         getlocal1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs02e5
         ofs00f9:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs0147
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs0147:
         jump ofs02e5
         ofs014b:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs0199
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs0199:
         jump ofs02e5
         ofs019d:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs01eb
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs01eb:
         jump ofs02e5
         ofs01ef:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs023d
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs023d:
         label
         jump ofs02e5
         ofs0242:
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"mode")
         setlocal2
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_UP_LEFT")
         getlocal2
         ifstrictne ofs0255
         pushbyte 0
         jump ofs02c3
         ofs0255:
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_LEFT")
         getlocal2
         ifstrictne ofs0263
         pushbyte 1
         jump ofs02c3
         ofs0263:
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_UP_RIGHT")
         getlocal2
         ifstrictne ofs0271
         pushbyte 2
         jump ofs02c3
         ofs0271:
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_RIGHT")
         getlocal2
         ifstrictne ofs027f
         pushbyte 3
         jump ofs02c3
         ofs027f:
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_UP")
         getlocal2
         ifstrictne ofs028d
         pushbyte 4
         jump ofs02c3
         ofs028d:
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_DOWN")
         getlocal2
         ifstrictne ofs029b
         pushbyte 5
         jump ofs02c3
         ofs029b:
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_UP")
         getlocal2
         ifstrictne ofs02a9
         pushbyte 6
         jump ofs02c3
         ofs02a9:
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         getlocal2
         ifstrictne ofs02b7
         pushbyte 7
         jump ofs02c3
         ofs02b7:
         jump ofs02c1
         pushbyte 8
         jump ofs02c1
         ofs02c1:
         pushbyte 8
         ofs02c3:
         kill 2
         lookupswitch ofs023d, [ofs0029, ofs005d, ofs0091, ofs00c5, ofs00f9, ofs014b, ofs019d, ofs01ef, ofs023d]
         ofs02e5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0013
         returnvoid
         ofs0013:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs00fe
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         setproperty QName(PrivateNamespace(null,"85"),"elapsed")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePosition"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"85"),"MOVE_TIME")
         ifnge ofs00fe
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"85"),"elapsed")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         setproperty QName(PrivateNamespace(null,"85"),"originX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         setproperty QName(PrivateNamespace(null,"85"),"originY")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs00b0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         ifne ofs008c
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs0081
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_UP_LEFT")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         jump ofs0088
         ofs0081:
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_LEFT")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         ofs0088:
         jump ofs00ac
         ofs008c:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs00a5
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_UP")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         jump ofs00ac
         ofs00a5:
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         ofs00ac:
         jump ofs00fe
         ofs00b0:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs00de
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs00d3
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_UP_RIGHT")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         jump ofs00da
         ofs00d3:
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_COS_DOWN_RIGHT")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         ofs00da:
         jump ofs00fe
         ofs00de:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs00f7
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_UP")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         jump ofs00fe
         ofs00f7:
         getlocal0
         getlex QName(PrivateNamespace(null,"85"),"MODE_SEMICIRCLE_LEFT_DOWN")
         setproperty QName(PrivateNamespace(null,"85"),"mode")
         ofs00fe:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 8

code
getlocal0
pushscope
findpropstrict Multiname("EnemySeahorse",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
newclass 155
popscope
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"EnemySeahorse")
returnvoid
end ; code
end ; body
end ; method

