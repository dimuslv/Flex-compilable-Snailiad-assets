package
{
   import org.flixel.FlxG;
   
   public class EnemySeahorse extends Enemy
   {
      private static const IMG_WIDTH:int = 16;
      
      private static const IMG_HEIGHT:int = 32;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 250;
      
      private static const DEFENSE:int = 10;
      
      private static const OFFENSE:int = 2;
      
      private static const MODE_WAIT:int = 0;
      
      private static const MODE_COS_UP_LEFT:int = 1;
      
      private static const MODE_COS_DOWN_LEFT:int = 2;
      
      private static const MODE_COS_UP_RIGHT:int = 3;
      
      private static const MODE_COS_DOWN_RIGHT:int = 4;
      
      private static const MODE_SEMICIRCLE_LEFT_UP:int = 5;
      
      private static const MODE_SEMICIRCLE_LEFT_DOWN:int = 6;
      
      private static const MODE_SEMICIRCLE_RIGHT_UP:int = 7;
      
      private static const MODE_SEMICIRCLE_RIGHT_DOWN:int = 8;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 8
      maxscopedepth 9
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"100"),"IMG_WIDTH")
      pushbyte 16
      initproperty QName(PrivateNamespace(null,"100"),"IMG_WIDTH")
      findproperty QName(PrivateNamespace(null,"100"),"IMG_HEIGHT")
      pushbyte 32
      initproperty QName(PrivateNamespace(null,"100"),"IMG_HEIGHT")
      findproperty QName(PrivateNamespace(null,"100"),"IMG_OFS_X")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"100"),"IMG_OFS_X")
      findproperty QName(PrivateNamespace(null,"100"),"IMG_OFS_Y")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"100"),"IMG_OFS_Y")
      findproperty QName(PrivateNamespace(null,"100"),"MAX_HP")
      pushshort 250
      initproperty QName(PrivateNamespace(null,"100"),"MAX_HP")
      findproperty QName(PrivateNamespace(null,"100"),"DEFENSE")
      pushbyte 10
      initproperty QName(PrivateNamespace(null,"100"),"DEFENSE")
      findproperty QName(PrivateNamespace(null,"100"),"OFFENSE")
      pushbyte 2
      initproperty QName(PrivateNamespace(null,"100"),"OFFENSE")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_WAIT")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"100"),"MODE_WAIT")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_COS_UP_LEFT")
      pushbyte 1
      initproperty QName(PrivateNamespace(null,"100"),"MODE_COS_UP_LEFT")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_LEFT")
      pushbyte 2
      initproperty QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_LEFT")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_COS_UP_RIGHT")
      pushbyte 3
      initproperty QName(PrivateNamespace(null,"100"),"MODE_COS_UP_RIGHT")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_RIGHT")
      pushbyte 4
      initproperty QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_RIGHT")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_UP")
      pushbyte 5
      initproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_UP")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_DOWN")
      pushbyte 6
      initproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_DOWN")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_UP")
      pushbyte 7
      initproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_UP")
      findproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_DOWN")
      pushbyte 8
      initproperty QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_DOWN")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var mode:int = 0;
      
      private var originX:Number;
      
      private var originY:Number;
      
      private var theta:Number = 0;
      
      private var elapsed:Number = 0;
      
      private var X_RADIUS:Number = 70;
      
      private var Y_RADIUS:Number = 20;
      
      private var MOVE_TIME:Number = 1.8;
      
      private var AI_TRIGGER_TIMEOUT:Number = 1.5;
      
      private var _aiTriggerTimeout:Number = 0;
      
      public function EnemySeahorse(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs0019
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_insaneMode")
         convert_b
         ofs0019:
         iffalse ofs0034
         getlocal0
         pushdouble 1.3
         initproperty QName(PrivateNamespace(null,"100"),"MOVE_TIME")
         getlocal0
         pushshort 130
         initproperty QName(PrivateNamespace(null,"100"),"X_RADIUS")
         getlocal0
         pushbyte 40
         initproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         jump ofs0063
         ofs0034:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         convert_b
         dup
         iffalse ofs004b
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         ofs004b:
         iffalse ofs0063
         getlocal0
         pushdouble 1.9
         initproperty QName(PrivateNamespace(null,"100"),"MOVE_TIME")
         getlocal0
         pushshort 140
         initproperty QName(PrivateNamespace(null,"100"),"X_RADIUS")
         getlocal0
         pushbyte 50
         initproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         ofs0063:
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"100"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"100"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"100"),"OFFENSE")
         pushtrue
         constructsuper 6
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemySeahorse")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"100"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"100"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"100"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"100"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"100"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"100"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"MOVE_TIME")
         initproperty QName(PrivateNamespace(null,"100"),"elapsed")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         findproperty QName(PackageNamespace(""),"visible")
         pushtrue
         initproperty QName(PackageNamespace(""),"visible")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function normalizedSigmoid(param1:Number) : Number
      {
         trait method QName(PrivateNamespace(null,"100"),"normalizedSigmoid")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushbyte 1
         dup
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         pushbyte 12
         multiply
         pushbyte 6
         subtract
         negate
         callproperty QName(PackageNamespace(""),"exp"), 1
         add
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"touch"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function triggerAi3() : void
      {
         trait method QName(PackageNamespace(""),"triggerAi3")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"_aiTriggerTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         initproperty QName(PrivateNamespace(null,"100"),"_aiTriggerTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"_aiTriggerTimeout")
         pushbyte 0
         ifngt ofs001c
         returnvoid
         ofs001c:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"AI_TRIGGER_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"100"),"_aiTriggerTimeout")
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"100"),"elapsed")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"100"),"originY")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs0068
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         ifne ofs005d
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_LEFT")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         jump ofs0064
         ofs005d:
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         ofs0064:
         jump ofs0084
         ofs0068:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs007d
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_RIGHT")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         jump ofs0084
         ofs007d:
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_DOWN")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         ofs0084:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updatePosition() : void
      {
         trait method QName(PackageNamespace(""),"updatePosition")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"mode")
         getlex QName(PrivateNamespace(null,"100"),"MODE_WAIT")
         ifne ofs0010
         returnvoid
         ofs0010:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"MOVE_TIME")
         divide
         callproperty QName(PrivateNamespace(null,"100"),"normalizedSigmoid"), 1
         convert_d
         setlocal1
         jump ofs0261
         ofs0024:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"X_RADIUS")
         getlocal1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         jump ofs0304
         ofs005c:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"X_RADIUS")
         getlocal1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs0304
         ofs0094:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"X_RADIUS")
         getlocal1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         jump ofs0304
         ofs00cc:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"X_RADIUS")
         getlocal1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs0304
         ofs0104:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs0156
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs0156:
         jump ofs0304
         ofs015a:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs01ac
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs01ac:
         jump ofs0304
         ofs01b0:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs0202
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs0202:
         jump ofs0304
         ofs0206:
         label
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"Y_RADIUS")
         pushbyte 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         callproperty QName(PackageNamespace(""),"cos"), 1
         subtract
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushdouble 0.5
         ifngt ofs0258
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs0258:
         jump ofs0304
         ofs025c:
         label
         jump ofs0304
         ofs0261:
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"mode")
         setlocal2
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_UP_LEFT")
         getlocal2
         ifstrictne ofs0274
         pushbyte 0
         jump ofs02e2
         ofs0274:
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_LEFT")
         getlocal2
         ifstrictne ofs0282
         pushbyte 1
         jump ofs02e2
         ofs0282:
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_UP_RIGHT")
         getlocal2
         ifstrictne ofs0290
         pushbyte 2
         jump ofs02e2
         ofs0290:
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_RIGHT")
         getlocal2
         ifstrictne ofs029e
         pushbyte 3
         jump ofs02e2
         ofs029e:
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_UP")
         getlocal2
         ifstrictne ofs02ac
         pushbyte 4
         jump ofs02e2
         ofs02ac:
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_DOWN")
         getlocal2
         ifstrictne ofs02ba
         pushbyte 5
         jump ofs02e2
         ofs02ba:
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_UP")
         getlocal2
         ifstrictne ofs02c8
         pushbyte 6
         jump ofs02e2
         ofs02c8:
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         getlocal2
         ifstrictne ofs02d6
         pushbyte 7
         jump ofs02e2
         ofs02d6:
         jump ofs02e0
         pushbyte 8
         jump ofs02e0
         ofs02e0:
         pushbyte 8
         ofs02e2:
         kill 2
         lookupswitch ofs025c, [ofs0024, ofs005c, ofs0094, ofs00cc, ofs0104, ofs015a, ofs01b0, ofs0206, ofs025c]
         ofs0304:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0013
         returnvoid
         ofs0013:
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs010a
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         initproperty QName(PrivateNamespace(null,"100"),"elapsed")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePosition"), 0
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"100"),"MOVE_TIME")
         ifnge ofs010a
         getlocal0
         pushbyte 0
         initproperty QName(PrivateNamespace(null,"100"),"elapsed")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"100"),"originX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"100"),"originY")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs00b8
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         ifne ofs0092
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs0087
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_UP_LEFT")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         jump ofs008e
         ofs0087:
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_LEFT")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         ofs008e:
         jump ofs00b4
         ofs0092:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs00ad
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_UP")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         jump ofs00b4
         ofs00ad:
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_RIGHT_DOWN")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         ofs00b4:
         jump ofs010a
         ofs00b8:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs00e8
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs00dd
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_UP_RIGHT")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         jump ofs00e4
         ofs00dd:
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_COS_DOWN_RIGHT")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         ofs00e4:
         jump ofs010a
         ofs00e8:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         ifnlt ofs0103
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_UP")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         jump ofs010a
         ofs0103:
         getlocal0
         getlex QName(PrivateNamespace(null,"100"),"MODE_SEMICIRCLE_LEFT_DOWN")
         initproperty QName(PrivateNamespace(null,"100"),"mode")
         ofs010a:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 8

code
getlocal0
pushscope
findpropstrict Multiname("EnemySeahorse",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
newclass 312
popscope
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"EnemySeahorse")
returnvoid
end ; code
end ; body
end ; method

