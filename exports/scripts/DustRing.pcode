package
{
   import org.flixel.*;
   
   public class DustRing extends FlxGroup
   {
      private static const SPIN_SPEED:Number = 6.283185307179586;
      
      private static const DUST_NUM:int = 16;
      
      private static const RADIUS:Number = 234;
      
      method
      name null
      returns null
      
      body
      maxstack 3
      localcount 1
      initscopedepth 7
      maxscopedepth 8
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"200"),"SPIN_SPEED")
      getlex QName(PackageNamespace(""),"Math")
      getproperty QName(PackageNamespace(""),"PI")
      pushbyte 2
      multiply
      initproperty QName(PrivateNamespace(null,"200"),"SPIN_SPEED")
      findproperty QName(PrivateNamespace(null,"200"),"DUST_NUM")
      pushbyte 16
      initproperty QName(PrivateNamespace(null,"200"),"DUST_NUM")
      findproperty QName(PrivateNamespace(null,"200"),"RADIUS")
      pushshort 234
      initproperty QName(PrivateNamespace(null,"200"),"RADIUS")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var originX:int;
      
      private var originY:int;
      
      private var elapsed:Number = 0;
      
      private var INWARD_SPEED:Number = 90;
      
      private var radius:Number = 234;
      
      private var repeats:int = 0;
      
      public function DustRing(param1:int, param2:int, param3:int = 0, param4:Number = 1)
      {
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         optional Double(1)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"200"),"originX")
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"200"),"originY")
         getlocal0
         getlex QName(PrivateNamespace(null,"200"),"RADIUS")
         getlocal3
         add
         initproperty QName(PrivateNamespace(null,"200"),"radius")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"INWARD_SPEED")
         getlocal 4
         multiply
         initproperty QName(PrivateNamespace(null,"200"),"INWARD_SPEED")
         pushbyte 0
         setlocal 5
         jump ofs003c
         ofs002b:
         label
         findpropstrict QName(PackageNamespace(""),"add")
         findpropstrict QName(PackageNamespace(""),"Dust")
         constructprop QName(PackageNamespace(""),"Dust"), 0
         callpropvoid QName(PackageNamespace(""),"add"), 1
         inclocal_i 5
         ofs003c:
         getlocal 5
         getlex QName(PrivateNamespace(null,"200"),"DUST_NUM")
         iflt ofs002b
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePositions"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"200"),"originX")
         getlocal0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"200"),"originY")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         initproperty QName(PrivateNamespace(null,"200"),"elapsed")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"radius")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"INWARD_SPEED")
         multiply
         subtract
         initproperty QName(PrivateNamespace(null,"200"),"radius")
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"radius")
         pushbyte 0
         ifnle ofs0073
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(null,"200"),"repeats")
         decrement_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(null,"200"),"repeats")
         kill 2
         kill 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"repeats")
         pushbyte 0
         ifnle ofs006c
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         returnvoid
         ofs006c:
         getlocal0
         getlex QName(PrivateNamespace(null,"200"),"RADIUS")
         initproperty QName(PrivateNamespace(null,"200"),"radius")
         ofs0073:
         getlocal0
         callpropvoid QName(PackageNamespace(""),"updatePositions"), 0
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updatePositions() : void
      {
         trait method QName(PackageNamespace(""),"updatePositions")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal2
         pushbyte 0
         setlocal1
         jump ofs0060
         ofs000b:
         label
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         pushbyte 2
         multiply
         getlex QName(PrivateNamespace(null,"200"),"DUST_NUM")
         divide
         getlocal1
         multiply
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"elapsed")
         getlex QName(PrivateNamespace(null,"200"),"SPIN_SPEED")
         multiply
         add
         convert_d
         setlocal2
         getlex QName(PackageNamespace(""),"members")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"200"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"501"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("DustRing"),StaticProtectedNs("DustRing"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"originX")
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         callproperty QName(PackageNamespace(""),"cos"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"radius")
         multiply
         add
         setproperty Multiname("x",[PrivateNamespace(null,"200"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"501"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("DustRing"),StaticProtectedNs("DustRing"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"members")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"200"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"501"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("DustRing"),StaticProtectedNs("DustRing"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"originY")
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         callproperty QName(PackageNamespace(""),"sin"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"200"),"radius")
         multiply
         add
         setproperty Multiname("y",[PrivateNamespace(null,"200"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"501"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("DustRing"),StaticProtectedNs("DustRing"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         inclocal_i 1
         ofs0060:
         getlocal1
         getlex QName(PrivateNamespace(null,"200"),"DUST_NUM")
         iflt ofs000b
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 7

code
getlocal0
pushscope
findpropstrict Multiname("DustRing",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxGroup")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxGroup")
newclass 694
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"DustRing")
returnvoid
end ; code
end ; body
end ; method

