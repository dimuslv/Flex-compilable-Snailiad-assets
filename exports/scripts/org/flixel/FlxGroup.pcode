package org.flixel
{
   public class FlxGroup extends FlxObject
   {
      public static const ASCENDING:int = -1;
      
      public static const DESCENDING:int = 1;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal0
      pushscope
      findproperty QName(PackageNamespace(""),"ASCENDING")
      pushbyte -1
      initproperty QName(PackageNamespace(""),"ASCENDING")
      findproperty QName(PackageNamespace(""),"DESCENDING")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"DESCENDING")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public var members:Array;
      
      protected var _last:FlxPoint;
      
      protected var _first:Boolean;
      
      protected var _sortIndex:String;
      
      protected var _sortOrder:int;
      
      public function FlxGroup()
      {
         method
         name null
         returns null
         
         body
         maxstack 2
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         findproperty QName(PackageInternalNs("org.flixel"),"_group")
         pushtrue
         initproperty QName(PackageInternalNs("org.flixel"),"_group")
         findproperty QName(PackageNamespace(""),"solid")
         pushfalse
         initproperty QName(PackageNamespace(""),"solid")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(PackageNamespace(""),"members")
         getlocal0
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxPoint")
         constructprop QName(PackageNamespace("org.flixel"),"FlxPoint"), 0
         initproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getlocal0
         pushtrue
         initproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_first")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function add(param1:FlxObject, param2:Boolean = false) : FlxObject
      {
         trait method QName(PackageNamespace(""),"add")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         pushbyte 0
         ifnlt ofs0020
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         getlocal1
         setproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0020:
         getlocal2
         iffalse ofs002c
         getlocal1
         getlex QName(PackageNamespace(""),"scrollFactor")
         setproperty QName(PackageNamespace(""),"scrollFactor")
         ofs002c:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function replace(param1:FlxObject, param2:FlxObject) : FlxObject
      {
         trait method QName(PackageNamespace(""),"replace")
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_i
         setlocal3
         getlocal3
         pushbyte 0
         lessthan
         dup
         iftrue ofs0025
         pop
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         greaterequals
         ofs0025:
         iffalse ofs002b
         pushnull
         returnvalue
         ofs002b:
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal3
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function remove(param1:FlxObject, param2:Boolean = false) : FlxObject
      {
         trait method QName(PackageNamespace(""),"remove")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"indexOf"), 1
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_i
         setlocal3
         getlocal3
         pushbyte 0
         lessthan
         dup
         iftrue ofs0025
         pop
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         greaterequals
         ofs0025:
         iffalse ofs002b
         pushnull
         returnvalue
         ofs002b:
         getlocal2
         iffalse ofs003f
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal3
         pushbyte 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"splice"), 2
         jump ofs0048
         ofs003f:
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal3
         pushnull
         setproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0048:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function sort(param1:String = "y", param2:int = -1) : void
      {
         trait method QName(PackageNamespace(""),"sort")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"int")
         optional Utf8("y")
         optional Integer(-1)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortIndex")
         getlocal0
         getlocal2
         setproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortOrder")
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"sortHandler")
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"sort"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getFirstAvail() : FlxObject
      {
         trait method QName(PackageNamespace(""),"getFirstAvail")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs003f
         ofs0017:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         equals
         not
         dup
         iffalse ofs0039
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"exists")
         not
         ofs0039:
         iffalse ofs003f
         getlocal1
         returnvalue
         ofs003f:
         getlocal2
         getlocal3
         iflt ofs0017
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getFirstNull() : int
      {
         trait method QName(PackageNamespace(""),"getFirstNull")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal2
         jump ofs0027
         ofs0013:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushnull
         ifne ofs0023
         getlocal1
         returnvalue
         ofs0023:
         getlocal1
         increment
         convert_u
         setlocal1
         ofs0027:
         getlocal1
         getlocal2
         iflt ofs0013
         pushbyte -1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function resetFirstAvail(param1:Number = 0, param2:Number = 0) : Boolean
      {
         trait method QName(PackageNamespace(""),"resetFirstAvail")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         optional Integer(0)
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"getFirstAvail"), 0
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal3
         getlocal3
         pushnull
         ifne ofs0012
         pushfalse
         returnvalue
         ofs0012:
         getlocal3
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getFirstExtant() : FlxObject
      {
         trait method QName(PackageNamespace(""),"getFirstExtant")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs003f
         ofs0017:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         equals
         not
         dup
         iffalse ofs0039
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"exists")
         convert_b
         ofs0039:
         iffalse ofs003f
         getlocal1
         returnvalue
         ofs003f:
         getlocal2
         getlocal3
         iflt ofs0017
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function logMembers(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"logMembers")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal1
         pushstring ": "
         add
         getlocal0
         callproperty QName(PackageNamespace(""),"countLiving"), 0
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring " living, "
         add
         getlocal0
         callproperty QName(PackageNamespace(""),"countDead"), 0
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring " dead"
         add
         callpropvoid QName(PackageNamespace(""),"log"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getFirstAlive() : FlxObject
      {
         trait method QName(PackageNamespace(""),"getFirstAlive")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs004a
         ofs0017:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         equals
         not
         dup
         iffalse ofs0039
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"exists")
         convert_b
         ofs0039:
         dup
         iffalse ofs0044
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"dead")
         not
         ofs0044:
         iffalse ofs004a
         getlocal1
         returnvalue
         ofs004a:
         getlocal2
         getlocal3
         iflt ofs0017
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getFirstDead() : FlxObject
      {
         trait method QName(PackageNamespace(""),"getFirstDead")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs0040
         ofs0017:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         equals
         not
         dup
         iffalse ofs003a
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"dead")
         convert_b
         ofs003a:
         iffalse ofs0040
         getlocal1
         returnvalue
         ofs0040:
         getlocal2
         getlocal3
         iflt ofs0017
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function countLiving() : int
      {
         trait method QName(PackageNamespace(""),"countLiving")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte -1
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 4
         jump ofs0054
         ofs001b:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal3
         convert_d
         dup
         increment
         convert_u
         setlocal3
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         ifeq ofs0054
         getlocal2
         pushbyte 0
         ifnlt ofs003f
         pushbyte 0
         setlocal2
         ofs003f:
         getlocal1
         getproperty QName(PackageNamespace(""),"exists")
         convert_b
         dup
         iffalse ofs004e
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"dead")
         not
         ofs004e:
         iffalse ofs0054
         inclocal_i 2
         ofs0054:
         getlocal3
         getlocal 4
         iflt ofs001b
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function countDead() : int
      {
         trait method QName(PackageNamespace(""),"countDead")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte -1
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 4
         jump ofs0049
         ofs001b:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal3
         convert_d
         dup
         increment
         convert_u
         setlocal3
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         ifeq ofs0049
         getlocal2
         pushbyte 0
         ifnlt ofs003f
         pushbyte 0
         setlocal2
         ofs003f:
         getlocal1
         getproperty QName(PackageNamespace(""),"dead")
         iffalse ofs0049
         inclocal_i 2
         ofs0049:
         getlocal3
         getlocal 4
         iflt ofs001b
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function countOnScreen() : int
      {
         trait method QName(PackageNamespace(""),"countOnScreen")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte -1
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 4
         jump ofs004a
         ofs001b:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal3
         convert_d
         dup
         increment
         convert_u
         setlocal3
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         ifeq ofs004a
         getlocal2
         pushbyte 0
         ifnlt ofs003f
         pushbyte 0
         setlocal2
         ofs003f:
         getlocal1
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs004a
         inclocal_i 2
         ofs004a:
         getlocal3
         getlocal 4
         iflt ofs001b
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getRandom() : FlxObject
      {
         trait method QName(PackageNamespace(""),"getRandom")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("org.flixel"),"FlxObject")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal1
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         findpropstrict QName(PackageNamespace(""),"uint")
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         getlocal3
         multiply
         callproperty QName(PackageNamespace(""),"uint"), 1
         convert_u
         setlocal 4
         jump ofs0043
         ofs0028:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal 4
         increment
         dup
         convert_u
         setlocal 4
         getlocal3
         modulo
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal2
         getlocal1
         increment
         convert_u
         setlocal1
         ofs0043:
         getlocal2
         pushnull
         equals
         dup
         iffalse ofs0055
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         lessthan
         ofs0055:
         iftrue ofs0028
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function saveOldPosition() : void
      {
         trait method QName(ProtectedNamespace("org.flixel:FlxGroup"),"saveOldPosition")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_first")
         iffalse ofs0020
         getlocal0
         pushfalse
         setproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_first")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         ofs0020:
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getlex QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getlex QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function updateMembers() : void
      {
         trait method QName(ProtectedNamespace("org.flixel:FlxGroup"),"updateMembers")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 7
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal1
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal2
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal3
         pushfalse
         setlocal 4
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"x")
         equals
         not
         dup
         iftrue ofs002d
         pop
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"y")
         equals
         not
         ofs002d:
         iffalse ofs004a
         pushtrue
         setlocal 4
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"x")
         subtract
         convert_d
         setlocal1
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"y")
         subtract
         convert_d
         setlocal2
         ofs004a:
         pushbyte 0
         convert_u
         setlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 6
         jump ofs015e
         ofs005d:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal 5
         convert_d
         dup
         increment
         convert_u
         setlocal 5
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal3
         getlocal3
         pushnull
         equals
         not
         dup
         iffalse ofs0081
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"exists")
         convert_b
         ofs0081:
         iffalse ofs015e
         getlocal 4
         iffalse ofs00b6
         getlocal3
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs00a6
         getlocal3
         getlocal3
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         add
         getlocal3
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         add
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs00b6
         ofs00a6:
         getlocal3
         getlocal3
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal3
         getlocal3
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs00b6:
         getlocal3
         getproperty QName(PackageNamespace(""),"active")
         iffalse ofs00c2
         getlocal3
         callpropvoid QName(PackageNamespace(""),"update"), 0
         ofs00c2:
         getlocal 4
         convert_b
         dup
         iffalse ofs00d0
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"solid")
         convert_b
         ofs00d0:
         iffalse ofs015e
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullX")
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"width")
         getlocal1
         pushbyte 0
         greaterthan
         iffalse ofs00ec
         getlocal1
         coerce_a
         jump ofs00ef
         ofs00ec:
         getlocal1
         negate
         coerce_a
         ofs00ef:
         add
         setproperty QName(PackageNamespace(""),"width")
         getlocal1
         pushbyte 0
         ifnlt ofs0107
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullX")
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs0107:
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullY")
         getlex QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullY")
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"height")
         getlocal2
         pushbyte 0
         greaterthan
         iffalse ofs0127
         getlocal2
         coerce_a
         jump ofs012a
         ofs0127:
         getlocal2
         negate
         coerce_a
         ofs012a:
         add
         setproperty QName(PackageNamespace(""),"height")
         getlocal2
         pushbyte 0
         ifnlt ofs0142
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullY")
         getlocal3
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs0142:
         getlocal3
         getproperty QName(PackageNamespace(""),"colVector")
         getlocal3
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal3
         getproperty QName(PackageNamespace(""),"colVector")
         getlocal3
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"y")
         getlocal2
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs015e:
         getlocal 5
         getlocal 6
         iflt ofs005d
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxGroup"),"saveOldPosition"), 0
         findpropstrict QName(ProtectedNamespace("org.flixel:FlxObject"),"updateMotion")
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxObject"),"updateMotion"), 0
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxGroup"),"updateMembers"), 0
         findpropstrict QName(ProtectedNamespace("org.flixel:FlxObject"),"updateFlickering")
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxObject"),"updateFlickering"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function renderMembers() : void
      {
         trait method QName(ProtectedNamespace("org.flixel:FlxGroup"),"renderMembers")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs004c
         ofs0017:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         equals
         not
         dup
         iffalse ofs0039
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"exists")
         convert_b
         ofs0039:
         dup
         iffalse ofs0044
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"visible")
         convert_b
         ofs0044:
         iffalse ofs004c
         getlocal1
         callpropvoid QName(PackageNamespace(""),"render"), 0
         ofs004c:
         getlocal2
         getlocal3
         iflt ofs0017
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function render() : void
      {
         trait method QName(PackageNamespace(""),"render")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxGroup"),"renderMembers"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function killMembers() : void
      {
         trait method QName(ProtectedNamespace("org.flixel:FlxGroup"),"killMembers")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs0036
         ofs0017:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         ifeq ofs0036
         getlocal1
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs0036:
         getlocal2
         getlocal3
         iflt ofs0017
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function kill() : void
      {
         trait method QName(PackageNamespace(""),"kill")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxGroup"),"killMembers"), 0
         getlocal0
         callsupervoid QName(PackageNamespace(""),"kill"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function destroyMembers() : void
      {
         trait method QName(PackageNamespace(""),"destroyMembers")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         pushbyte 0
         convert_u
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal3
         jump ofs0035
         ofs0017:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal2
         convert_d
         dup
         increment
         convert_u
         setlocal2
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal1
         getlocal1
         pushnull
         ifeq ofs0035
         getlocal1
         callpropvoid QName(PackageNamespace(""),"destroy"), 0
         ofs0035:
         getlocal2
         getlocal3
         iflt ofs0017
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"length")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         callpropvoid QName(PackageNamespace(""),"destroyMembers"), 0
         getlocal0
         pushnull
         setproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function reset(param1:Number, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"reset")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 9
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal3
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal 4
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         setlocal 5
         getlocal0
         callpropvoid QName(ProtectedNamespace("org.flixel:FlxGroup"),"saveOldPosition"), 0
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"reset"), 2
         pushfalse
         setlocal 6
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"x")
         equals
         not
         dup
         iftrue ofs003b
         pop
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"y")
         equals
         not
         ofs003b:
         iffalse ofs0059
         pushtrue
         setlocal 6
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"x")
         subtract
         convert_d
         setlocal3
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_last")
         getproperty QName(PackageNamespace(""),"y")
         subtract
         convert_d
         setlocal 4
         ofs0059:
         pushbyte 0
         convert_u
         setlocal 7
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 8
         jump ofs0175
         ofs006c:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"members")
         getlocal 7
         convert_d
         dup
         increment
         convert_u
         setlocal 7
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("org.flixel"),"FlxObject")
         astypelate
         coerce QName(PackageNamespace("org.flixel"),"FlxObject")
         dup
         setlocal 5
         pushnull
         equals
         not
         dup
         iffalse ofs0092
         pop
         getlocal 5
         getproperty QName(PackageNamespace(""),"exists")
         convert_b
         ofs0092:
         iffalse ofs0175
         getlocal 6
         iffalse ofs0175
         getlocal 5
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs00bc
         getlocal 5
         getlocal 5
         getproperty QName(PackageNamespace(""),"x")
         getlocal3
         add
         getlocal 5
         getproperty QName(PackageNamespace(""),"y")
         getlocal 4
         add
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs0175
         ofs00bc:
         getlocal 5
         getlocal 5
         getproperty QName(PackageNamespace(""),"x")
         getlocal3
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 5
         getlocal 5
         getproperty QName(PackageNamespace(""),"y")
         getlocal 4
         add
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"solid")
         iffalse ofs0175
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullX")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"width")
         getlocal3
         pushbyte 0
         greaterthan
         iffalse ofs00f2
         getlocal3
         coerce_a
         jump ofs00f5
         ofs00f2:
         getlocal3
         negate
         coerce_a
         ofs00f5:
         add
         setproperty QName(PackageNamespace(""),"width")
         getlocal3
         pushbyte 0
         ifnlt ofs010f
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullX")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"x")
         getlocal3
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs010f:
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullY")
         getlex QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullY")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"height")
         getlocal 4
         pushbyte 0
         greaterthan
         iffalse ofs0134
         getlocal 4
         coerce_a
         jump ofs0138
         ofs0134:
         getlocal 4
         negate
         coerce_a
         ofs0138:
         add
         setproperty QName(PackageNamespace(""),"height")
         getlocal 4
         pushbyte 0
         ifnlt ofs0154
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullY")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"y")
         getlocal 4
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs0154:
         getlocal 5
         getproperty QName(PackageNamespace(""),"colVector")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         getlocal3
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colVector")
         getlocal 5
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"y")
         getlocal 4
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs0175:
         getlocal 7
         getlocal 8
         iflt ofs006c
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function sortHandler(param1:FlxObject, param2:FlxObject) : int
      {
         trait method QName(ProtectedNamespace("org.flixel:FlxGroup"),"sortHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortIndex")
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal2
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortIndex")
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ifnlt ofs001b
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortOrder")
         returnvalue
         ofs001b:
         getlocal1
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortIndex")
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal2
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortIndex")
         getproperty MultinameL([PrivateNamespace(null,"244"),PackageNamespace(""),PackageInternalNs("org.flixel"),PackageNamespace("org.flixel"),ProtectedNamespace("org.flixel:FlxGroup"),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"245"),StaticProtectedNs("org.flixel:FlxGroup"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ifngt ofs0035
         getlocal0
         getproperty QName(ProtectedNamespace("org.flixel:FlxGroup"),"_sortOrder")
         negate
         returnvalue
         ofs0035:
         pushbyte 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 6

code
getlocal0
pushscope
findpropstrict Multiname("FlxGroup",[PackageNamespace("org.flixel")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
newclass 7
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace("org.flixel"),"FlxGroup")
returnvoid
end ; code
end ; body
end ; method

