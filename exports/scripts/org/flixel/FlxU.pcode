package org.flixel
{
   import flash.net.URLRequest;
   import flash.net.navigateToURL;
   import flash.utils.getDefinitionByName;
   import flash.utils.getQualifiedClassName;
   import flash.utils.getTimer;
   
   public class FlxU
   {
      internal static var roundingError:Number = 1e-7;
      
      public static var quadTree:FlxQuadTree;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal0
      pushscope
      findproperty QName(PackageInternalNs("org.flixel"),"roundingError")
      pushdouble 1e-7
      setproperty QName(PackageInternalNs("org.flixel"),"roundingError")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public function FlxU()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function openURL(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"openURL")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.net"),"navigateToURL")
         findpropstrict QName(PackageNamespace("flash.net"),"URLRequest")
         getlocal1
         constructprop QName(PackageNamespace("flash.net"),"URLRequest"), 1
         pushstring "_blank"
         callpropvoid QName(PackageNamespace("flash.net"),"navigateToURL"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function abs(param1:Number) : Number
      {
         trait method QName(PackageNamespace(""),"abs")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushbyte 0
         ifngt ofs000f
         getlocal1
         convert_d
         jump ofs0012
         ofs000f:
         getlocal1
         negate
         convert_d
         ofs0012:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function floor(param1:Number) : Number
      {
         trait method QName(PackageNamespace(""),"floor")
         flag FINAL
         dispid 5
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_d
         setlocal2
         getlocal1
         pushbyte 0
         ifngt ofs0017
         getlocal2
         convert_d
         jump ofs0026
         ofs0017:
         getlocal2
         getlocal1
         ifeq ofs0024
         getlocal2
         decrement
         convert_d
         jump ofs0026
         ofs0024:
         getlocal2
         convert_d
         ofs0026:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function ceil(param1:Number) : Number
      {
         trait method QName(PackageNamespace(""),"ceil")
         flag FINAL
         dispid 6
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_d
         setlocal2
         getlocal1
         pushbyte 0
         ifngt ofs0026
         getlocal2
         getlocal1
         ifeq ofs0020
         getlocal2
         pushbyte 1
         add
         convert_d
         jump ofs0022
         ofs0020:
         getlocal2
         convert_d
         ofs0022:
         jump ofs0028
         ofs0026:
         getlocal2
         convert_d
         ofs0028:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function min(param1:Number, param2:Number) : Number
      {
         trait method QName(PackageNamespace(""),"min")
         flag FINAL
         dispid 7
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal2
         ifnle ofs000e
         getlocal1
         convert_d
         jump ofs0010
         ofs000e:
         getlocal2
         convert_d
         ofs0010:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function max(param1:Number, param2:Number) : Number
      {
         trait method QName(PackageNamespace(""),"max")
         flag FINAL
         dispid 8
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal2
         ifnge ofs000e
         getlocal1
         convert_d
         jump ofs0010
         ofs000e:
         getlocal2
         convert_d
         ofs0010:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function random(param1:Number = NaN) : Number
      {
         trait method QName(PackageNamespace(""),"random")
         flag FINAL
         dispid 9
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         optional Double(NaN)
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs0016
         getlex QName(PackageNamespace(""),"Math")
         callproperty QName(PackageNamespace(""),"random"), 0
         returnvalue
         ofs0016:
         getlocal1
         pushbyte 0
         ifne ofs0024
         getlex QName(PackageNamespace(""),"Number")
         getproperty QName(PackageNamespace(""),"MIN_VALUE")
         convert_d
         setlocal1
         ofs0024:
         getlocal1
         pushbyte 1
         ifnge ofs0049
         getlocal1
         pushbyte 1
         modulo
         pushbyte 0
         ifne ofs003f
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         divide
         convert_d
         setlocal1
         ofs003f:
         getlocal1
         pushbyte 1
         modulo
         convert_d
         setlocal1
         jump ofs0059
         ofs0049:
         getlocal1
         pushbyte 0
         ifnlt ofs0059
         getlocal1
         pushbyte 1
         modulo
         pushbyte 1
         add
         convert_d
         setlocal1
         ofs0059:
         pushint 69621
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         pushint 2147483647
         multiply
         callproperty QName(PackageNamespace(""),"int"), 1
         multiply
         pushint 2147483647
         modulo
         pushint 2147483647
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function startProfile() : uint
      {
         trait method QName(PackageNamespace(""),"startProfile")
         flag FINAL
         dispid 10
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"getTimer")
         callproperty QName(PackageNamespace("flash.utils"),"getTimer"), 0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function endProfile(param1:uint, param2:String = "Profiler", param3:Boolean = true) : uint
      {
         trait method QName(PackageNamespace(""),"endProfile")
         flag FINAL
         dispid 11
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Boolean")
         optional Utf8("Profiler")
         optional True()
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"getTimer")
         callproperty QName(PackageNamespace("flash.utils"),"getTimer"), 0
         convert_u
         setlocal 4
         getlocal3
         iffalse ofs002a
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal2
         pushstring ": "
         add
         getlocal 4
         getlocal1
         subtract
         pushshort 1000
         divide
         add
         pushstring "s"
         add
         callpropvoid QName(PackageNamespace(""),"log"), 1
         ofs002a:
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function rotatePoint(param1:Number, param2:Number, param3:Number, param4:Number, param5:Number, param6:FlxPoint = null) : FlxPoint
      {
         trait method QName(PackageNamespace(""),"rotatePoint")
         flag FINAL
         dispid 12
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("org.flixel"),"FlxPoint")
         optional Null()
         returns QName(PackageNamespace("org.flixel"),"FlxPoint")
         
         body
         maxstack 4
         localcount 12
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_d
         setlocal 7
         pushbyte 0
         convert_d
         setlocal 8
         getlocal 5
         pushdouble -0.017453293
         multiply
         convert_d
         setlocal 9
         jump ofs0021
         ofs0018:
         label
         getlocal 9
         pushdouble 6.28318531
         add
         convert_d
         setlocal 9
         ofs0021:
         getlocal 9
         pushdouble -3.14159265
         iflt ofs0018
         jump ofs0036
         ofs002d:
         label
         getlocal 9
         pushdouble 6.28318531
         subtract
         convert_d
         setlocal 9
         ofs0036:
         getlocal 9
         pushdouble 3.14159265
         ifgt ofs002d
         getlocal 9
         pushbyte 0
         ifnlt ofs0089
         pushdouble 1.27323954
         getlocal 9
         multiply
         pushdouble 0.405284735
         getlocal 9
         multiply
         getlocal 9
         multiply
         add
         convert_d
         dup
         setlocal 7
         pushbyte 0
         ifnlt ofs0074
         pushdouble 0.225
         getlocal 7
         getlocal 7
         negate
         multiply
         getlocal 7
         subtract
         multiply
         getlocal 7
         add
         convert_d
         setlocal 7
         jump ofs0085
         ofs0074:
         pushdouble 0.225
         getlocal 7
         getlocal 7
         multiply
         getlocal 7
         subtract
         multiply
         getlocal 7
         add
         convert_d
         setlocal 7
         ofs0085:
         jump ofs00c8
         ofs0089:
         pushdouble 1.27323954
         getlocal 9
         multiply
         pushdouble 0.405284735
         getlocal 9
         multiply
         getlocal 9
         multiply
         subtract
         convert_d
         dup
         setlocal 7
         pushbyte 0
         ifnlt ofs00b7
         pushdouble 0.225
         getlocal 7
         getlocal 7
         negate
         multiply
         getlocal 7
         subtract
         multiply
         getlocal 7
         add
         convert_d
         setlocal 7
         jump ofs00c8
         ofs00b7:
         pushdouble 0.225
         getlocal 7
         getlocal 7
         multiply
         getlocal 7
         subtract
         multiply
         getlocal 7
         add
         convert_d
         setlocal 7
         ofs00c8:
         getlocal 9
         pushdouble 1.57079632
         add
         convert_d
         dup
         setlocal 9
         pushdouble 3.14159265
         ifngt ofs00df
         getlocal 9
         pushdouble 6.28318531
         subtract
         convert_d
         setlocal 9
         ofs00df:
         getlocal 9
         pushbyte 0
         ifnlt ofs012a
         pushdouble 1.27323954
         getlocal 9
         multiply
         pushdouble 0.405284735
         getlocal 9
         multiply
         getlocal 9
         multiply
         add
         convert_d
         dup
         setlocal 8
         pushbyte 0
         ifnlt ofs0115
         pushdouble 0.225
         getlocal 8
         getlocal 8
         negate
         multiply
         getlocal 8
         subtract
         multiply
         getlocal 8
         add
         convert_d
         setlocal 8
         jump ofs0126
         ofs0115:
         pushdouble 0.225
         getlocal 8
         getlocal 8
         multiply
         getlocal 8
         subtract
         multiply
         getlocal 8
         add
         convert_d
         setlocal 8
         ofs0126:
         jump ofs0169
         ofs012a:
         pushdouble 1.27323954
         getlocal 9
         multiply
         pushdouble 0.405284735
         getlocal 9
         multiply
         getlocal 9
         multiply
         subtract
         convert_d
         dup
         setlocal 8
         pushbyte 0
         ifnlt ofs0158
         pushdouble 0.225
         getlocal 8
         getlocal 8
         negate
         multiply
         getlocal 8
         subtract
         multiply
         getlocal 8
         add
         convert_d
         setlocal 8
         jump ofs0169
         ofs0158:
         pushdouble 0.225
         getlocal 8
         getlocal 8
         multiply
         getlocal 8
         subtract
         multiply
         getlocal 8
         add
         convert_d
         setlocal 8
         ofs0169:
         getlocal1
         getlocal3
         subtract
         convert_d
         setlocal 10
         getlocal 4
         getlocal2
         subtract
         convert_d
         setlocal 11
         getlocal 6
         pushnull
         ifne ofs0186
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxPoint")
         constructprop QName(PackageNamespace("org.flixel"),"FlxPoint"), 0
         coerce QName(PackageNamespace("org.flixel"),"FlxPoint")
         setlocal 6
         ofs0186:
         getlocal 6
         getlocal3
         getlocal 8
         getlocal 10
         multiply
         add
         getlocal 7
         getlocal 11
         multiply
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 6
         getlocal 4
         getlocal 7
         getlocal 10
         multiply
         subtract
         getlocal 8
         getlocal 11
         multiply
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 6
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getAngle(param1:Number, param2:Number) : Number
      {
         trait method QName(PackageNamespace(""),"getAngle")
         flag FINAL
         dispid 13
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushdouble 3.14159265
         pushbyte 4
         divide
         convert_d
         setlocal3
         pushbyte 3
         getlocal3
         multiply
         convert_d
         setlocal 4
         getlocal2
         pushbyte 0
         ifnlt ofs001e
         getlocal2
         negate
         convert_d
         jump ofs0020
         ofs001e:
         getlocal2
         convert_d
         ofs0020:
         convert_d
         setlocal 5
         pushbyte 0
         convert_d
         setlocal 6
         getlocal1
         pushbyte 0
         ifnge ofs0043
         getlocal3
         getlocal3
         getlocal1
         getlocal 5
         subtract
         getlocal1
         getlocal 5
         add
         divide
         multiply
         subtract
         convert_d
         setlocal 6
         jump ofs0054
         ofs0043:
         getlocal 4
         getlocal3
         getlocal1
         getlocal 5
         add
         getlocal 5
         getlocal1
         subtract
         divide
         multiply
         subtract
         convert_d
         setlocal 6
         ofs0054:
         getlocal2
         pushbyte 0
         ifnlt ofs0063
         getlocal 6
         negate
         coerce_a
         jump ofs0066
         ofs0063:
         getlocal 6
         coerce_a
         ofs0066:
         pushdouble 57.2957796
         multiply
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getColor(param1:uint, param2:uint, param3:uint, param4:Number = 1) : uint
      {
         trait method QName(PackageNamespace(""),"getColor")
         flag FINAL
         dispid 14
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Number")
         optional Double(1)
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 5
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal 4
         pushbyte 1
         ifngt ofs0011
         getlocal 4
         coerce_a
         jump ofs0018
         ofs0011:
         getlocal 4
         pushshort 255
         multiply
         coerce_a
         ofs0018:
         pushshort 255
         bitand
         pushbyte 24
         lshift
         getlocal1
         pushshort 255
         bitand
         pushbyte 16
         lshift
         bitor
         getlocal2
         pushshort 255
         bitand
         pushbyte 8
         lshift
         bitor
         getlocal3
         pushshort 255
         bitand
         bitor
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getColorHSB(param1:Number, param2:Number, param3:Number, param4:Number = 1) : uint
      {
         trait method QName(PackageNamespace(""),"getColorHSB")
         flag FINAL
         dispid 15
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         optional Double(1)
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 5
         localcount 14
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 5
         pushnan
         setlocal 6
         pushnan
         setlocal 7
         pushbyte 0
         setlocal 8
         pushnan
         setlocal 9
         pushnan
         setlocal 10
         pushnan
         setlocal 11
         pushnan
         setlocal 12
         getlocal2
         pushdouble 0
         ifne ofs0032
         getlocal3
         convert_d
         setlocal 5
         getlocal3
         convert_d
         setlocal 6
         getlocal3
         convert_d
         setlocal 7
         jump ofs0181
         ofs0032:
         getlocal1
         pushshort 360
         ifne ofs003e
         pushbyte 0
         convert_d
         setlocal1
         ofs003e:
         getlocal1
         pushbyte 60
         divide
         convert_i
         setlocal 8
         getlocal1
         pushbyte 60
         divide
         getlocal 8
         subtract
         convert_d
         setlocal 9
         getlocal3
         pushbyte 1
         getlocal2
         subtract
         multiply
         convert_d
         setlocal 10
         getlocal3
         pushbyte 1
         getlocal2
         getlocal 9
         multiply
         subtract
         multiply
         convert_d
         setlocal 11
         getlocal3
         pushbyte 1
         getlocal2
         pushbyte 1
         getlocal 9
         subtract
         multiply
         subtract
         multiply
         convert_d
         setlocal 12
         jump ofs0101
         ofs0077:
         label
         getlocal3
         convert_d
         setlocal 5
         getlocal 12
         convert_d
         setlocal 6
         getlocal 10
         convert_d
         setlocal 7
         jump ofs0181
         ofs008a:
         label
         getlocal 11
         convert_d
         setlocal 5
         getlocal3
         convert_d
         setlocal 6
         getlocal 10
         convert_d
         setlocal 7
         jump ofs0181
         ofs009d:
         label
         getlocal 10
         convert_d
         setlocal 5
         getlocal3
         convert_d
         setlocal 6
         getlocal 12
         convert_d
         setlocal 7
         jump ofs0181
         ofs00b0:
         label
         getlocal 10
         convert_d
         setlocal 5
         getlocal 11
         convert_d
         setlocal 6
         getlocal3
         convert_d
         setlocal 7
         jump ofs0181
         ofs00c3:
         label
         getlocal 12
         convert_d
         setlocal 5
         getlocal 10
         convert_d
         setlocal 6
         getlocal3
         convert_d
         setlocal 7
         jump ofs0181
         ofs00d6:
         label
         getlocal3
         convert_d
         setlocal 5
         getlocal 10
         convert_d
         setlocal 6
         getlocal 11
         convert_d
         setlocal 7
         jump ofs0181
         ofs00e9:
         label
         pushbyte 0
         convert_d
         setlocal 5
         pushbyte 0
         convert_d
         setlocal 6
         pushbyte 0
         convert_d
         setlocal 7
         jump ofs0181
         jump ofs0101
         ofs0101:
         getlocal 8
         setlocal 13
         pushbyte 0
         getlocal 13
         ifstrictne ofs0113
         pushbyte 0
         jump ofs0165
         ofs0113:
         pushbyte 1
         getlocal 13
         ifstrictne ofs0121
         pushbyte 1
         jump ofs0165
         ofs0121:
         pushbyte 2
         getlocal 13
         ifstrictne ofs012f
         pushbyte 2
         jump ofs0165
         ofs012f:
         pushbyte 3
         getlocal 13
         ifstrictne ofs013d
         pushbyte 3
         jump ofs0165
         ofs013d:
         pushbyte 4
         getlocal 13
         ifstrictne ofs014b
         pushbyte 4
         jump ofs0165
         ofs014b:
         pushbyte 5
         getlocal 13
         ifstrictne ofs0159
         pushbyte 5
         jump ofs0165
         ofs0159:
         jump ofs0163
         pushbyte 6
         jump ofs0163
         ofs0163:
         pushbyte 6
         ofs0165:
         kill 13
         lookupswitch ofs00e9, [ofs0077, ofs008a, ofs009d, ofs00b0, ofs00c3, ofs00d6, ofs00e9]
         ofs0181:
         getlocal 4
         pushbyte 1
         ifngt ofs0190
         getlocal 4
         coerce_a
         jump ofs0197
         ofs0190:
         getlocal 4
         pushshort 255
         multiply
         coerce_a
         ofs0197:
         pushshort 255
         bitand
         pushbyte 24
         lshift
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal 5
         pushshort 255
         multiply
         callproperty QName(PackageNamespace(""),"uint"), 1
         pushbyte 16
         lshift
         bitor
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal 6
         pushshort 255
         multiply
         callproperty QName(PackageNamespace(""),"uint"), 1
         pushbyte 8
         lshift
         bitor
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal 7
         pushshort 255
         multiply
         callproperty QName(PackageNamespace(""),"uint"), 1
         bitor
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getRGBA(param1:uint, param2:Array = null) : Array
      {
         trait method QName(PackageNamespace(""),"getRGBA")
         flag FINAL
         dispid 16
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Array")
         optional Null()
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 5
         localcount 3
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal2
         pushnull
         ifne ofs0010
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         ofs0010:
         getlocal2
         pushbyte 0
         getlocal1
         pushbyte 16
         rshift
         pushshort 255
         bitand
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         pushbyte 1
         getlocal1
         pushbyte 8
         rshift
         pushshort 255
         bitand
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         pushbyte 2
         getlocal1
         pushshort 255
         bitand
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         pushbyte 3
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         pushbyte 24
         rshift
         pushshort 255
         bitand
         callproperty QName(PackageNamespace(""),"Number"), 1
         pushshort 255
         divide
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getHSB(param1:uint, param2:Array = null) : Array
      {
         trait method QName(PackageNamespace(""),"getHSB")
         flag FINAL
         dispid 17
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Array")
         optional Null()
         returns QName(PackageNamespace(""),"Array")
         
         body
         maxstack 5
         localcount 10
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal2
         pushnull
         ifne ofs0010
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         ofs0010:
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         pushbyte 16
         rshift
         pushshort 255
         bitand
         callproperty QName(PackageNamespace(""),"Number"), 1
         pushshort 255
         divide
         convert_d
         setlocal3
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         pushbyte 8
         rshift
         pushshort 255
         bitand
         callproperty QName(PackageNamespace(""),"Number"), 1
         pushshort 255
         divide
         convert_d
         setlocal 4
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         pushshort 255
         bitand
         callproperty QName(PackageNamespace(""),"Number"), 1
         pushshort 255
         divide
         convert_d
         setlocal 5
         getlocal3
         getlocal 4
         ifngt ofs0055
         getlocal3
         convert_d
         jump ofs0058
         ofs0055:
         getlocal 4
         convert_d
         ofs0058:
         convert_d
         dup
         setlocal 6
         getlocal 5
         ifngt ofs0069
         getlocal 6
         convert_d
         jump ofs006c
         ofs0069:
         getlocal 5
         convert_d
         ofs006c:
         convert_d
         setlocal 7
         getlocal3
         getlocal 4
         ifngt ofs007d
         getlocal 4
         convert_d
         jump ofs007f
         ofs007d:
         getlocal3
         convert_d
         ofs007f:
         convert_d
         dup
         setlocal 6
         getlocal 5
         ifngt ofs0090
         getlocal 5
         convert_d
         jump ofs0093
         ofs0090:
         getlocal 6
         convert_d
         ofs0093:
         convert_d
         setlocal 8
         getlocal 7
         getlocal 8
         subtract
         convert_d
         setlocal 9
         getlocal2
         pushbyte 2
         getlocal 7
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         pushbyte 1
         pushbyte 0
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         pushbyte 0
         dup
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal 7
         pushbyte 0
         ifeq ofs00c8
         getlocal2
         pushbyte 1
         getlocal 9
         getlocal 7
         divide
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         ofs00c8:
         getlocal2
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         pushbyte 0
         ifeq ofs014c
         getlocal3
         getlocal 7
         ifne ofs00ed
         getlocal2
         pushbyte 0
         getlocal 4
         getlocal 5
         subtract
         getlocal 9
         divide
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         jump ofs0121
         ofs00ed:
         getlocal 4
         getlocal 7
         ifne ofs0109
         getlocal2
         pushbyte 0
         pushbyte 2
         getlocal 5
         getlocal3
         subtract
         getlocal 9
         divide
         add
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         jump ofs0121
         ofs0109:
         getlocal 5
         getlocal 7
         ifne ofs0121
         getlocal2
         pushbyte 0
         pushbyte 4
         getlocal3
         getlocal 4
         subtract
         getlocal 9
         divide
         add
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         ofs0121:
         getlocal2
         pushbyte 0
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         pushbyte 60
         multiply
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         pushbyte 0
         ifnlt ofs014c
         getlocal2
         pushbyte 0
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         pushshort 360
         add
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         ofs014c:
         getlocal2
         pushbyte 3
         findpropstrict QName(PackageNamespace(""),"Number")
         getlocal1
         pushbyte 24
         rshift
         pushshort 255
         bitand
         callproperty QName(PackageNamespace(""),"Number"), 1
         pushshort 255
         divide
         setproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getlocal2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getClassName(param1:Object, param2:Boolean = false) : String
      {
         trait method QName(PackageNamespace(""),"getClassName")
         flag FINAL
         dispid 18
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Object")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"getQualifiedClassName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getQualifiedClassName"), 1
         coerce_s
         setlocal3
         getlocal3
         pushstring "::"
         pushstring "."
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"replace"), 2
         coerce_s
         setlocal3
         getlocal2
         iffalse ofs0030
         getlocal3
         getlocal3
         pushstring "."
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"lastIndexOf"), 1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"substr"), 1
         coerce_s
         setlocal3
         ofs0030:
         getlocal3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function getClass(param1:String) : Class
      {
         trait method QName(PackageNamespace(""),"getClass")
         flag FINAL
         dispid 19
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"Class")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"getDefinitionByName")
         getlocal1
         callproperty QName(PackageNamespace("flash.utils"),"getDefinitionByName"), 1
         getlex QName(PackageNamespace(""),"Class")
         astypelate
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function computeVelocity(param1:Number, param2:Number = 0, param3:Number = 0, param4:Number = 10000) : Number
      {
         trait method QName(PackageNamespace(""),"computeVelocity")
         flag FINAL
         dispid 20
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         optional Integer(0)
         optional Integer(10000)
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 3
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushnan
         setlocal 5
         getlocal2
         pushbyte 0
         ifeq ofs001c
         getlocal1
         getlocal2
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         multiply
         add
         convert_d
         setlocal1
         jump ofs005a
         ofs001c:
         getlocal3
         pushbyte 0
         ifeq ofs005a
         getlocal3
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         multiply
         convert_d
         setlocal 5
         getlocal1
         getlocal 5
         subtract
         pushbyte 0
         ifngt ofs0042
         getlocal1
         getlocal 5
         subtract
         convert_d
         setlocal1
         jump ofs005a
         ofs0042:
         getlocal1
         getlocal 5
         add
         pushbyte 0
         ifnlt ofs0056
         getlocal1
         getlocal 5
         add
         convert_d
         setlocal1
         jump ofs005a
         ofs0056:
         pushbyte 0
         convert_d
         setlocal1
         ofs005a:
         getlocal1
         pushbyte 0
         equals
         not
         dup
         iffalse ofs006c
         pop
         getlocal 4
         pushshort 10000
         equals
         not
         ofs006c:
         iffalse ofs008c
         getlocal1
         getlocal 4
         ifngt ofs007f
         getlocal 4
         convert_d
         setlocal1
         jump ofs008c
         ofs007f:
         getlocal1
         getlocal 4
         negate
         ifnlt ofs008c
         getlocal 4
         negate
         convert_d
         setlocal1
         ofs008c:
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function setWorldBounds(param1:Number = 0, param2:Number = 0, param3:Number = 0, param4:Number = 0, param5:uint = 3) : void
      {
         trait method QName(PackageNamespace(""),"setWorldBounds")
         flag FINAL
         dispid 21
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"uint")
         optional Integer(0)
         optional Integer(0)
         optional Integer(0)
         optional Integer(0)
         optional Integer(3)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         pushnull
         ifne ofs001a
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxRect")
         constructprop QName(PackageNamespace("org.flixel"),"FlxRect"), 0
         setproperty QName(PackageNamespace(""),"bounds")
         ofs001a:
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getlocal1
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getlocal2
         setproperty QName(PackageNamespace(""),"y")
         getlocal3
         pushbyte 0
         ifngt ofs003f
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getlocal3
         setproperty QName(PackageNamespace(""),"width")
         ofs003f:
         getlocal 4
         pushbyte 0
         ifngt ofs0052
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getlocal 4
         setproperty QName(PackageNamespace(""),"height")
         ofs0052:
         getlocal 5
         pushbyte 0
         ifngt ofs0062
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getlocal 5
         setproperty QName(PackageNamespace(""),"divisions")
         ofs0062:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function overlap(param1:FlxObject, param2:FlxObject, param3:Function = null) : Boolean
      {
         trait method QName(PackageNamespace(""),"overlap")
         flag FINAL
         dispid 22
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Function")
         optional Null()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         equals
         dup
         iftrue ofs0010
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"exists")
         not
         ofs0010:
         dup
         iftrue ofs0019
         pop
         getlocal2
         pushnull
         equals
         ofs0019:
         dup
         iftrue ofs0024
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"exists")
         not
         ofs0024:
         iffalse ofs002a
         pushfalse
         returnvalue
         ofs002a:
         findproperty QName(PackageNamespace(""),"quadTree")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"height")
         constructprop QName(PackageNamespace("org.flixel"),"FlxQuadTree"), 4
         setproperty QName(PackageNamespace(""),"quadTree")
         getlex QName(PackageNamespace(""),"quadTree")
         getlocal1
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"A_LIST")
         callpropvoid QName(PackageNamespace(""),"add"), 2
         getlocal1
         getlocal2
         ifstrictne ofs0079
         getlex QName(PackageNamespace(""),"quadTree")
         pushfalse
         getlocal3
         callproperty QName(PackageNamespace(""),"overlap"), 2
         returnvalue
         ofs0079:
         getlex QName(PackageNamespace(""),"quadTree")
         getlocal2
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"B_LIST")
         callpropvoid QName(PackageNamespace(""),"add"), 2
         getlex QName(PackageNamespace(""),"quadTree")
         pushtrue
         getlocal3
         callproperty QName(PackageNamespace(""),"overlap"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function collide(param1:FlxObject, param2:FlxObject) : Boolean
      {
         trait method QName(PackageNamespace(""),"collide")
         flag FINAL
         dispid 23
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         getlocal1
         pushnull
         equals
         dup
         iftrue ofs0010
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"exists")
         not
         ofs0010:
         dup
         iftrue ofs0019
         pop
         getlocal2
         pushnull
         equals
         ofs0019:
         dup
         iftrue ofs0024
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"exists")
         not
         ofs0024:
         iffalse ofs002a
         pushfalse
         returnvalue
         ofs002a:
         findproperty QName(PackageNamespace(""),"quadTree")
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"bounds")
         getproperty QName(PackageNamespace(""),"height")
         constructprop QName(PackageNamespace("org.flixel"),"FlxQuadTree"), 4
         setproperty QName(PackageNamespace(""),"quadTree")
         getlex QName(PackageNamespace(""),"quadTree")
         getlocal1
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"A_LIST")
         callpropvoid QName(PackageNamespace(""),"add"), 2
         getlocal1
         getlocal2
         strictequals
         setlocal3
         getlocal3
         iftrue ofs0080
         getlex QName(PackageNamespace(""),"quadTree")
         getlocal2
         getlex QName(PackageNamespace("org.flixel"),"FlxQuadTree")
         getproperty QName(PackageNamespace(""),"B_LIST")
         callpropvoid QName(PackageNamespace(""),"add"), 2
         ofs0080:
         getlex QName(PackageNamespace(""),"quadTree")
         getlocal3
         not
         getlex QName(PackageNamespace(""),"solveXCollision")
         callproperty QName(PackageNamespace(""),"overlap"), 2
         convert_b
         setlocal 4
         getlex QName(PackageNamespace(""),"quadTree")
         getlocal3
         not
         getlex QName(PackageNamespace(""),"solveYCollision")
         callproperty QName(PackageNamespace(""),"overlap"), 2
         convert_b
         setlocal 5
         getlocal 4
         convert_b
         dup
         iftrue ofs00aa
         pop
         getlocal 5
         convert_b
         ofs00aa:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function solveXCollision(param1:FlxObject, param2:FlxObject) : Boolean
      {
         trait method QName(PackageNamespace(""),"solveXCollision")
         flag FINAL
         dispid 24
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 32
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushfalse
         setlocal 5
         pushfalse
         setlocal 6
         pushnan
         setlocal 7
         pushfalse
         setlocal 9
         pushbyte 0
         convert_u
         setlocal 16
         pushbyte 0
         convert_u
         setlocal 17
         pushnull
         coerce QName(PackageNamespace("org.flixel"),"FlxRect")
         setlocal 18
         pushnan
         setlocal 24
         pushnan
         setlocal 25
         pushnan
         setlocal 26
         pushnan
         setlocal 27
         pushnan
         setlocal 28
         pushnan
         setlocal 29
         pushnan
         setlocal 30
         pushnan
         setlocal 31
         getlocal1
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal3
         getlocal2
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 4
         getlocal3
         getlocal 4
         ifne ofs0052
         pushfalse
         returnvalue
         ofs0052:
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"preCollide"), 1
         getlocal2
         getlocal1
         callpropvoid QName(PackageNamespace(""),"preCollide"), 1
         pushfalse
         setlocal 8
         getlocal3
         pushbyte 0
         equals
         setlocal 10
         getlocal3
         pushbyte 0
         lessthan
         setlocal 11
         getlocal3
         pushbyte 0
         greaterthan
         setlocal 12
         getlocal 4
         pushbyte 0
         equals
         setlocal 13
         getlocal 4
         pushbyte 0
         lessthan
         setlocal 14
         getlocal 4
         pushbyte 0
         greaterthan
         setlocal 15
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullX")
         coerce QName(PackageNamespace("org.flixel"),"FlxRect")
         setlocal 18
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullX")
         coerce QName(PackageNamespace("org.flixel"),"FlxRect")
         setlocal 19
         getlocal1
         getproperty QName(PackageNamespace(""),"colOffsets")
         coerce QName(PackageNamespace(""),"Array")
         setlocal 20
         getlocal2
         getproperty QName(PackageNamespace(""),"colOffsets")
         coerce QName(PackageNamespace(""),"Array")
         setlocal 21
         getlocal 20
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 22
         getlocal 21
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 23
         getlocal 10
         convert_b
         dup
         iffalse ofs00c6
         pop
         getlocal 14
         convert_b
         ofs00c6:
         dup
         iftrue ofs00d8
         pop
         getlocal 12
         convert_b
         dup
         iffalse ofs00d8
         pop
         getlocal 13
         convert_b
         ofs00d8:
         dup
         iftrue ofs00ea
         pop
         getlocal 12
         convert_b
         dup
         iffalse ofs00ea
         pop
         getlocal 14
         convert_b
         ofs00ea:
         dup
         iftrue ofs0126
         pop
         getlocal 11
         convert_b
         dup
         iffalse ofs00fc
         pop
         getlocal 14
         convert_b
         ofs00fc:
         dup
         iffalse ofs0126
         pop
         getlocal3
         pushbyte 0
         ifngt ofs010f
         getlocal3
         coerce_a
         jump ofs0112
         ofs010f:
         getlocal3
         negate
         coerce_a
         ofs0112:
         getlocal 4
         pushbyte 0
         ifngt ofs0121
         getlocal 4
         coerce_a
         jump ofs0125
         ofs0121:
         getlocal 4
         negate
         coerce_a
         ofs0125:
         lessthan
         ofs0126:
         dup
         iftrue ofs0162
         pop
         getlocal 12
         convert_b
         dup
         iffalse ofs0138
         pop
         getlocal 15
         convert_b
         ofs0138:
         dup
         iffalse ofs0162
         pop
         getlocal3
         pushbyte 0
         ifngt ofs014b
         getlocal3
         coerce_a
         jump ofs014e
         ofs014b:
         getlocal3
         negate
         coerce_a
         ofs014e:
         getlocal 4
         pushbyte 0
         ifngt ofs015d
         getlocal 4
         coerce_a
         jump ofs0161
         ofs015d:
         getlocal 4
         negate
         coerce_a
         ofs0161:
         greaterthan
         ofs0162:
         convert_b
         dup
         setlocal 9
         iffalse ofs017e
         getlocal1
         getproperty QName(PackageNamespace(""),"collideRight")
         not
         dup
         iftrue ofs017a
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"collideLeft")
         not
         ofs017a:
         jump ofs018e
         ofs017e:
         getlocal1
         getproperty QName(PackageNamespace(""),"collideLeft")
         not
         dup
         iftrue ofs018e
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"collideRight")
         not
         ofs018e:
         iffalse ofs0194
         pushfalse
         returnvalue
         ofs0194:
         pushbyte 0
         convert_u
         setlocal 16
         jump ofs0655
         ofs019d:
         label
         getlocal 20
         getlocal 16
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("x",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 24
         getlocal 20
         getlocal 16
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("y",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 25
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 24
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 25
         add
         setproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         convert_u
         setlocal 17
         jump ofs062d
         ofs01db:
         label
         getlocal 21
         getlocal 17
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("x",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 26
         getlocal 21
         getlocal 17
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("y",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 27
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         add
         setproperty QName(PackageNamespace(""),"y")
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getproperty QName(PackageNamespace(""),"width")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         lessthan
         dup
         iftrue ofs0240
         pop
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getproperty QName(PackageNamespace(""),"width")
         add
         greaterthan
         ofs0240:
         dup
         iftrue ofs025b
         pop
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 18
         getproperty QName(PackageNamespace(""),"height")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         lessthan
         ofs025b:
         dup
         iftrue ofs0276
         pop
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 19
         getproperty QName(PackageNamespace(""),"height")
         add
         greaterthan
         ofs0276:
         iffalse ofs029e
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 17
         increment
         convert_u
         setlocal 17
         jump ofs062d
         ofs029e:
         getlocal 9
         iffalse ofs02f8
         getlocal 11
         iffalse ofs02be
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"width")
         add
         convert_d
         setlocal 28
         jump ofs02cc
         ofs02be:
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getproperty QName(PackageNamespace(""),"width")
         add
         convert_d
         setlocal 28
         ofs02cc:
         getlocal 14
         iffalse ofs02de
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 29
         jump ofs02f4
         ofs02de:
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getproperty QName(PackageNamespace(""),"width")
         add
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"width")
         subtract
         convert_d
         setlocal 29
         ofs02f4:
         jump ofs034c
         ofs02f8:
         getlocal 14
         iffalse ofs0313
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         negate
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"width")
         subtract
         convert_d
         setlocal 28
         jump ofs0322
         ofs0313:
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         negate
         getlocal 19
         getproperty QName(PackageNamespace(""),"width")
         subtract
         convert_d
         setlocal 28
         ofs0322:
         getlocal 11
         iffalse ofs0335
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         negate
         convert_d
         setlocal 29
         jump ofs034c
         ofs0335:
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         negate
         getlocal 18
         getproperty QName(PackageNamespace(""),"width")
         subtract
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"width")
         add
         convert_d
         setlocal 29
         ofs034c:
         getlocal 28
         getlocal 29
         subtract
         convert_d
         setlocal 7
         getlocal1
         getproperty QName(PackageNamespace(""),"fixed")
         convert_b
         setlocal 5
         getlocal2
         getproperty QName(PackageNamespace(""),"fixed")
         convert_b
         setlocal 6
         getlocal 5
         convert_b
         dup
         iffalse ofs036e
         pop
         getlocal 6
         convert_b
         ofs036e:
         iffalse ofs03b3
         getlocal 5
         convert_b
         dup
         iffalse ofs038f
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         dup
         iffalse ofs038f
         pop
         getlocal3
         pushbyte 0
         equals
         ofs038f:
         convert_b
         setlocal 5
         getlocal 6
         convert_b
         dup
         iffalse ofs03b0
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         dup
         iffalse ofs03b0
         pop
         getlocal 4
         pushbyte 0
         equals
         ofs03b0:
         convert_b
         setlocal 6
         ofs03b3:
         getlocal 7
         pushbyte 0
         equals
         dup
         iftrue ofs03e3
         pop
         getlocal 5
         not
         dup
         iffalse ofs03e3
         pop
         getlocal 7
         pushbyte 0
         ifngt ofs03d6
         getlocal 7
         coerce_a
         jump ofs03da
         ofs03d6:
         getlocal 7
         negate
         coerce_a
         ofs03da:
         getlocal 18
         getproperty QName(PackageNamespace(""),"width")
         pushdouble 0.8
         multiply
         greaterthan
         ofs03e3:
         dup
         iftrue ofs040e
         pop
         getlocal 6
         not
         dup
         iffalse ofs040e
         pop
         getlocal 7
         pushbyte 0
         ifngt ofs0401
         getlocal 7
         coerce_a
         jump ofs0405
         ofs0401:
         getlocal 7
         negate
         coerce_a
         ofs0405:
         getlocal 19
         getproperty QName(PackageNamespace(""),"width")
         pushdouble 0.8
         multiply
         greaterthan
         ofs040e:
         iffalse ofs0436
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 17
         increment
         convert_u
         setlocal 17
         jump ofs062d
         ofs0436:
         pushtrue
         setlocal 8
         getlocal2
         getproperty QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 30
         getlocal1
         getproperty QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 31
         getlocal 5
         not
         dup
         iffalse ofs0459
         pop
         getlocal 6
         convert_b
         ofs0459:
         iffalse ofs0488
         getlocal1
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs0479
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         subtract
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs0484
         ofs0479:
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"x")
         ofs0484:
         jump ofs0539
         ofs0488:
         getlocal 5
         convert_b
         dup
         iffalse ofs0494
         pop
         getlocal 6
         not
         ofs0494:
         iffalse ofs04c3
         getlocal2
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs04b4
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         add
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs04bf
         ofs04b4:
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs04bf:
         jump ofs0539
         ofs04c3:
         getlocal 5
         not
         dup
         iffalse ofs04cf
         pop
         getlocal 6
         not
         ofs04cf:
         iffalse ofs0539
         getlocal 7
         pushbyte 2
         divide
         convert_d
         setlocal 7
         getlocal1
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs04f7
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         subtract
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs0502
         ofs04f7:
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"x")
         ofs0502:
         getlocal2
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs051e
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         add
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs0529
         ofs051e:
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs0529:
         getlocal 30
         pushdouble 0.5
         multiply
         convert_d
         setlocal 30
         getlocal 31
         pushdouble 0.5
         multiply
         convert_d
         setlocal 31
         ofs0539:
         getlocal 9
         iffalse ofs0553
         getlocal1
         getlocal2
         getlocal 30
         callpropvoid QName(PackageNamespace(""),"hitRight"), 2
         getlocal2
         getlocal1
         getlocal 31
         callpropvoid QName(PackageNamespace(""),"hitLeft"), 2
         jump ofs0563
         ofs0553:
         getlocal1
         getlocal2
         getlocal 30
         callpropvoid QName(PackageNamespace(""),"hitLeft"), 2
         getlocal2
         getlocal1
         getlocal 31
         callpropvoid QName(PackageNamespace(""),"hitRight"), 2
         ofs0563:
         getlocal 5
         not
         dup
         iffalse ofs0572
         pop
         getlocal 7
         pushbyte 0
         equals
         not
         ofs0572:
         iffalse ofs05b8
         getlocal 9
         iffalse ofs058d
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"width")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"width")
         jump ofs05a7
         ofs058d:
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"width")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"width")
         ofs05a7:
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullY")
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"x")
         ofs05b8:
         getlocal 6
         not
         dup
         iffalse ofs05c7
         pop
         getlocal 7
         pushbyte 0
         equals
         not
         ofs05c7:
         iffalse ofs060d
         getlocal 9
         iffalse ofs05ef
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"width")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"width")
         jump ofs05fc
         ofs05ef:
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"width")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"width")
         ofs05fc:
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullY")
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullY")
         getproperty QName(PackageNamespace(""),"x")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs060d:
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 17
         increment
         convert_u
         setlocal 17
         ofs062d:
         getlocal 17
         getlocal 23
         iflt ofs01db
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 24
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 25
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 16
         increment
         convert_u
         setlocal 16
         ofs0655:
         getlocal 16
         getlocal 22
         iflt ofs019d
         getlocal 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function solveYCollision(param1:FlxObject, param2:FlxObject) : Boolean
      {
         trait method QName(PackageNamespace(""),"solveYCollision")
         flag FINAL
         dispid 25
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 32
         initscopedepth 3
         maxscopedepth 4
         
         code
         getlocal0
         pushscope
         pushfalse
         setlocal 5
         pushfalse
         setlocal 6
         pushnan
         setlocal 7
         pushfalse
         setlocal 9
         pushbyte 0
         convert_u
         setlocal 16
         pushbyte 0
         convert_u
         setlocal 17
         pushnan
         setlocal 24
         pushnan
         setlocal 25
         pushnan
         setlocal 26
         pushnan
         setlocal 27
         pushnan
         setlocal 28
         pushnan
         setlocal 29
         pushnan
         setlocal 30
         pushnan
         setlocal 31
         getlocal1
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal3
         getlocal2
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 4
         getlocal3
         getlocal 4
         ifne ofs004c
         pushfalse
         returnvalue
         ofs004c:
         getlocal1
         getlocal2
         callpropvoid QName(PackageNamespace(""),"preCollide"), 1
         getlocal2
         getlocal1
         callpropvoid QName(PackageNamespace(""),"preCollide"), 1
         pushfalse
         setlocal 8
         getlocal3
         pushbyte 0
         equals
         setlocal 10
         getlocal3
         pushbyte 0
         lessthan
         setlocal 11
         getlocal3
         pushbyte 0
         greaterthan
         setlocal 12
         getlocal 4
         pushbyte 0
         equals
         setlocal 13
         getlocal 4
         pushbyte 0
         lessthan
         setlocal 14
         getlocal 4
         pushbyte 0
         greaterthan
         setlocal 15
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullY")
         coerce QName(PackageNamespace("org.flixel"),"FlxRect")
         setlocal 18
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullY")
         coerce QName(PackageNamespace("org.flixel"),"FlxRect")
         setlocal 19
         getlocal1
         getproperty QName(PackageNamespace(""),"colOffsets")
         coerce QName(PackageNamespace(""),"Array")
         setlocal 20
         getlocal2
         getproperty QName(PackageNamespace(""),"colOffsets")
         coerce QName(PackageNamespace(""),"Array")
         setlocal 21
         getlocal 20
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 22
         getlocal 21
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 23
         getlocal 10
         convert_b
         dup
         iffalse ofs00c0
         pop
         getlocal 14
         convert_b
         ofs00c0:
         dup
         iftrue ofs00d2
         pop
         getlocal 12
         convert_b
         dup
         iffalse ofs00d2
         pop
         getlocal 13
         convert_b
         ofs00d2:
         dup
         iftrue ofs00e4
         pop
         getlocal 12
         convert_b
         dup
         iffalse ofs00e4
         pop
         getlocal 14
         convert_b
         ofs00e4:
         dup
         iftrue ofs0120
         pop
         getlocal 11
         convert_b
         dup
         iffalse ofs00f6
         pop
         getlocal 14
         convert_b
         ofs00f6:
         dup
         iffalse ofs0120
         pop
         getlocal3
         pushbyte 0
         ifngt ofs0109
         getlocal3
         coerce_a
         jump ofs010c
         ofs0109:
         getlocal3
         negate
         coerce_a
         ofs010c:
         getlocal 4
         pushbyte 0
         ifngt ofs011b
         getlocal 4
         coerce_a
         jump ofs011f
         ofs011b:
         getlocal 4
         negate
         coerce_a
         ofs011f:
         lessthan
         ofs0120:
         dup
         iftrue ofs015c
         pop
         getlocal 12
         convert_b
         dup
         iffalse ofs0132
         pop
         getlocal 15
         convert_b
         ofs0132:
         dup
         iffalse ofs015c
         pop
         getlocal3
         pushbyte 0
         ifngt ofs0145
         getlocal3
         coerce_a
         jump ofs0148
         ofs0145:
         getlocal3
         negate
         coerce_a
         ofs0148:
         getlocal 4
         pushbyte 0
         ifngt ofs0157
         getlocal 4
         coerce_a
         jump ofs015b
         ofs0157:
         getlocal 4
         negate
         coerce_a
         ofs015b:
         greaterthan
         ofs015c:
         convert_b
         dup
         setlocal 9
         iffalse ofs0178
         getlocal1
         getproperty QName(PackageNamespace(""),"collideBottom")
         not
         dup
         iftrue ofs0174
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"collideTop")
         not
         ofs0174:
         jump ofs0188
         ofs0178:
         getlocal1
         getproperty QName(PackageNamespace(""),"collideTop")
         not
         dup
         iftrue ofs0188
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"collideBottom")
         not
         ofs0188:
         iffalse ofs018e
         pushfalse
         returnvalue
         ofs018e:
         pushbyte 0
         convert_u
         setlocal 16
         jump ofs06b7
         ofs0197:
         label
         getlocal 20
         getlocal 16
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("x",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 24
         getlocal 20
         getlocal 16
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("y",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 25
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 24
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 25
         add
         setproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         convert_u
         setlocal 17
         jump ofs068f
         ofs01d5:
         label
         getlocal 21
         getlocal 17
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("x",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 26
         getlocal 21
         getlocal 17
         getproperty MultinameL([PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         getproperty Multiname("y",[PrivateNamespace(null,"371"),PackageInternalNs("org.flixel"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"372"),Namespace("http://adobe.com/AS3/2006/builtin"),ProtectedNamespace("org.flixel:FlxU"),StaticProtectedNs("org.flixel:FlxU"),StaticProtectedNs("Object")])
         convert_d
         setlocal 27
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         add
         setproperty QName(PackageNamespace(""),"y")
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getproperty QName(PackageNamespace(""),"width")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         lessthan
         dup
         iftrue ofs023a
         pop
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getproperty QName(PackageNamespace(""),"width")
         add
         greaterthan
         ofs023a:
         dup
         iftrue ofs0255
         pop
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 18
         getproperty QName(PackageNamespace(""),"height")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         lessthan
         ofs0255:
         dup
         iftrue ofs0270
         pop
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageInternalNs("org.flixel"),"roundingError")
         add
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 19
         getproperty QName(PackageNamespace(""),"height")
         add
         greaterthan
         ofs0270:
         iffalse ofs0298
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 17
         increment
         convert_u
         setlocal 17
         jump ofs068f
         ofs0298:
         getlocal 9
         iffalse ofs02f2
         getlocal 11
         iffalse ofs02b8
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"height")
         add
         convert_d
         setlocal 28
         jump ofs02c6
         ofs02b8:
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 18
         getproperty QName(PackageNamespace(""),"height")
         add
         convert_d
         setlocal 28
         ofs02c6:
         getlocal 14
         iffalse ofs02d8
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 29
         jump ofs02ee
         ofs02d8:
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 19
         getproperty QName(PackageNamespace(""),"height")
         add
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"height")
         subtract
         convert_d
         setlocal 29
         ofs02ee:
         jump ofs0346
         ofs02f2:
         getlocal 14
         iffalse ofs030d
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         negate
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"height")
         subtract
         convert_d
         setlocal 28
         jump ofs031c
         ofs030d:
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         negate
         getlocal 19
         getproperty QName(PackageNamespace(""),"height")
         subtract
         convert_d
         setlocal 28
         ofs031c:
         getlocal 11
         iffalse ofs032f
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         negate
         convert_d
         setlocal 29
         jump ofs0346
         ofs032f:
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         negate
         getlocal 18
         getproperty QName(PackageNamespace(""),"height")
         subtract
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"height")
         add
         convert_d
         setlocal 29
         ofs0346:
         getlocal 28
         getlocal 29
         subtract
         convert_d
         setlocal 7
         getlocal1
         getproperty QName(PackageNamespace(""),"fixed")
         convert_b
         setlocal 5
         getlocal2
         getproperty QName(PackageNamespace(""),"fixed")
         convert_b
         setlocal 6
         getlocal 5
         convert_b
         dup
         iffalse ofs0368
         pop
         getlocal 6
         convert_b
         ofs0368:
         iffalse ofs03ad
         getlocal 5
         convert_b
         dup
         iffalse ofs0389
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         dup
         iffalse ofs0389
         pop
         getlocal3
         pushbyte 0
         equals
         ofs0389:
         convert_b
         setlocal 5
         getlocal 6
         convert_b
         dup
         iffalse ofs03aa
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         dup
         iffalse ofs03aa
         pop
         getlocal 4
         pushbyte 0
         equals
         ofs03aa:
         convert_b
         setlocal 6
         ofs03ad:
         getlocal 7
         pushbyte 0
         equals
         dup
         iftrue ofs03dd
         pop
         getlocal 5
         not
         dup
         iffalse ofs03dd
         pop
         getlocal 7
         pushbyte 0
         ifngt ofs03d0
         getlocal 7
         coerce_a
         jump ofs03d4
         ofs03d0:
         getlocal 7
         negate
         coerce_a
         ofs03d4:
         getlocal 18
         getproperty QName(PackageNamespace(""),"height")
         pushdouble 0.8
         multiply
         greaterthan
         ofs03dd:
         dup
         iftrue ofs0408
         pop
         getlocal 6
         not
         dup
         iffalse ofs0408
         pop
         getlocal 7
         pushbyte 0
         ifngt ofs03fb
         getlocal 7
         coerce_a
         jump ofs03ff
         ofs03fb:
         getlocal 7
         negate
         coerce_a
         ofs03ff:
         getlocal 19
         getproperty QName(PackageNamespace(""),"height")
         pushdouble 0.8
         multiply
         greaterthan
         ofs0408:
         iffalse ofs0430
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 17
         increment
         convert_u
         setlocal 17
         jump ofs068f
         ofs0430:
         pushtrue
         setlocal 8
         getlocal2
         getproperty QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 30
         getlocal1
         getproperty QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         convert_d
         setlocal 31
         getlocal 5
         not
         dup
         iffalse ofs0453
         pop
         getlocal 6
         convert_b
         ofs0453:
         iffalse ofs0482
         getlocal1
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs0473
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         subtract
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs047e
         ofs0473:
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"y")
         ofs047e:
         jump ofs0533
         ofs0482:
         getlocal 5
         convert_b
         dup
         iffalse ofs048e
         pop
         getlocal 6
         not
         ofs048e:
         iffalse ofs04bd
         getlocal2
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs04ae
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         add
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs04b9
         ofs04ae:
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs04b9:
         jump ofs0533
         ofs04bd:
         getlocal 5
         not
         dup
         iffalse ofs04c9
         pop
         getlocal 6
         not
         ofs04c9:
         iffalse ofs0533
         getlocal 7
         pushbyte 2
         divide
         convert_d
         setlocal 7
         getlocal1
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs04f1
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         subtract
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs04fc
         ofs04f1:
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"y")
         ofs04fc:
         getlocal2
         getproperty QName(PackageInternalNs("org.flixel"),"_group")
         iffalse ofs0518
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         add
         callpropvoid QName(PackageNamespace(""),"reset"), 2
         jump ofs0523
         ofs0518:
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"y")
         ofs0523:
         getlocal 30
         pushdouble 0.5
         multiply
         convert_d
         setlocal 30
         getlocal 31
         pushdouble 0.5
         multiply
         convert_d
         setlocal 31
         ofs0533:
         getlocal 9
         iffalse ofs054d
         getlocal1
         getlocal2
         getlocal 30
         callpropvoid QName(PackageNamespace(""),"hitBottom"), 2
         getlocal2
         getlocal1
         getlocal 31
         callpropvoid QName(PackageNamespace(""),"hitTop"), 2
         jump ofs055d
         ofs054d:
         getlocal1
         getlocal2
         getlocal 30
         callpropvoid QName(PackageNamespace(""),"hitTop"), 2
         getlocal2
         getlocal1
         getlocal 31
         callpropvoid QName(PackageNamespace(""),"hitBottom"), 2
         ofs055d:
         getlocal 5
         not
         dup
         iffalse ofs056c
         pop
         getlocal 7
         pushbyte 0
         equals
         not
         ofs056c:
         iffalse ofs05e6
         getlocal 9
         iffalse ofs05cc
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 6
         convert_b
         dup
         iffalse ofs0591
         pop
         getlocal2
         getproperty QName(PackageNamespace(""),"moves")
         convert_b
         ofs0591:
         iffalse ofs05c8
         getlocal2
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 30
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlocal 30
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 30
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullX")
         getlocal1
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"x")
         getlocal 30
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs05c8:
         jump ofs05e6
         ofs05cc:
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"height")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"height")
         ofs05e6:
         getlocal 6
         not
         dup
         iffalse ofs05f5
         pop
         getlocal 7
         pushbyte 0
         equals
         not
         ofs05f5:
         iffalse ofs066f
         getlocal 9
         iffalse ofs061d
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"y")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"height")
         getlocal 7
         subtract
         setproperty QName(PackageNamespace(""),"height")
         jump ofs066f
         ofs061d:
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"height")
         getlocal 7
         add
         setproperty QName(PackageNamespace(""),"height")
         getlocal 5
         convert_b
         dup
         iffalse ofs0638
         pop
         getlocal1
         getproperty QName(PackageNamespace(""),"moves")
         convert_b
         ofs0638:
         iffalse ofs066f
         getlocal1
         getproperty QName(PackageNamespace(""),"colVector")
         getproperty QName(PackageNamespace(""),"x")
         convert_d
         setlocal 31
         getlocal2
         getlocal2
         getproperty QName(PackageNamespace(""),"x")
         getlocal 31
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 31
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullX")
         getlocal2
         getproperty QName(PackageNamespace(""),"colHullX")
         getproperty QName(PackageNamespace(""),"x")
         getlocal 31
         add
         setproperty QName(PackageNamespace(""),"x")
         ofs066f:
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"x")
         getlocal 26
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 19
         getlocal 19
         getproperty QName(PackageNamespace(""),"y")
         getlocal 27
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 17
         increment
         convert_u
         setlocal 17
         ofs068f:
         getlocal 17
         getlocal 23
         iflt ofs01d5
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"x")
         getlocal 24
         subtract
         setproperty QName(PackageNamespace(""),"x")
         getlocal 18
         getlocal 18
         getproperty QName(PackageNamespace(""),"y")
         getlocal 25
         subtract
         setproperty QName(PackageNamespace(""),"y")
         getlocal 16
         increment
         convert_u
         setlocal 16
         ofs06b7:
         getlocal 16
         getlocal 22
         iflt ofs0197
         getlocal 8
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 3

code
getlocal0
pushscope
findpropstrict Multiname("FlxU",[PackageNamespace("org.flixel")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace(""),"Object")
newclass 73
popscope
initproperty QName(PackageNamespace("org.flixel"),"FlxU")
returnvoid
end ; code
end ; body
end ; method

