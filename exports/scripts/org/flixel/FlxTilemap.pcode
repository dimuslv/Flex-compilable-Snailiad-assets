package org.flixel
{
   import flash.display.BitmapData;
   import flash.geom.Matrix;
   import flash.geom.Rectangle;
   import flash.utils.getTimer;
   import mx.utils.*;
   
   public class FlxTilemap extends FlxObject
   {
      public static var ImgAuto:Class;
      
      public static var ImgAutoAlt:Class;
      
      public static const OFF:uint = 0;
      
      public static const AUTO:uint = 1;
      
      public static const ALT:uint = 2;
      
      public static const TILE_ACCESS_BEHAVIOR_NORMAL:int = 0;
      
      public static const TILE_ACCESS_BEHAVIOR_WRAP:int = 1;
      
      public static const TILE_ACCESS_BEHAVIOR_ZEROES_AFTER_EDGE:int = 2;
      
      public static const TILE_ACCESS_BEHAVIOR_REPEATING_EDGE:int = 3;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 6
      maxscopedepth 7
      
      code
      getlocal0
      pushscope
      findproperty QName(PackageNamespace(""),"ImgAuto")
      getlex QName(PackageNamespace("org.flixel"),"FlxTilemap_ImgAuto")
      setproperty QName(PackageNamespace(""),"ImgAuto")
      findproperty QName(PackageNamespace(""),"ImgAutoAlt")
      getlex QName(PackageNamespace("org.flixel"),"FlxTilemap_ImgAutoAlt")
      setproperty QName(PackageNamespace(""),"ImgAutoAlt")
      findproperty QName(PackageNamespace(""),"OFF")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"OFF")
      findproperty QName(PackageNamespace(""),"AUTO")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"AUTO")
      findproperty QName(PackageNamespace(""),"ALT")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"ALT")
      findproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_NORMAL")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_NORMAL")
      findproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_WRAP")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_WRAP")
      findproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_ZEROES_AFTER_EDGE")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_ZEROES_AFTER_EDGE")
      findproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_REPEATING_EDGE")
      pushbyte 3
      initproperty QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_REPEATING_EDGE")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public var getTile:Function;
      
      public var setTile:Function;
      
      private var _tileAccessBehavior:int = 0;
      
      public var collideIndex:uint;
      
      public var startingIndex:uint;
      
      public var drawIndex:uint;
      
      public var auto:uint;
      
      public var refresh:Boolean;
      
      public var widthInTiles:uint;
      
      public var heightInTiles:uint;
      
      public var totalTiles:uint;
      
      public var _flashRect:Rectangle;
      
      public var _flashRect2:Rectangle;
      
      public var _pixels:BitmapData;
      
      public var _bbPixels:BitmapData;
      
      public var _buffer:BitmapData;
      
      public var _bufferLoc:FlxPoint;
      
      public var _bbKey:String;
      
      public var _data:Array;
      
      public var _rects:Array;
      
      public var _tileWidth:uint;
      
      public var _tileHeight:uint;
      
      public var _block:FlxObject;
      
      public var _callbacks:Array;
      
      public var _screenRows:uint;
      
      public var _screenCols:uint;
      
      public var _boundsVisible:Boolean;
      
      public var _wrapCenterOffsetX:uint;
      
      public var _wrapCenterOffsetY:uint;
      
      public function FlxTilemap()
      {
         method
         name null
         returns null
         
         body
         maxstack 4
         localcount 2
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"getTileNoWrap")
         initproperty QName(PackageNamespace(""),"getTile")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"setTileNoWrap")
         initproperty QName(PackageNamespace(""),"setTile")
         getlocal0
         constructsuper 0
         getlocal0
         getlex QName(PackageNamespace(""),"OFF")
         initproperty QName(PackageNamespace(""),"auto")
         getlocal0
         pushbyte 1
         initproperty QName(PackageNamespace(""),"collideIndex")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"startingIndex")
         getlocal0
         pushbyte 1
         initproperty QName(PackageNamespace(""),"drawIndex")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"widthInTiles")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"heightInTiles")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"totalTiles")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_buffer")
         getlocal0
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxPoint")
         constructprop QName(PackageNamespace("org.flixel"),"FlxPoint"), 0
         initproperty QName(PackageNamespace(""),"_bufferLoc")
         getlocal0
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 0
         initproperty QName(PackageNamespace(""),"_flashRect2")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect2")
         initproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_data")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"_tileWidth")
         getlocal0
         pushbyte 0
         initproperty QName(PackageNamespace(""),"_tileHeight")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_rects")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_pixels")
         getlocal0
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxObject")
         constructprop QName(PackageNamespace("org.flixel"),"FlxObject"), 0
         initproperty QName(PackageNamespace(""),"_block")
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         pushbyte 0
         dup
         setlocal1
         setproperty QName(PackageNamespace(""),"height")
         getlocal1
         kill 1
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         pushtrue
         setproperty QName(PackageNamespace(""),"fixed")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(PackageNamespace(""),"_callbacks")
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"fixed")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public static function arrayToCSV(param1:Array, param2:int) : String
      {
         trait method QName(PackageNamespace(""),"arrayToCSV")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace(""),"Array")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 5
         localcount 7
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal 4
         pushnull
         coerce_s
         setlocal 5
         pushbyte 0
         convert_u
         setlocal3
         getlocal1
         getproperty QName(PackageNamespace(""),"length")
         getlocal2
         divide
         convert_i
         setlocal 6
         jump ofs0080
         ofs001c:
         label
         pushbyte 0
         convert_u
         setlocal 4
         jump ofs0075
         ofs0026:
         label
         getlocal 4
         pushbyte 0
         ifne ofs005b
         getlocal3
         pushbyte 0
         ifne ofs0046
         getlocal 5
         getlocal1
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         add
         coerce_s
         setlocal 5
         jump ofs0057
         ofs0046:
         getlocal 5
         pushstring "\n"
         getlocal1
         getlocal3
         getlocal2
         multiply
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         add
         add
         coerce_s
         setlocal 5
         ofs0057:
         jump ofs006f
         ofs005b:
         getlocal 5
         pushstring ", "
         getlocal1
         getlocal3
         getlocal2
         multiply
         getlocal 4
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         add
         add
         coerce_s
         setlocal 5
         ofs006f:
         getlocal 4
         increment
         convert_u
         setlocal 4
         ofs0075:
         getlocal 4
         getlocal2
         iflt ofs0026
         getlocal3
         increment
         convert_u
         setlocal3
         ofs0080:
         getlocal3
         getlocal 6
         iflt ofs001c
         getlocal 5
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function bitmapToCSV(param1:BitmapData, param2:Boolean = false, param3:uint = 1) : String
      {
         trait method QName(PackageNamespace(""),"bitmapToCSV")
         flag FINAL
         dispid 4
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace("flash.display"),"BitmapData")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"uint")
         optional False()
         optional Integer(1)
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 12
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal 5
         pushbyte 0
         convert_u
         setlocal 6
         pushnull
         coerce_s
         setlocal 7
         pushnull
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal 10
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         setlocal 11
         getlocal3
         pushbyte 1
         ifngt ofs0053
         getlocal1
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal 10
         findpropstrict QName(PackageNamespace("flash.display"),"BitmapData")
         getlocal1
         getproperty QName(PackageNamespace(""),"width")
         getlocal3
         multiply
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         getlocal3
         multiply
         constructprop QName(PackageNamespace("flash.display"),"BitmapData"), 2
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal1
         findpropstrict QName(PackageNamespace("flash.geom"),"Matrix")
         constructprop QName(PackageNamespace("flash.geom"),"Matrix"), 0
         coerce QName(PackageNamespace("flash.geom"),"Matrix")
         dup
         setlocal 11
         getlocal3
         getlocal3
         callpropvoid QName(PackageNamespace(""),"scale"), 2
         getlocal1
         getlocal 10
         getlocal 11
         callpropvoid QName(PackageNamespace(""),"draw"), 2
         ofs0053:
         pushbyte 0
         convert_u
         setlocal 4
         getlocal1
         getproperty QName(PackageNamespace(""),"width")
         convert_u
         setlocal 8
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         convert_u
         setlocal 9
         jump ofs00ff
         ofs006a:
         label
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs00f1
         ofs0074:
         label
         getlocal1
         getlocal 5
         getlocal 4
         callproperty QName(PackageNamespace(""),"getPixel"), 2
         convert_u
         setlocal 6
         getlocal2
         convert_b
         dup
         iffalse ofs008e
         pop
         getlocal 6
         pushbyte 0
         greaterthan
         ofs008e:
         dup
         iftrue ofs00a1
         pop
         getlocal2
         not
         dup
         iffalse ofs00a1
         pop
         getlocal 6
         pushbyte 0
         equals
         ofs00a1:
         iffalse ofs00ae
         pushbyte 1
         convert_u
         setlocal 6
         jump ofs00b3
         ofs00ae:
         pushbyte 0
         convert_u
         setlocal 6
         ofs00b3:
         getlocal 5
         pushbyte 0
         ifne ofs00df
         getlocal 4
         pushbyte 0
         ifne ofs00cf
         getlocal 7
         getlocal 6
         add
         coerce_s
         setlocal 7
         jump ofs00db
         ofs00cf:
         getlocal 7
         pushstring "\n"
         getlocal 6
         add
         add
         coerce_s
         setlocal 7
         ofs00db:
         jump ofs00eb
         ofs00df:
         getlocal 7
         pushstring ", "
         getlocal 6
         add
         add
         coerce_s
         setlocal 7
         ofs00eb:
         getlocal 5
         increment
         convert_u
         setlocal 5
         ofs00f1:
         getlocal 5
         getlocal 8
         iflt ofs0074
         getlocal 4
         increment
         convert_u
         setlocal 4
         ofs00ff:
         getlocal 4
         getlocal 9
         iflt ofs006a
         getlocal 7
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public static function imageToCSV(param1:Class, param2:Boolean = false, param3:uint = 1) : String
      {
         trait method QName(PackageNamespace(""),"imageToCSV")
         flag FINAL
         dispid 5
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Class")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"uint")
         optional False()
         optional Integer(1)
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"bitmapToCSV")
         getlocal1
         construct 0
         getproperty Multiname("bitmapData",[PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal2
         getlocal3
         callproperty QName(PackageNamespace(""),"bitmapToCSV"), 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function loadMap(param1:String, param2:Class, param3:uint = 0, param4:uint = 0, param5:String = "") : FlxTilemap
      {
         trait method QName(PackageNamespace(""),"loadMap")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"Class")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         optional Integer(0)
         optional Integer(0)
         optional Utf8("")
         returns QName(PackageNamespace("org.flixel"),"FlxTilemap")
         
         body
         maxstack 6
         localcount 15
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 7
         pushbyte 0
         convert_u
         setlocal 10
         pushbyte 0
         convert_u
         setlocal 11
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"refresh")
         findpropstrict QName(PackageNamespace("flash.utils"),"getTimer")
         callproperty QName(PackageNamespace("flash.utils"),"getTimer"), 0
         convert_i
         setlocal 6
         getlocal1
         pushstring "\n"
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"split"), 1
         coerce QName(PackageNamespace(""),"Array")
         setlocal 8
         getlocal0
         getlocal 8
         getproperty QName(PackageNamespace(""),"length")
         initproperty QName(PackageNamespace(""),"heightInTiles")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(PackageNamespace(""),"_data")
         pushbyte 0
         convert_u
         setlocal 9
         jump ofs00b8
         ofs0047:
         label
         getlocal 8
         getlocal 9
         convert_d
         dup
         increment
         convert_u
         setlocal 9
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushstring ","
         callproperty Multiname("split",[PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         coerce QName(PackageNamespace(""),"Array")
         dup
         setlocal 7
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 1
         ifnle ofs0077
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         decrement
         initproperty QName(PackageNamespace(""),"heightInTiles")
         jump ofs00b8
         ofs0077:
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         pushbyte 0
         ifne ofs008a
         getlocal0
         getlocal 7
         getproperty QName(PackageNamespace(""),"length")
         initproperty QName(PackageNamespace(""),"widthInTiles")
         ofs008a:
         pushbyte 0
         convert_u
         setlocal 10
         jump ofs00ae
         ofs0093:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal 7
         getlocal 10
         convert_d
         dup
         increment
         convert_u
         setlocal 10
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"uint"), 1
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs00ae:
         getlocal 10
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         iflt ofs0093
         ofs00b8:
         getlocal 9
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         iflt ofs0047
         getlocal0
         getlex QName(PackageNamespace(""),"uint")
         getproperty QName(PackageNamespace(""),"MAX_VALUE")
         pushbyte 2
         divide
         getlex QName(PackageNamespace(""),"uint")
         getproperty QName(PackageNamespace(""),"MAX_VALUE")
         pushbyte 2
         divide
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         subtract
         initproperty QName(PackageNamespace(""),"_wrapCenterOffsetX")
         getlocal0
         getlex QName(PackageNamespace(""),"uint")
         getproperty QName(PackageNamespace(""),"MAX_VALUE")
         pushbyte 2
         divide
         getlex QName(PackageNamespace(""),"uint")
         getproperty QName(PackageNamespace(""),"MAX_VALUE")
         pushbyte 2
         divide
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         modulo
         subtract
         initproperty QName(PackageNamespace(""),"_wrapCenterOffsetY")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         multiply
         initproperty QName(PackageNamespace(""),"totalTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"auto")
         getlex QName(PackageNamespace(""),"OFF")
         ifngt ofs014b
         getlocal0
         getlocal0
         getlocal0
         pushbyte 1
         dup
         setlocal 14
         initproperty QName(PackageNamespace(""),"drawIndex")
         getlocal 14
         kill 14
         dup
         setlocal 14
         initproperty QName(PackageNamespace(""),"startingIndex")
         getlocal 14
         kill 14
         initproperty QName(PackageNamespace(""),"collideIndex")
         pushbyte 0
         convert_u
         setlocal 11
         jump ofs0141
         ofs0133:
         label
         getlocal0
         getlocal 11
         convert_d
         dup
         increment
         convert_u
         setlocal 11
         callpropvoid QName(PackageNamespace(""),"autoTile"), 1
         ofs0141:
         getlocal 11
         getlocal0
         getproperty QName(PackageNamespace(""),"totalTiles")
         iflt ofs0133
         ofs014b:
         getlocal0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal2
         callproperty QName(PackageNamespace(""),"addBitmap"), 1
         initproperty QName(PackageNamespace(""),"_pixels")
         getlocal0
         getlocal3
         initproperty QName(PackageNamespace(""),"_tileWidth")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         pushbyte 0
         ifne ofs0171
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"height")
         initproperty QName(PackageNamespace(""),"_tileWidth")
         ofs0171:
         getlocal0
         getlocal 4
         initproperty QName(PackageNamespace(""),"_tileHeight")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         pushbyte 0
         ifne ofs0189
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         initproperty QName(PackageNamespace(""),"_tileHeight")
         ofs0189:
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         setproperty QName(PackageNamespace(""),"height")
         findproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"Array")
         getlocal0
         getproperty QName(PackageNamespace(""),"totalTiles")
         constructprop QName(PackageNamespace(""),"Array"), 1
         initproperty QName(PackageNamespace(""),"_rects")
         pushbyte 0
         convert_u
         setlocal 11
         jump ofs01e1
         ofs01d3:
         label
         getlocal0
         getlocal 11
         convert_d
         dup
         increment
         convert_u
         setlocal 11
         callpropvoid QName(PackageNamespace(""),"updateTile"), 1
         ofs01e1:
         getlocal 11
         getlocal0
         getproperty QName(PackageNamespace(""),"totalTiles")
         iflt ofs01d3
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         pushbyte 1
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         convert_u
         setlocal 12
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         pushbyte 1
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         convert_u
         setlocal 13
         getlocal0
         findpropstrict QName(PackageNamespace("flash.display"),"BitmapData")
         getlocal 12
         getlocal 13
         pushtrue
         pushbyte 0
         constructprop QName(PackageNamespace("flash.display"),"BitmapData"), 4
         initproperty QName(PackageNamespace(""),"_buffer")
         getlocal0
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         pushbyte 1
         add
         initproperty QName(PackageNamespace(""),"_screenRows")
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenRows")
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         ifngt ofs0262
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         initproperty QName(PackageNamespace(""),"_screenRows")
         ofs0262:
         getlocal0
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         pushbyte 1
         add
         initproperty QName(PackageNamespace(""),"_screenCols")
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenCols")
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         ifngt ofs028f
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         initproperty QName(PackageNamespace(""),"_screenCols")
         ofs028f:
         getlocal0
         findpropstrict QName(PackageNamespace(""),"String")
         getlocal2
         callproperty QName(PackageNamespace(""),"String"), 1
         initproperty QName(PackageNamespace(""),"_bbKey")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"generateBoundingTiles"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"refreshHulls"), 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getproperty QName(PackageNamespace(""),"width")
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getproperty QName(PackageNamespace(""),"height")
         setproperty QName(PackageNamespace(""),"height")
         getlocal0
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function generateBoundingTiles() : void
      {
         trait method QName(PackageNamespace(""),"generateBoundingTiles")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 11
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushfalse
         setlocal 4
         pushnull
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal 5
         pushnull
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal 6
         pushbyte 0
         convert_u
         setlocal 7
         pushbyte 0
         convert_u
         setlocal 8
         pushbyte 0
         convert_u
         setlocal 9
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"refresh")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbKey")
         pushnull
         equals
         dup
         iftrue ofs0039
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbKey")
         getproperty QName(PackageNamespace(""),"length")
         pushbyte 0
         lessequals
         ofs0039:
         iffalse ofs003e
         returnvoid
         ofs003e:
         findpropstrict QName(PackageNamespace(""),"getBoundingColor")
         callproperty QName(PackageNamespace(""),"getBoundingColor"), 0
         convert_u
         setlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbKey")
         pushstring ":BBTILES"
         add
         getlocal1
         add
         coerce_s
         setlocal2
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal2
         callproperty QName(PackageNamespace(""),"checkBitmapCache"), 1
         convert_b
         setlocal3
         getlocal0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"height")
         pushbyte 0
         pushtrue
         getlocal2
         callproperty QName(PackageNamespace(""),"createBitmap"), 5
         initproperty QName(PackageNamespace(""),"_bbPixels")
         getlocal3
         iftrue ofs032c
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"width")
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"height")
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbPixels")
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         callpropvoid QName(PackageNamespace(""),"copyPixels"), 3
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         convert_b
         setlocal 4
         findproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         pushfalse
         initproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         findpropstrict QName(PackageNamespace(""),"getBoundingColor")
         callproperty QName(PackageNamespace(""),"getBoundingColor"), 0
         convert_u
         setlocal1
         pushstring "BBTILESTAMP"
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         add
         pushstring "X"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         add
         getlocal1
         add
         coerce_s
         setlocal2
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal2
         callproperty QName(PackageNamespace(""),"checkBitmapCache"), 1
         convert_b
         setlocal3
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         pushbyte 0
         pushtrue
         getlocal2
         callproperty QName(PackageNamespace(""),"createBitmap"), 5
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal 5
         getlocal3
         iftrue ofs01a2
         getlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal1
         callpropvoid QName(PackageNamespace(""),"fillRect"), 2
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 1
         dup
         setlocal 10
         setproperty QName(PackageNamespace(""),"y")
         getlocal 10
         kill 10
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getproperty QName(PackageNamespace(""),"width")
         pushbyte 2
         subtract
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getproperty QName(PackageNamespace(""),"height")
         pushbyte 2
         subtract
         setproperty QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"fillRect"), 2
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         dup
         setlocal 10
         setproperty QName(PackageNamespace(""),"y")
         getlocal 10
         kill 10
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         setproperty QName(PackageNamespace(""),"height")
         ofs01a2:
         findproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         getlocal 4
         initproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         findpropstrict QName(PackageNamespace(""),"getBoundingColor")
         callproperty QName(PackageNamespace(""),"getBoundingColor"), 0
         convert_u
         setlocal1
         pushstring "BBTILESTAMP"
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         add
         pushstring "X"
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         add
         getlocal1
         add
         coerce_s
         setlocal2
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal2
         callproperty QName(PackageNamespace(""),"checkBitmapCache"), 1
         convert_b
         setlocal3
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         pushbyte 0
         pushtrue
         getlocal2
         callproperty QName(PackageNamespace(""),"createBitmap"), 5
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal 6
         getlocal3
         iftrue ofs026b
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal1
         callpropvoid QName(PackageNamespace(""),"fillRect"), 2
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 1
         dup
         setlocal 10
         setproperty QName(PackageNamespace(""),"y")
         getlocal 10
         kill 10
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getproperty QName(PackageNamespace(""),"width")
         pushbyte 2
         subtract
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getproperty QName(PackageNamespace(""),"height")
         pushbyte 2
         subtract
         setproperty QName(PackageNamespace(""),"height")
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"fillRect"), 2
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         dup
         setlocal 10
         setproperty QName(PackageNamespace(""),"y")
         getlocal 10
         kill 10
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         setproperty QName(PackageNamespace(""),"height")
         ofs026b:
         pushbyte 0
         convert_u
         setlocal 7
         pushbyte 0
         convert_u
         setlocal 9
         jump ofs02f1
         ofs0279:
         label
         pushbyte 0
         convert_u
         setlocal 8
         jump ofs02da
         ofs0283:
         label
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlocal 8
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlocal 7
         setproperty QName(PackageNamespace(""),"y")
         getlocal 9
         convert_d
         dup
         increment
         convert_u
         setlocal 9
         getlocal0
         getproperty QName(PackageNamespace(""),"collideIndex")
         ifnlt ofs02bc
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbPixels")
         getlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushnull
         pushnull
         pushtrue
         callpropvoid QName(PackageNamespace(""),"copyPixels"), 6
         jump ofs02d0
         ofs02bc:
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbPixels")
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushnull
         pushnull
         pushtrue
         callpropvoid QName(PackageNamespace(""),"copyPixels"), 6
         ofs02d0:
         getlocal 8
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         add
         convert_u
         setlocal 8
         ofs02da:
         getlocal 8
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbPixels")
         getproperty QName(PackageNamespace(""),"width")
         iflt ofs0283
         getlocal 7
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         add
         convert_u
         setlocal 7
         ofs02f1:
         getlocal 7
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbPixels")
         getproperty QName(PackageNamespace(""),"height")
         iflt ofs0279
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getproperty QName(PackageNamespace(""),"width")
         setproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getproperty QName(PackageNamespace(""),"height")
         setproperty QName(PackageNamespace(""),"height")
         ofs032c:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function renderTilemap() : void
      {
         trait method QName(PackageNamespace(""),"renderTilemap")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 8
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal1
         pushbyte 0
         convert_u
         setlocal 6
         pushbyte 0
         convert_u
         setlocal 7
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"fillRect"), 2
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"showBounds")
         iffalse ofs0038
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbPixels")
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal1
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"_boundsVisible")
         jump ofs0044
         ofs0038:
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         coerce QName(PackageNamespace("flash.display"),"BitmapData")
         setlocal1
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"_boundsVisible")
         ofs0044:
         findpropstrict QName(PackageNamespace(""),"getScreenXY")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         callpropvoid QName(PackageNamespace(""),"getScreenXY"), 1
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"x")
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"y")
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getproperty QName(PackageNamespace(""),"x")
         negate
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"floor"), 1
         convert_i
         setlocal2
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getproperty QName(PackageNamespace(""),"y")
         negate
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"floor"), 1
         convert_i
         setlocal3
         getlocal2
         pushbyte 0
         ifnlt ofs009a
         pushbyte 0
         setlocal2
         ofs009a:
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenCols")
         subtract
         ifngt ofs00b3
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenCols")
         subtract
         convert_i
         setlocal2
         ofs00b3:
         getlocal3
         pushbyte 0
         ifnlt ofs00bd
         pushbyte 0
         setlocal3
         ofs00bd:
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenRows")
         subtract
         ifngt ofs00d6
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenRows")
         subtract
         convert_i
         setlocal3
         ofs00d6:
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         multiply
         getlocal2
         add
         convert_i
         setlocal 4
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         convert_u
         setlocal 5
         jump ofs017e
         ofs00f2:
         label
         getlocal 4
         convert_u
         setlocal 7
         pushbyte 0
         convert_u
         setlocal 6
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         jump ofs0153
         ofs0109:
         label
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_rects")
         getlocal 7
         convert_d
         dup
         increment
         convert_u
         setlocal 7
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace("flash.geom"),"Rectangle")
         astypelate
         initproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         pushnull
         ifeq ofs013c
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushnull
         pushnull
         pushtrue
         callpropvoid QName(PackageNamespace(""),"copyPixels"), 6
         ofs013c:
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal 6
         increment
         convert_u
         setlocal 6
         ofs0153:
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenCols")
         iflt ofs0109
         getlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         convert_i
         setlocal 4
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         add
         setproperty QName(PackageNamespace(""),"y")
         getlocal 5
         increment
         convert_u
         setlocal 5
         ofs017e:
         getlocal 5
         getlocal0
         getproperty QName(PackageNamespace(""),"_screenRows")
         iflt ofs00f2
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect2")
         initproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bufferLoc")
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bufferLoc")
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         findpropstrict QName(PackageNamespace(""),"getScreenXY")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         callpropvoid QName(PackageNamespace(""),"getScreenXY"), 1
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bufferLoc")
         getproperty QName(PackageNamespace(""),"x")
         add
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bufferLoc")
         getproperty QName(PackageNamespace(""),"y")
         add
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         greaterthan
         dup
         iftrue ofs0051
         pop
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         greaterthan
         ofs0051:
         dup
         iftrue ofs006c
         pop
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getproperty QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         lessthan
         ofs006c:
         dup
         iftrue ofs0087
         pop
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getproperty QName(PackageNamespace(""),"height")
         add
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         lessthan
         ofs0087:
         iffalse ofs0090
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"refresh")
         ofs0090:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function render() : void
      {
         trait method QName(PackageNamespace(""),"render")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"showBounds")
         getlocal0
         getproperty QName(PackageNamespace(""),"_boundsVisible")
         ifeq ofs0015
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"refresh")
         ofs0015:
         getlocal0
         getproperty QName(PackageNamespace(""),"refresh")
         iffalse ofs0027
         getlocal0
         callpropvoid QName(PackageNamespace(""),"renderTilemap"), 0
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"refresh")
         ofs0027:
         findpropstrict QName(PackageNamespace(""),"getScreenXY")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         callpropvoid QName(PackageNamespace(""),"getScreenXY"), 1
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bufferLoc")
         getproperty QName(PackageNamespace(""),"x")
         add
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_point")
         getproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bufferLoc")
         getproperty QName(PackageNamespace(""),"y")
         add
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"buffer")
         getlocal0
         getproperty QName(PackageNamespace(""),"_buffer")
         getlocal0
         getproperty QName(PackageNamespace(""),"_flashRect")
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_flashPoint")
         pushnull
         pushnull
         pushtrue
         callpropvoid QName(PackageNamespace(""),"copyPixels"), 6
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function set solid(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"solid")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         convert_b
         setlocal2
         findproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         getlocal1
         initproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         getlocal2
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_solid")
         ifeq ofs001b
         getlocal0
         callpropvoid QName(PackageNamespace(""),"generateBoundingTiles"), 0
         ofs001b:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function set fixed(param1:Boolean) : void
      {
         trait setter QName(PackageNamespace(""),"fixed")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_fixed")
         convert_b
         setlocal2
         findproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_fixed")
         getlocal1
         initproperty QName(ProtectedNamespace("org.flixel:FlxObject"),"_fixed")
         getlocal2
         getlex QName(ProtectedNamespace("org.flixel:FlxObject"),"_fixed")
         ifeq ofs001b
         getlocal0
         callpropvoid QName(PackageNamespace(""),"generateBoundingTiles"), 0
         ofs001b:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function overlaps(param1:FlxObject) : Boolean
      {
         trait method QName(PackageNamespace(""),"overlaps")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 7
         localcount 14
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         pushbyte 0
         convert_u
         setlocal 10
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"floor"), 1
         convert_u
         setlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"floor"), 1
         convert_u
         setlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         pushbyte 1
         add
         convert_u
         setlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         pushbyte 1
         add
         convert_u
         setlocal 8
         pushbyte 0
         convert_u
         setlocal 9
         jump ofs010b
         ofs007b:
         label
         getlocal 9
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         ifnge ofs008a
         jump ofs0113
         ofs008a:
         getlocal 6
         getlocal 9
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         multiply
         getlocal 5
         add
         convert_u
         setlocal2
         pushbyte 0
         convert_u
         setlocal 10
         jump ofs00fd
         ofs00a2:
         label
         getlocal 10
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         ifnge ofs00b1
         jump ofs0105
         ofs00b1:
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal2
         getlocal 10
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"uint")
         astypelate
         convert_u
         setlocal3
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"collideIndex")
         ifnge ofs00f7
         getlocal 4
         pushstring "x"
         getlex QName(PackageNamespace(""),"x")
         getlocal 5
         getlocal 10
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         add
         pushstring "y"
         getlex QName(PackageNamespace(""),"y")
         getlocal 6
         getlocal 9
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         add
         pushstring "data"
         getlocal3
         newobject 3
         callpropvoid QName(Namespace("http://adobe.com/AS3/2006/builtin"),"push"), 1
         ofs00f7:
         getlocal 10
         increment
         convert_u
         setlocal 10
         ofs00fd:
         getlocal 10
         getlocal 7
         iflt ofs00a2
         ofs0105:
         getlocal 9
         increment
         convert_u
         setlocal 9
         ofs010b:
         getlocal 9
         getlocal 8
         iflt ofs007b
         ofs0113:
         getlocal 4
         getproperty QName(PackageNamespace(""),"length")
         convert_u
         setlocal 11
         pushfalse
         setlocal 12
         pushbyte 0
         convert_u
         setlocal 13
         jump ofs015f
         ofs0127:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         getlocal 4
         getlocal 13
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getproperty Multiname("x",[PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         getlocal 4
         getlocal 13
         convert_d
         dup
         increment
         convert_u
         setlocal 13
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getproperty Multiname("y",[PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         getlocal1
         callproperty QName(PackageNamespace(""),"overlaps"), 1
         iffalse ofs015f
         pushtrue
         returnvalue
         ofs015f:
         getlocal 13
         getlocal 11
         iflt ofs0127
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function overlapsPoint(param1:Number, param2:Number, param3:Boolean = false) : Boolean
      {
         trait method QName(PackageNamespace(""),"overlapsPoint")
         flag OVERRIDE
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal1
         getlex QName(PackageNamespace(""),"x")
         subtract
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"uint"), 1
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal2
         getlex QName(PackageNamespace(""),"y")
         subtract
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"uint"), 1
         callproperty QName(PackageNamespace(""),"getTile"), 2
         getlocal0
         getproperty QName(PackageNamespace(""),"collideIndex")
         greaterequals
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function refreshHulls() : void
      {
         trait method QName(PackageNamespace(""),"refreshHulls")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"colHullX")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"colHullX")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"colHullX")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"colHullX")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"colHullY")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"colHullY")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"colHullY")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"colHullY")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         setproperty QName(PackageNamespace(""),"height")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function preCollide(param1:FlxObject) : void
      {
         trait method QName(PackageNamespace(""),"preCollide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 11
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         pushbyte 0
         convert_u
         setlocal 4
         getlex QName(PackageNamespace(""),"colHullX")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"colHullX")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"colHullY")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"colHullY")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         convert_u
         setlocal 5
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         subtract
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"floor"), 1
         convert_i
         setlocal 6
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         subtract
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"floor"), 1
         convert_i
         setlocal 7
         getlocal 6
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlocal1
         getproperty QName(PackageNamespace(""),"width")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         add
         pushbyte 1
         add
         convert_u
         setlocal 8
         getlocal 7
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         add
         pushbyte 1
         add
         convert_u
         setlocal 9
         getlocal 6
         pushbyte 0
         ifnlt ofs00a0
         pushbyte 0
         setlocal 6
         ofs00a0:
         getlocal 7
         pushbyte 0
         ifnlt ofs00ac
         pushbyte 0
         setlocal 7
         ofs00ac:
         getlocal 8
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         ifngt ofs00bd
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         convert_u
         setlocal 8
         ofs00bd:
         getlocal 9
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         ifngt ofs00ce
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         convert_u
         setlocal 9
         ofs00ce:
         getlocal 7
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         multiply
         convert_u
         setlocal 4
         getlocal 7
         convert_u
         setlocal2
         jump ofs0145
         ofs00e0:
         label
         getlocal 6
         convert_u
         setlocal3
         jump ofs0130
         ofs00e9:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal 4
         getlocal3
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"uint")
         astypelate
         getlocal0
         getproperty QName(PackageNamespace(""),"collideIndex")
         ifnge ofs012c
         getlex QName(PackageNamespace(""),"colOffsets")
         getlocal 5
         convert_d
         dup
         increment
         convert_u
         setlocal 5
         dup
         setlocal 10
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxPoint")
         getlex QName(PackageNamespace(""),"x")
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         add
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         add
         constructprop QName(PackageNamespace("org.flixel"),"FlxPoint"), 2
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         kill 10
         ofs012c:
         getlocal3
         increment
         convert_u
         setlocal3
         ofs0130:
         getlocal3
         getlocal 8
         iflt ofs00e9
         getlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         convert_u
         setlocal 4
         getlocal2
         increment
         convert_u
         setlocal2
         ofs0145:
         getlocal2
         getlocal 9
         iflt ofs00e0
         getlex QName(PackageNamespace(""),"colOffsets")
         getproperty QName(PackageNamespace(""),"length")
         getlocal 5
         ifeq ofs0160
         getlex QName(PackageNamespace(""),"colOffsets")
         getlocal 5
         setproperty QName(PackageNamespace(""),"length")
         ofs0160:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get tileAccessBehavior() : int
      {
         trait getter QName(PackageNamespace(""),"tileAccessBehavior")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"105"),"_tileAccessBehavior")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set tileAccessBehavior(param1:int) : void
      {
         trait setter QName(PackageNamespace(""),"tileAccessBehavior")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         jump ofs0070
         ofs0006:
         label
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"getTileNoWrap")
         initproperty QName(PackageNamespace(""),"getTile")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"setTileNoWrap")
         initproperty QName(PackageNamespace(""),"setTile")
         jump ofs00cc
         ofs001b:
         label
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"getTileWrap")
         initproperty QName(PackageNamespace(""),"getTile")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"setTileWrap")
         initproperty QName(PackageNamespace(""),"setTile")
         jump ofs00cc
         ofs0030:
         label
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"getTileZeroesAfterEdge")
         initproperty QName(PackageNamespace(""),"getTile")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"setTileZeroesAfterEdge")
         initproperty QName(PackageNamespace(""),"setTile")
         jump ofs00cc
         ofs0045:
         label
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"getTileRepeatingEdge")
         initproperty QName(PackageNamespace(""),"getTile")
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"setTileRepeatingEdge")
         initproperty QName(PackageNamespace(""),"setTile")
         jump ofs00cc
         ofs005a:
         label
         findpropstrict QName(PackageNamespace(""),"Error")
         pushstring "Unknown tile access behavior: "
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         constructprop QName(PackageNamespace(""),"Error"), 1
         throw
         jump ofs0070
         ofs0070:
         getlocal1
         setlocal2
         getlex QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_NORMAL")
         getlocal2
         ifstrictne ofs0080
         pushbyte 0
         jump ofs00b6
         ofs0080:
         getlex QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_WRAP")
         getlocal2
         ifstrictne ofs008e
         pushbyte 1
         jump ofs00b6
         ofs008e:
         getlex QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_ZEROES_AFTER_EDGE")
         getlocal2
         ifstrictne ofs009c
         pushbyte 2
         jump ofs00b6
         ofs009c:
         getlex QName(PackageNamespace(""),"TILE_ACCESS_BEHAVIOR_REPEATING_EDGE")
         getlocal2
         ifstrictne ofs00aa
         pushbyte 3
         jump ofs00b6
         ofs00aa:
         jump ofs00b4
         pushbyte 4
         jump ofs00b4
         ofs00b4:
         pushbyte 4
         ofs00b6:
         kill 2
         lookupswitch ofs005a, [ofs0006, ofs001b, ofs0030, ofs0045, ofs005a]
         ofs00cc:
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"105"),"_tileAccessBehavior")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getTileNoWrap(param1:uint, param2:uint) : uint
      {
         trait method QName(PackageNamespace(""),"getTileNoWrap")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         multiply
         getlocal1
         add
         callproperty QName(PackageNamespace(""),"getTileByIndex"), 1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTileWrap(param1:uint, param2:uint) : uint
      {
         trait method QName(PackageNamespace(""),"getTileWrap")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_wrapCenterOffsetX")
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         convert_u
         setlocal1
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_wrapCenterOffsetY")
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         modulo
         convert_u
         setlocal2
         getlocal0
         getlocal1
         getlocal2
         callproperty QName(PackageNamespace(""),"getTileNoWrap"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTileZeroesAfterEdge(param1:uint, param2:uint) : uint
      {
         trait method QName(PackageNamespace(""),"getTileZeroesAfterEdge")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal1
         pushbyte 0
         lessthan
         dup
         iftrue ofs0010
         pop
         getlocal2
         pushbyte 0
         lessthan
         ofs0010:
         dup
         iftrue ofs001c
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         greaterequals
         ofs001c:
         dup
         iftrue ofs0028
         pop
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         greaterequals
         ofs0028:
         iffalse ofs002f
         pushbyte 0
         returnvalue
         ofs002f:
         getlocal0
         getlocal1
         getlocal2
         callproperty QName(PackageNamespace(""),"getTileNoWrap"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTileRepeatingEdge(param1:uint, param2:uint) : uint
      {
         trait method QName(PackageNamespace(""),"getTileRepeatingEdge")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         callproperty QName(PackageNamespace(""),"int"), 1
         pushbyte 0
         ifnlt ofs0016
         pushbyte 0
         convert_u
         setlocal1
         jump ofs0027
         ofs0016:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         decrement
         ifngt ofs0027
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         decrement
         convert_u
         setlocal1
         ofs0027:
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal2
         callproperty QName(PackageNamespace(""),"int"), 1
         pushbyte 0
         ifnlt ofs003b
         pushbyte 0
         convert_u
         setlocal2
         jump ofs004c
         ofs003b:
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         decrement
         ifngt ofs004c
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         decrement
         convert_u
         setlocal2
         ofs004c:
         getlocal0
         getlocal1
         getlocal2
         callproperty QName(PackageNamespace(""),"getTileNoWrap"), 2
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTileZeroesAfterEdge(param1:uint, param2:uint, param3:uint, param4:Boolean = true) : Boolean
      {
         trait method QName(PackageNamespace(""),"setTileZeroesAfterEdge")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal1
         pushbyte 0
         lessthan
         dup
         iftrue ofs0010
         pop
         getlocal2
         pushbyte 0
         lessthan
         ofs0010:
         dup
         iftrue ofs001c
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         greaterequals
         ofs001c:
         dup
         iftrue ofs0028
         pop
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         greaterequals
         ofs0028:
         iffalse ofs002e
         pushfalse
         returnvalue
         ofs002e:
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         callproperty QName(PackageNamespace(""),"setTileNoWrap"), 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTileWrap(param1:uint, param2:uint, param3:uint, param4:Boolean = true) : Boolean
      {
         trait method QName(PackageNamespace(""),"setTileWrap")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_wrapCenterOffsetX")
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         convert_u
         setlocal1
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_wrapCenterOffsetY")
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         modulo
         convert_u
         setlocal2
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         callproperty QName(PackageNamespace(""),"setTileNoWrap"), 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTileRepeatingEdge(param1:uint, param2:uint, param3:uint, param4:Boolean = true) : Boolean
      {
         trait method QName(PackageNamespace(""),"setTileRepeatingEdge")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 5
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         callproperty QName(PackageNamespace(""),"int"), 1
         pushbyte 0
         ifnlt ofs0016
         pushbyte 0
         convert_u
         setlocal1
         jump ofs0027
         ofs0016:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         decrement
         ifngt ofs0027
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         decrement
         convert_u
         setlocal1
         ofs0027:
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal2
         callproperty QName(PackageNamespace(""),"int"), 1
         pushbyte 0
         ifnlt ofs003b
         pushbyte 0
         convert_u
         setlocal2
         jump ofs004c
         ofs003b:
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         decrement
         ifngt ofs004c
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         decrement
         convert_u
         setlocal2
         ofs004c:
         getlocal0
         getlocal1
         getlocal2
         getlocal3
         getlocal 4
         callproperty QName(PackageNamespace(""),"setTileNoWrap"), 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTileNoWrap(param1:uint, param2:uint, param3:uint, param4:Boolean = true) : Boolean
      {
         trait method QName(PackageNamespace(""),"setTileNoWrap")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         greaterequals
         dup
         iftrue ofs0014
         pop
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         greaterequals
         ofs0014:
         iffalse ofs001a
         pushfalse
         returnvalue
         ofs001a:
         getlocal0
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         multiply
         getlocal1
         add
         getlocal3
         getlocal 4
         callproperty QName(PackageNamespace(""),"setTileByIndex"), 3
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getTileByIndex(param1:uint) : uint
      {
         trait method QName(PackageNamespace(""),"getTileByIndex")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"uint")
         astypelate
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setTileByIndex(param1:uint, param2:uint, param3:Boolean = true) : Boolean
      {
         trait method QName(PackageNamespace(""),"setTileByIndex")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 10
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal 5
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getproperty QName(PackageNamespace(""),"length")
         ifnge ofs0015
         pushfalse
         returnvalue
         ofs0015:
         pushtrue
         setlocal 4
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal3
         iftrue ofs0029
         getlocal 4
         returnvalue
         ofs0029:
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"refresh")
         getlocal0
         getproperty QName(PackageNamespace(""),"auto")
         getlex QName(PackageNamespace(""),"OFF")
         ifne ofs0042
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"updateTile"), 1
         getlocal 4
         returnvalue
         ofs0042:
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         divide
         callproperty QName(PackageNamespace(""),"int"), 1
         decrement
         convert_i
         dup
         setlocal 6
         pushbyte 3
         add
         convert_i
         setlocal 7
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         decrement
         convert_i
         dup
         setlocal 8
         pushbyte 3
         add
         convert_i
         setlocal 9
         jump ofs00d0
         ofs006d:
         label
         getlocal 9
         pushbyte 3
         subtract
         convert_i
         setlocal 8
         jump ofs00c6
         ofs007a:
         label
         getlocal 6
         pushbyte 0
         greaterequals
         dup
         iffalse ofs008d
         pop
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"heightInTiles")
         lessthan
         ofs008d:
         dup
         iffalse ofs0098
         pop
         getlocal 8
         pushbyte 0
         greaterequals
         ofs0098:
         dup
         iffalse ofs00a5
         pop
         getlocal 8
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         lessthan
         ofs00a5:
         iffalse ofs00c4
         getlocal 6
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         multiply
         getlocal 8
         add
         convert_u
         setlocal 5
         getlocal0
         getlocal 5
         callpropvoid QName(PackageNamespace(""),"autoTile"), 1
         getlocal0
         getlocal 5
         callpropvoid QName(PackageNamespace(""),"updateTile"), 1
         ofs00c4:
         inclocal_i 8
         ofs00c6:
         getlocal 8
         getlocal 9
         iflt ofs007a
         inclocal_i 6
         ofs00d0:
         getlocal 6
         getlocal 7
         iflt ofs006d
         getlocal 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setCallback(param1:uint, param2:Function, param3:uint = 1) : void
      {
         trait method QName(PackageNamespace(""),"setCallback")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"Function")
         param QName(PackageNamespace(""),"uint")
         optional Integer(1)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         pushstring "WARNING: FlxTilemap.setCallback()\nhas been temporarily deprecated."
         callpropvoid QName(PackageNamespace(""),"log"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function follow(param1:int = 0) : void
      {
         trait method QName(PackageNamespace(""),"follow")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         optional Integer(0)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 2
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getlex QName(PackageNamespace(""),"x")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         add
         getlex QName(PackageNamespace(""),"y")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         add
         getlex QName(PackageNamespace(""),"width")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         subtract
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         subtract
         callpropvoid QName(PackageNamespace(""),"followBounds"), 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function ray(param1:Number, param2:Number, param3:Number, param4:Number, param5:FlxPoint, param6:Number = 1) : Boolean
      {
         trait method QName(PackageNamespace(""),"ray")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace("org.flixel"),"FlxPoint")
         param QName(PackageNamespace(""),"Number")
         optional Integer(1)
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 4
         localcount 24
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         pushbyte 0
         convert_u
         setlocal 16
         pushbyte 0
         convert_u
         setlocal 17
         pushnan
         setlocal 19
         pushnan
         setlocal 20
         pushnan
         setlocal 21
         pushnan
         setlocal 22
         pushnan
         setlocal 23
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         convert_d
         setlocal 7
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         ifnlt ofs0035
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         convert_d
         setlocal 7
         ofs0035:
         getlocal 7
         getlocal 6
         divide
         convert_d
         setlocal 7
         getlocal3
         getlocal1
         subtract
         convert_d
         setlocal 8
         getlocal 4
         getlocal2
         subtract
         convert_d
         setlocal 9
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         getlocal 8
         multiply
         getlocal 9
         getlocal 9
         multiply
         add
         callproperty QName(PackageNamespace(""),"sqrt"), 1
         convert_d
         setlocal 10
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         getlocal 7
         divide
         callproperty QName(PackageNamespace(""),"ceil"), 1
         convert_u
         setlocal 11
         getlocal 8
         getlocal 11
         divide
         convert_d
         setlocal 12
         getlocal 9
         getlocal 11
         divide
         convert_d
         setlocal 13
         getlocal1
         getlocal 12
         subtract
         convert_d
         setlocal 14
         getlocal2
         getlocal 13
         subtract
         convert_d
         setlocal 15
         pushbyte 0
         convert_u
         setlocal 18
         jump ofs020d
         ofs0095:
         label
         getlocal 14
         getlocal 12
         add
         convert_d
         setlocal 14
         getlocal 15
         getlocal 13
         add
         convert_d
         setlocal 15
         getlocal 14
         pushbyte 0
         lessthan
         dup
         iftrue ofs00b7
         pop
         getlocal 14
         getlex QName(PackageNamespace(""),"width")
         greaterthan
         ofs00b7:
         dup
         iftrue ofs00c2
         pop
         getlocal 15
         pushbyte 0
         lessthan
         ofs00c2:
         dup
         iftrue ofs00ce
         pop
         getlocal 15
         getlex QName(PackageNamespace(""),"height")
         greaterthan
         ofs00ce:
         iffalse ofs00dc
         getlocal 18
         increment
         convert_u
         setlocal 18
         jump ofs020d
         ofs00dc:
         getlocal 14
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         divide
         convert_u
         setlocal 16
         getlocal 15
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         divide
         convert_u
         setlocal 17
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal 17
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         multiply
         getlocal 16
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"uint")
         astypelate
         getlocal0
         getproperty QName(PackageNamespace(""),"collideIndex")
         ifnge ofs0207
         getlocal 16
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         convert_u
         setlocal 16
         getlocal 17
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         convert_u
         setlocal 17
         pushbyte 0
         convert_d
         setlocal 19
         pushbyte 0
         convert_d
         setlocal 20
         getlocal 14
         getlocal 12
         subtract
         convert_d
         setlocal 22
         getlocal 15
         getlocal 13
         subtract
         convert_d
         setlocal 23
         getlocal 16
         convert_d
         setlocal 21
         getlocal 8
         pushbyte 0
         ifnlt ofs0151
         getlocal 21
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         add
         convert_d
         setlocal 21
         ofs0151:
         getlocal 21
         convert_d
         setlocal 19
         getlocal 23
         getlocal 13
         getlocal 21
         getlocal 22
         subtract
         getlocal 12
         divide
         multiply
         add
         convert_d
         dup
         setlocal 20
         getlocal 17
         greaterthan
         dup
         iffalse ofs017b
         pop
         getlocal 20
         getlocal 17
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         add
         lessthan
         ofs017b:
         iffalse ofs019f
         getlocal 5
         pushnull
         ifne ofs018f
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxPoint")
         constructprop QName(PackageNamespace("org.flixel"),"FlxPoint"), 0
         coerce QName(PackageNamespace("org.flixel"),"FlxPoint")
         setlocal 5
         ofs018f:
         getlocal 5
         getlocal 19
         setproperty QName(PackageNamespace(""),"x")
         getlocal 5
         getlocal 20
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs019f:
         getlocal 17
         convert_d
         setlocal 21
         getlocal 9
         pushbyte 0
         ifnlt ofs01b6
         getlocal 21
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         add
         convert_d
         setlocal 21
         ofs01b6:
         getlocal 22
         getlocal 12
         getlocal 21
         getlocal 23
         subtract
         getlocal 13
         divide
         multiply
         add
         convert_d
         setlocal 19
         getlocal 21
         convert_d
         setlocal 20
         getlocal 19
         getlocal 16
         greaterthan
         dup
         iffalse ofs01e1
         pop
         getlocal 19
         getlocal 16
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         add
         lessthan
         ofs01e1:
         iffalse ofs0205
         getlocal 5
         pushnull
         ifne ofs01f5
         findpropstrict QName(PackageNamespace("org.flixel"),"FlxPoint")
         constructprop QName(PackageNamespace("org.flixel"),"FlxPoint"), 0
         coerce QName(PackageNamespace("org.flixel"),"FlxPoint")
         setlocal 5
         ofs01f5:
         getlocal 5
         getlocal 19
         setproperty QName(PackageNamespace(""),"x")
         getlocal 5
         getlocal 20
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs0205:
         pushfalse
         returnvalue
         ofs0207:
         getlocal 18
         increment
         convert_u
         setlocal 18
         ofs020d:
         getlocal 18
         getlocal 11
         iflt ofs0095
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function autoTile(param1:uint) : void
      {
         trait method QName(PackageNamespace(""),"autoTile")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 2
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         ifne ofs0011
         returnvoid
         ofs0011:
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         pushbyte 0
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         subtract
         pushbyte 0
         lessthan
         dup
         iftrue ofs003a
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         subtract
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         greaterthan
         ofs003a:
         iffalse ofs0051
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 1
         add
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0051:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         decrement
         greaterequals
         dup
         iftrue ofs0071
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         pushbyte 1
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         greaterthan
         ofs0071:
         iffalse ofs0088
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 2
         add
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0088:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"totalTiles")
         greaterequals
         dup
         iftrue ofs00a9
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         greaterthan
         ofs00a9:
         iffalse ofs00c0
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 4
         add
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs00c0:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         pushbyte 0
         lessequals
         dup
         iftrue ofs00db
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         decrement
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         greaterthan
         ofs00db:
         iffalse ofs00f2
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 8
         add
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs00f2:
         getlocal0
         getproperty QName(PackageNamespace(""),"auto")
         getlex QName(PackageNamespace(""),"ALT")
         equals
         dup
         iffalse ofs010b
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 15
         equals
         ofs010b:
         iffalse ofs0211
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         pushbyte 0
         greaterthan
         dup
         iffalse ofs0129
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"totalTiles")
         lessthan
         ofs0129:
         dup
         iffalse ofs0140
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         decrement
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         lessequals
         ofs0140:
         iffalse ofs014e
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         pushbyte 1
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs014e:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         pushbyte 0
         greaterthan
         dup
         iffalse ofs0166
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         subtract
         pushbyte 0
         greaterequals
         ofs0166:
         dup
         iffalse ofs017d
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         subtract
         decrement
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         lessequals
         ofs017d:
         iffalse ofs018b
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         pushbyte 2
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs018b:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         decrement
         lessthan
         dup
         iffalse ofs01a6
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         subtract
         pushbyte 0
         greaterequals
         ofs01a6:
         dup
         iffalse ofs01bf
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         subtract
         pushbyte 1
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         lessequals
         ofs01bf:
         iffalse ofs01cd
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         pushbyte 4
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs01cd:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         modulo
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         decrement
         lessthan
         dup
         iffalse ofs01ea
         pop
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"totalTiles")
         lessthan
         ofs01ea:
         dup
         iffalse ofs0203
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"widthInTiles")
         add
         pushbyte 1
         add
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 0
         lessequals
         ofs0203:
         iffalse ofs0211
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         pushbyte 8
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0211:
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pushbyte 1
         add
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function updateTile(param1:uint) : void
      {
         trait method QName(PackageNamespace(""),"updateTile")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"uint")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 4
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PackageNamespace(""),"drawIndex")
         ifnlt ofs001c
         getlocal0
         getproperty QName(PackageNamespace(""),"_rects")
         getlocal1
         pushnull
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         returnvoid
         ofs001c:
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PackageNamespace(""),"startingIndex")
         subtract
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         multiply
         convert_u
         setlocal2
         pushbyte 0
         convert_u
         setlocal3
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"width")
         ifnge ofs0060
         findpropstrict QName(PackageNamespace(""),"uint")
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"width")
         divide
         callproperty QName(PackageNamespace(""),"uint"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         multiply
         convert_u
         setlocal3
         getlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_pixels")
         getproperty QName(PackageNamespace(""),"width")
         modulo
         convert_u
         setlocal2
         ofs0060:
         getlocal0
         getproperty QName(PackageNamespace(""),"_rects")
         getlocal1
         findpropstrict QName(PackageNamespace("flash.geom"),"Rectangle")
         getlocal2
         getlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileWidth")
         getlocal0
         getproperty QName(PackageNamespace(""),"_tileHeight")
         constructprop QName(PackageNamespace("flash.geom"),"Rectangle"), 4
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 7
         maxscopedepth 8
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_flashRect")
         getlocal0
         getproperty QName(PackageNamespace(""),"_bbPixels")
         callpropvoid QName(PackageNamespace(""),"dispose"), 0
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_bbPixels")
         getlocal0
         getproperty QName(PackageNamespace(""),"_block")
         callpropvoid QName(PackageNamespace(""),"destroy"), 0
         getlocal0
         getproperty QName(PackageNamespace(""),"_data")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"length")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_data")
         pushbyte 0
         setlocal1
         jump ofs0042
         ofs0036:
         label
         getlocal0
         getproperty QName(PackageNamespace(""),"_rects")
         getlocal1
         pushnull
         setproperty MultinameL([PrivateNamespace(null,"105"),PackageNamespace(""),PackageNamespace("org.flixel"),PrivateNamespace(null,"451"),PackageInternalNs("org.flixel"),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("mx.utils"),ProtectedNamespace("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxTilemap"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         inclocal_i 1
         ofs0042:
         getlocal1
         getlocal0
         getproperty QName(PackageNamespace(""),"_rects")
         getproperty QName(PackageNamespace(""),"length")
         iflt ofs0036
         getlocal0
         getproperty QName(PackageNamespace(""),"_rects")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"length")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_rects")
         getlocal0
         getproperty QName(PackageNamespace(""),"_callbacks")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"length")
         getlocal0
         pushnull
         initproperty QName(PackageNamespace(""),"_callbacks")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 6

code
getlocal0
pushscope
findpropstrict Multiname("FlxTilemap",[PackageNamespace("org.flixel")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
newclass 318
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace("org.flixel"),"FlxTilemap")
returnvoid
end ; code
end ; body
end ; method

