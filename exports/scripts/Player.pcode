package
{
   import flash.utils.clearInterval;
   import flash.utils.setInterval;
   import org.flixel.*;
   
   public class Player extends FlxSprite
   {
      public static const BOSSRUSH_STARTX:int = 500;
      
      public static const BOSSRUSH_STARTY:int = 135;
      
      public static const MAX_HELIX_FRAGMENTS:int = 30;
      
      public static const MAX_HEART_CONTAINERS:int = 14;
      
      public static const GRAV_DOWN:int = 0;
      
      public static const GRAV_RIGHT:int = 1;
      
      public static const GRAV_UP:int = 2;
      
      public static const GRAV_LEFT:int = 3;
      
      public static const DIR_DOWN:int = 0;
      
      public static const DIR_RIGHT:int = 1;
      
      public static const DIR_UP:int = 2;
      
      public static const DIR_LEFT:int = 3;
      
      public static const FACE_FLOOR_RIGHT:int = 0;
      
      public static const FACE_FLOOR_LEFT:int = 1;
      
      public static const FACE_CEIL_LEFT:int = 2;
      
      public static const FACE_CEIL_RIGHT:int = 3;
      
      public static const FACE_RWALL_UP:int = 4;
      
      public static const FACE_RWALL_DOWN:int = 5;
      
      public static const FACE_LWALL_UP:int = 6;
      
      public static const FACE_LWALL_DOWN:int = 7;
      
      public static const DIR_NAME:Array;
      
      private static const DEATHFADE_DELAY:int = 1000;
      
      private static const TELEPORT_DELAY:int = 40;
      
      private static const REVIVE_DELAY:int = 2000;
      
      private static const SPRITE_WIDTH:int = 32;
      
      private static const SPRITE_HEIGHT:int = 32;
      
      private static const REGULAR_JUMP:int = 428;
      
      private static const HIGH_JUMP:int = 920;
      
      public static const WEAPON_NONE:int = -1;
      
      public static const WEAPON_PEA_SHOOTER:int = 0;
      
      public static const WEAPON_PEA_BOOMERANG:int = 1;
      
      public static const WEAPON_PEA_RAINBOW_WAVE:int = 2;
      
      public static const SNAILTYPE_NORMAL:int = 1;
      
      public static const SNAILTYPE_ICE:int = 2;
      
      public static const SNAILTYPE_GRAVITY:int = 3;
      
      public static const SNAILTYPE_METAL:int = 4;
      
      public static const STARTING_MAX_HEARTS:int = 3;
      
      public static var ALT_WEAPON_1_KEY:String = "";
      
      public static var ALT_WEAPON_2_KEY:String = "";
      
      public static var ALT_WEAPON_3_KEY:String = "";
      
      public static var ALT_WEAPON_NEXT_KEY:String = "";
      
      public static var ALT_WEAPON_PREV_KEY:String = "";
      
      public static const DEFAULT_WEAPON_1_KEY:String = "ONE";
      
      public static const DEFAULT_WEAPON_2_KEY:String = "TWO";
      
      public static const DEFAULT_WEAPON_3_KEY:String = "THREE";
      
      public static const DEFAULT_WEAPON_NEXT_KEY:String = "PLUS";
      
      public static const DEFAULT_WEAPON_PREV_KEY:String = "MINUS";
      
      public static const DEFAULT_MAP_KEY:String = "M";
      
      public static const DEFAULT_JUMP_KEY:String = "Z";
      
      public static const DEFAULT_SHOOT_KEY:String = "X";
      
      public static const DEFAULT_STRAFE_KEY:String = "C";
      
      public static const DEFAULT_ALT_JUMP_KEY:String = "K";
      
      public static const DEFAULT_ALT_SHOOT_KEY:String = "J";
      
      public static const DEFAULT_ALT_STRAFE_KEY:String = "H";
      
      public static const DEFAULT_UP_KEY:String = "UP";
      
      public static const DEFAULT_LEFT_KEY:String = "LEFT";
      
      public static const DEFAULT_DOWN_KEY:String = "DOWN";
      
      public static const DEFAULT_RIGHT_KEY:String = "RIGHT";
      
      public static const DEFAULT_ALT_UP_KEY:String = "W";
      
      public static const DEFAULT_ALT_LEFT_KEY:String = "A";
      
      public static const DEFAULT_ALT_DOWN_KEY:String = "S";
      
      public static const DEFAULT_ALT_RIGHT_KEY:String = "D";
      
      public static var WEAPON_1_KEY:String = "ONE";
      
      public static var WEAPON_2_KEY:String = "TWO";
      
      public static var WEAPON_3_KEY:String = "THREE";
      
      public static var WEAPON_NEXT_KEY:String = "PLUS";
      
      public static var WEAPON_PREV_KEY:String = "MINUS";
      
      public static var MAP_KEY:String = "M";
      
      public static var JUMP_KEY:String = "Z";
      
      public static var SHOOT_KEY:String = "X";
      
      public static var STRAFE_KEY:String = "C";
      
      public static var ALT_JUMP_KEY:String = "K";
      
      public static var ALT_SHOOT_KEY:String = "J";
      
      public static var ALT_STRAFE_KEY:String = "H";
      
      public static var UP_KEY:String = "UP";
      
      public static var LEFT_KEY:String = "LEFT";
      
      public static var DOWN_KEY:String = "DOWN";
      
      public static var RIGHT_KEY:String = "RIGHT";
      
      public static var ALT_UP_KEY:String = "W";
      
      public static var ALT_LEFT_KEY:String = "A";
      
      public static var ALT_DOWN_KEY:String = "S";
      
      public static var ALT_RIGHT_KEY:String = "D";
      
      private static const SLEEP_TIMEOUT:Number = 30;
      
      public static var fireToggle:Boolean = false;
      
      public static const FIRING_MODE_NORMAL:int = 0;
      
      public static const FIRING_MODE_TOGGLE:int = 1;
      
      public static var firingMode:int = 0;
      
      method
      name null
      returns null
      
      body
      maxstack 9
      localcount 1
      initscopedepth 7
      maxscopedepth 8
      
      code
      getlocal0
      pushscope
      findproperty QName(PackageNamespace(""),"BOSSRUSH_STARTX")
      pushshort 500
      initproperty QName(PackageNamespace(""),"BOSSRUSH_STARTX")
      findproperty QName(PackageNamespace(""),"BOSSRUSH_STARTY")
      pushshort 135
      initproperty QName(PackageNamespace(""),"BOSSRUSH_STARTY")
      findproperty QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
      pushbyte 30
      initproperty QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
      findproperty QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
      pushbyte 14
      initproperty QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
      findproperty QName(PackageNamespace(""),"GRAV_DOWN")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"GRAV_DOWN")
      findproperty QName(PackageNamespace(""),"GRAV_RIGHT")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"GRAV_RIGHT")
      findproperty QName(PackageNamespace(""),"GRAV_UP")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"GRAV_UP")
      findproperty QName(PackageNamespace(""),"GRAV_LEFT")
      pushbyte 3
      initproperty QName(PackageNamespace(""),"GRAV_LEFT")
      findproperty QName(PackageNamespace(""),"DIR_DOWN")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"DIR_DOWN")
      findproperty QName(PackageNamespace(""),"DIR_RIGHT")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"DIR_RIGHT")
      findproperty QName(PackageNamespace(""),"DIR_UP")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"DIR_UP")
      findproperty QName(PackageNamespace(""),"DIR_LEFT")
      pushbyte 3
      initproperty QName(PackageNamespace(""),"DIR_LEFT")
      findproperty QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
      findproperty QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
      findproperty QName(PackageNamespace(""),"FACE_CEIL_LEFT")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"FACE_CEIL_LEFT")
      findproperty QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
      pushbyte 3
      initproperty QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
      findproperty QName(PackageNamespace(""),"FACE_RWALL_UP")
      pushbyte 4
      initproperty QName(PackageNamespace(""),"FACE_RWALL_UP")
      findproperty QName(PackageNamespace(""),"FACE_RWALL_DOWN")
      pushbyte 5
      initproperty QName(PackageNamespace(""),"FACE_RWALL_DOWN")
      findproperty QName(PackageNamespace(""),"FACE_LWALL_UP")
      pushbyte 6
      initproperty QName(PackageNamespace(""),"FACE_LWALL_UP")
      findproperty QName(PackageNamespace(""),"FACE_LWALL_DOWN")
      pushbyte 7
      initproperty QName(PackageNamespace(""),"FACE_LWALL_DOWN")
      findproperty QName(PackageNamespace(""),"DIR_NAME")
      pushstring "floor right"
      pushstring "floor left"
      pushstring "ceil left"
      pushstring "ceil right"
      pushstring "rwall up"
      pushstring "rwall down"
      pushstring "lwall up"
      pushstring "lwall down"
      newarray 8
      initproperty QName(PackageNamespace(""),"DIR_NAME")
      findproperty QName(PrivateNamespace(null,"39"),"DEATHFADE_DELAY")
      pushshort 1000
      initproperty QName(PrivateNamespace(null,"39"),"DEATHFADE_DELAY")
      findproperty QName(PrivateNamespace(null,"39"),"TELEPORT_DELAY")
      pushbyte 40
      initproperty QName(PrivateNamespace(null,"39"),"TELEPORT_DELAY")
      findproperty QName(PrivateNamespace(null,"39"),"REVIVE_DELAY")
      pushshort 2000
      initproperty QName(PrivateNamespace(null,"39"),"REVIVE_DELAY")
      findproperty QName(PrivateNamespace(null,"39"),"SPRITE_WIDTH")
      pushbyte 32
      initproperty QName(PrivateNamespace(null,"39"),"SPRITE_WIDTH")
      findproperty QName(PrivateNamespace(null,"39"),"SPRITE_HEIGHT")
      pushbyte 32
      initproperty QName(PrivateNamespace(null,"39"),"SPRITE_HEIGHT")
      findproperty QName(PrivateNamespace(null,"39"),"REGULAR_JUMP")
      pushshort 428
      initproperty QName(PrivateNamespace(null,"39"),"REGULAR_JUMP")
      findproperty QName(PrivateNamespace(null,"39"),"HIGH_JUMP")
      pushshort 920
      initproperty QName(PrivateNamespace(null,"39"),"HIGH_JUMP")
      findproperty QName(PackageNamespace(""),"WEAPON_NONE")
      pushbyte -1
      initproperty QName(PackageNamespace(""),"WEAPON_NONE")
      findproperty QName(PackageNamespace(""),"WEAPON_PEA_SHOOTER")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"WEAPON_PEA_SHOOTER")
      findproperty QName(PackageNamespace(""),"WEAPON_PEA_BOOMERANG")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"WEAPON_PEA_BOOMERANG")
      findproperty QName(PackageNamespace(""),"WEAPON_PEA_RAINBOW_WAVE")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"WEAPON_PEA_RAINBOW_WAVE")
      findproperty QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
      findproperty QName(PackageNamespace(""),"SNAILTYPE_ICE")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"SNAILTYPE_ICE")
      findproperty QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
      pushbyte 3
      initproperty QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
      findproperty QName(PackageNamespace(""),"SNAILTYPE_METAL")
      pushbyte 4
      initproperty QName(PackageNamespace(""),"SNAILTYPE_METAL")
      findproperty QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
      pushbyte 3
      initproperty QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
      findproperty QName(PackageNamespace(""),"ALT_WEAPON_1_KEY")
      pushstring ""
      setproperty QName(PackageNamespace(""),"ALT_WEAPON_1_KEY")
      findproperty QName(PackageNamespace(""),"ALT_WEAPON_2_KEY")
      pushstring ""
      setproperty QName(PackageNamespace(""),"ALT_WEAPON_2_KEY")
      findproperty QName(PackageNamespace(""),"ALT_WEAPON_3_KEY")
      pushstring ""
      setproperty QName(PackageNamespace(""),"ALT_WEAPON_3_KEY")
      findproperty QName(PackageNamespace(""),"ALT_WEAPON_NEXT_KEY")
      pushstring ""
      setproperty QName(PackageNamespace(""),"ALT_WEAPON_NEXT_KEY")
      findproperty QName(PackageNamespace(""),"ALT_WEAPON_PREV_KEY")
      pushstring ""
      setproperty QName(PackageNamespace(""),"ALT_WEAPON_PREV_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
      pushstring "ONE"
      initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
      pushstring "TWO"
      initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
      pushstring "THREE"
      initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
      pushstring "PLUS"
      initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
      pushstring "MINUS"
      initproperty QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
      pushstring "M"
      initproperty QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
      pushstring "Z"
      initproperty QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
      pushstring "X"
      initproperty QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
      pushstring "C"
      initproperty QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
      pushstring "K"
      initproperty QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
      pushstring "J"
      initproperty QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
      pushstring "H"
      initproperty QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_UP_KEY")
      pushstring "UP"
      initproperty QName(PackageNamespace(""),"DEFAULT_UP_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
      pushstring "LEFT"
      initproperty QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
      pushstring "DOWN"
      initproperty QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
      pushstring "RIGHT"
      initproperty QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
      pushstring "W"
      initproperty QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
      pushstring "A"
      initproperty QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
      pushstring "S"
      initproperty QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
      findproperty QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
      pushstring "D"
      initproperty QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
      findproperty QName(PackageNamespace(""),"WEAPON_1_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
      setproperty QName(PackageNamespace(""),"WEAPON_1_KEY")
      findproperty QName(PackageNamespace(""),"WEAPON_2_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
      setproperty QName(PackageNamespace(""),"WEAPON_2_KEY")
      findproperty QName(PackageNamespace(""),"WEAPON_3_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
      setproperty QName(PackageNamespace(""),"WEAPON_3_KEY")
      findproperty QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
      setproperty QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
      findproperty QName(PackageNamespace(""),"WEAPON_PREV_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
      setproperty QName(PackageNamespace(""),"WEAPON_PREV_KEY")
      findproperty QName(PackageNamespace(""),"MAP_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
      setproperty QName(PackageNamespace(""),"MAP_KEY")
      findproperty QName(PackageNamespace(""),"JUMP_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
      setproperty QName(PackageNamespace(""),"JUMP_KEY")
      findproperty QName(PackageNamespace(""),"SHOOT_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
      setproperty QName(PackageNamespace(""),"SHOOT_KEY")
      findproperty QName(PackageNamespace(""),"STRAFE_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
      setproperty QName(PackageNamespace(""),"STRAFE_KEY")
      findproperty QName(PackageNamespace(""),"ALT_JUMP_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
      setproperty QName(PackageNamespace(""),"ALT_JUMP_KEY")
      findproperty QName(PackageNamespace(""),"ALT_SHOOT_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
      setproperty QName(PackageNamespace(""),"ALT_SHOOT_KEY")
      findproperty QName(PackageNamespace(""),"ALT_STRAFE_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
      setproperty QName(PackageNamespace(""),"ALT_STRAFE_KEY")
      findproperty QName(PackageNamespace(""),"UP_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_UP_KEY")
      setproperty QName(PackageNamespace(""),"UP_KEY")
      findproperty QName(PackageNamespace(""),"LEFT_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
      setproperty QName(PackageNamespace(""),"LEFT_KEY")
      findproperty QName(PackageNamespace(""),"DOWN_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
      setproperty QName(PackageNamespace(""),"DOWN_KEY")
      findproperty QName(PackageNamespace(""),"RIGHT_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
      setproperty QName(PackageNamespace(""),"RIGHT_KEY")
      findproperty QName(PackageNamespace(""),"ALT_UP_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
      setproperty QName(PackageNamespace(""),"ALT_UP_KEY")
      findproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
      setproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
      findproperty QName(PackageNamespace(""),"ALT_DOWN_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
      setproperty QName(PackageNamespace(""),"ALT_DOWN_KEY")
      findproperty QName(PackageNamespace(""),"ALT_RIGHT_KEY")
      getlex QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
      setproperty QName(PackageNamespace(""),"ALT_RIGHT_KEY")
      findproperty QName(PrivateNamespace(null,"39"),"SLEEP_TIMEOUT")
      pushbyte 30
      initproperty QName(PrivateNamespace(null,"39"),"SLEEP_TIMEOUT")
      findproperty QName(PackageNamespace(""),"fireToggle")
      pushfalse
      setproperty QName(PackageNamespace(""),"fireToggle")
      findproperty QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
      findproperty QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
      findproperty QName(PackageNamespace(""),"firingMode")
      getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
      setproperty QName(PackageNamespace(""),"firingMode")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var _cuteLittleSnails:Boolean = false;
      
      public var _invincible:Boolean = false;
      
      public var _superattack:Boolean = false;
      
      public var noCollide:Boolean = false;
      
      public var hasSetHpBar:Boolean = false;
      
      public var saveOnNextFrame:Boolean = false;
      
      public var _slugMode:Boolean = false;
      
      public var _justHitSteps:Boolean = false;
      
      private var WEAPON_TIMEOUTS:Array;
      
      private var WEAPON_SPEED:Array;
      
      public var pressedRightSinceJump:Boolean = false;
      
      public var pressedLeftSinceJump:Boolean = false;
      
      public var cheatsEnabled:Boolean = false;
      
      public var _easyMode:Boolean = false;
      
      public var _hardMode:Boolean = false;
      
      public var _insaneMode:Boolean = false;
      
      public var gameTime:ShadowNumber;
      
      public var clearTime:ShadowNumber;
      
      private var _jumpPower:CipherInt;
      
      public var _gravityDir:uint = 0;
      
      private var _desiredGravity:uint = 0;
      
      private var _faceDir:int = 0;
      
      public var _runSpeed:CipherInt;
      
      private var _maxSpeed:CipherInt;
      
      private var _gravity:CipherInt;
      
      private var _hidingInShell:Boolean = false;
      
      public var _jumping:Boolean = false;
      
      private var _fallFrames:int = 0;
      
      private var _hideOfsX:int = 0;
      
      private var _hideOfsY:int = 0;
      
      private var _hasWeapon:Array;
      
      private var _hasColdFoot:CheckBool;
      
      private var _hasGravityJump:CheckBool;
      
      private var _hasDevastator:CheckBool;
      
      private var _hasHighJump:CheckBool;
      
      private var _hasGravityShock:CheckBool;
      
      private var _hasShellShield:CheckBool;
      
      private var _hasArmor:CheckBool;
      
      private var _hasTurbo:CheckBool;
      
      private var _justHitHeadOrWall:Boolean = false;
      
      private var _paralyzed:Boolean = false;
      
      private var _snailType:CipherInt;
      
      private var _snailTypePrefix:String = "snail1_";
      
      private var _bulletGroups:PlayerBulletGroups;
      
      private var _currentWeapon:CipherInt;
      
      private var _turboMultiplier:ShadowNumber;
      
      public var _weaponTimeout:ShadowNumber;
      
      private var _curHp:CipherInt;
      
      public var _maxHp:CipherInt;
      
      public var deathFadeInterval:uint;
      
      public var teleportInterval:uint;
      
      public var reviveInterval:uint;
      
      private var _helixFragments:CipherInt;
      
      private var _mostRecentDir:int = 0;
      
      private var _mostRecentUpDown:int = 0;
      
      private var _mostRecentLeftRight:int = 1;
      
      public var hasSeenIsis:Boolean = false;
      
      public var hasSeenHelp:Boolean = false;
      
      public var hasWonGame:Boolean = false;
      
      public var hasWonHardMode:Boolean = false;
      
      public var hasWonInsaneMode:Boolean = false;
      
      public var hasWonBossRush:Boolean = false;
      
      public var hasFullClear:Boolean = false;
      
      public var bestMainTime:ShadowNumber;
      
      public var bestHardTime:ShadowNumber;
      
      public var bestInsaneTime:ShadowNumber;
      
      public var bestBossRushTime:ShadowNumber;
      
      private var _sleepTimeout:Number;
      
      public function Player(param1:PlayerBulletGroups)
      {
         method
         name null
         param QName(PackageNamespace(""),"PlayerBulletGroups")
         returns null
         
         body
         maxstack 7
         localcount 6
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal2
         getlocal0
         pushdouble 0.085
         pushdouble 0.3
         pushdouble 0.17
         newarray 3
         initproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         getlocal0
         pushshort 370
         pushshort 330
         pushbyte 60
         newarray 3
         initproperty QName(PrivateNamespace(null,"39"),"WEAPON_SPEED")
         getlocal0
         pushfalse
         pushfalse
         pushfalse
         newarray 3
         initproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal0
         constructsuper 0
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"_easyMode")
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"_hardMode")
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"_insaneMode")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PackageNamespace(""),"_maxHp")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushshort 1200
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasColdFoot")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasGravityShock")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasHighJump")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasShellShield")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CheckBool")
         pushfalse
         constructprop QName(PackageNamespace(""),"CheckBool"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_hasTurbo")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PrivateNamespace(null,"39"),"REGULAR_JUMP")
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushshort 500
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         pushshort 260
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"CipherInt")
         getlex QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         constructprop QName(PackageNamespace(""),"CipherInt"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_snailType")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 1
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PrivateNamespace(null,"39"),"_turboMultiplier")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PackageNamespace(""),"_weaponTimeout")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PackageNamespace(""),"bestBossRushTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PackageNamespace(""),"bestMainTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PackageNamespace(""),"bestHardTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PackageNamespace(""),"gameTime")
         getlocal0
         findpropstrict QName(PackageNamespace(""),"ShadowNumber")
         pushbyte 0
         constructprop QName(PackageNamespace(""),"ShadowNumber"), 1
         initproperty QName(PackageNamespace(""),"clearTime")
         getlocal0
         getlex QName(PrivateNamespace(null,"39"),"SLEEP_TIMEOUT")
         initproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"39"),"_bulletGroups")
         getlocal0
         pushfalse
         initproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         getlocal0
         pushfalse
         initproperty QName(PackageNamespace(""),"hasSetHpBar")
         getlex QName(PackageNamespace(""),"maxVelocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"maxVelocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         coerce QName(PackageNamespace(""),"SaveData")
         setlocal3
         getlocal3
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal 4
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0261
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setEasyMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHardMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setInsaneMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PrivateNamespace(null,"39"),"setHasTurbo"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHighJump"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHasDevastator"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHasGravityShock"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHasShellShield"), 1
         getlocal0
         pushbyte -1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         getlocal0
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"value")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTX")
         pushbyte 16
         multiply
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTY")
         pushbyte 16
         multiply
         initproperty QName(PackageNamespace(""),"y")
         jump ofs0a30
         ofs0261:
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setEasyMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setHardMode"), 1
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"setInsaneMode"), 1
         getlocal3
         pushstring "savex"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0291
         getlocal 4
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartX"), 0
         pushbyte 16
         multiply
         setproperty Multiname("savex",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0291:
         getlocal3
         pushstring "savey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs02af
         getlocal 4
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartY"), 0
         pushbyte 16
         multiply
         setproperty Multiname("savey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs02af:
         getlocal3
         pushstring "gameTime"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs02c2
         getlocal 4
         pushbyte 0
         setproperty Multiname("gameTime",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs02c2:
         getlocal3
         pushstring "easyMode"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs02d4
         getlocal 4
         pushfalse
         setproperty Multiname("easyMode",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs02d4:
         getlocal3
         pushstring "hardMode"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs02e6
         getlocal 4
         pushfalse
         setproperty Multiname("hardMode",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs02e6:
         getlocal3
         pushstring "insaneMode"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs02f8
         getlocal 4
         pushfalse
         setproperty Multiname("insaneMode",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs02f8:
         getlocal3
         pushstring "hasDevastator"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs030a
         getlocal 4
         pushfalse
         setproperty Multiname("hasDevastator",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs030a:
         getlocal3
         pushstring "hasGravityShock"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs031c
         getlocal 4
         pushfalse
         setproperty Multiname("hasGravityShock",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs031c:
         getlocal3
         pushstring "hasShellShield"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs032e
         getlocal 4
         pushfalse
         setproperty Multiname("hasShellShield",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs032e:
         getlocal3
         pushstring "hasTurbo"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0340
         getlocal 4
         pushfalse
         setproperty Multiname("hasTurbo",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0340:
         getlocal3
         pushstring "toggleFire"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0352
         getlocal 4
         pushfalse
         setproperty Multiname("toggleFire",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0352:
         getlocal3
         pushstring "hasHighJump"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0364
         getlocal 4
         pushfalse
         setproperty Multiname("hasHighJump",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0364:
         getlocal3
         pushstring "hasWeaponZero"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0376
         getlocal 4
         pushfalse
         setproperty Multiname("hasWeaponZero",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0376:
         getlocal3
         pushstring "hasWeaponOne"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0388
         getlocal 4
         pushfalse
         setproperty Multiname("hasWeaponOne",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0388:
         getlocal3
         pushstring "hasWeaponTwo"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs039a
         getlocal 4
         pushfalse
         setproperty Multiname("hasWeaponTwo",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs039a:
         getlocal3
         pushstring "helixFragments"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs03ad
         getlocal 4
         pushbyte 0
         setproperty Multiname("helixFragments",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs03ad:
         getlocal3
         pushstring "lastWeapon"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs03c0
         getlocal 4
         pushbyte -1
         setproperty Multiname("lastWeapon",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs03c0:
         getlocal3
         pushstring "snailType"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs03d4
         getlocal 4
         getlex QName(PackageNamespace(""),"SNAILTYPE_NORMAL")
         setproperty Multiname("snailType",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs03d4:
         getlocal3
         pushstring "hideTab"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs03e6
         getlocal 4
         pushfalse
         setproperty Multiname("hideTab",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs03e6:
         getlocal3
         pushstring "hideMiniMap"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs03f8
         getlocal 4
         pushfalse
         setproperty Multiname("hideMiniMap",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs03f8:
         getlocal3
         pushstring "hasGoodEnding"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs040a
         getlocal 4
         pushfalse
         setproperty Multiname("hasGoodEnding",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs040a:
         getlocal3
         pushstring "mapKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs041e
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_MAP_KEY")
         setproperty Multiname("mapKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs041e:
         getlocal3
         pushstring "jumpKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0432
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_JUMP_KEY")
         setproperty Multiname("jumpKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0432:
         getlocal3
         pushstring "shootKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0446
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_SHOOT_KEY")
         setproperty Multiname("shootKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0446:
         getlocal3
         pushstring "strafeKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs045a
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_STRAFE_KEY")
         setproperty Multiname("strafeKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs045a:
         getlocal3
         pushstring "upKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs046e
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_UP_KEY")
         setproperty Multiname("upKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs046e:
         getlocal3
         pushstring "leftKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0482
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_LEFT_KEY")
         setproperty Multiname("leftKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0482:
         getlocal3
         pushstring "downKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0496
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_DOWN_KEY")
         setproperty Multiname("downKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0496:
         getlocal3
         pushstring "rightKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs04aa
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_RIGHT_KEY")
         setproperty Multiname("rightKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs04aa:
         getlocal3
         pushstring "jumpAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs04be
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_JUMP_KEY")
         setproperty Multiname("jumpAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs04be:
         getlocal3
         pushstring "shootAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs04d2
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_SHOOT_KEY")
         setproperty Multiname("shootAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs04d2:
         getlocal3
         pushstring "strafeAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs04e6
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_STRAFE_KEY")
         setproperty Multiname("strafeAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs04e6:
         getlocal3
         pushstring "upAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs04fa
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_UP_KEY")
         setproperty Multiname("upAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs04fa:
         getlocal3
         pushstring "leftAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs050e
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_LEFT_KEY")
         setproperty Multiname("leftAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs050e:
         getlocal3
         pushstring "downAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0522
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_DOWN_KEY")
         setproperty Multiname("downAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0522:
         getlocal3
         pushstring "rightAltKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0536
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_ALT_RIGHT_KEY")
         setproperty Multiname("rightAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0536:
         getlocal3
         pushstring "weap1Key"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs054a
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_1_KEY")
         setproperty Multiname("weap1Key",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs054a:
         getlocal3
         pushstring "weap2Key"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs055e
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_2_KEY")
         setproperty Multiname("weap2Key",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs055e:
         getlocal3
         pushstring "weap3Key"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0572
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_3_KEY")
         setproperty Multiname("weap3Key",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0572:
         getlocal3
         pushstring "weapNextKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs0586
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_NEXT_KEY")
         setproperty Multiname("weapNextKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0586:
         getlocal3
         pushstring "weapPrevKey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs059a
         getlocal 4
         getlex QName(PackageNamespace(""),"DEFAULT_WEAPON_PREV_KEY")
         setproperty Multiname("weapPrevKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs059a:
         getlocal0
         getlocal3
         pushstring "hasWonGame"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         initproperty QName(PackageNamespace(""),"hasWonGame")
         getlocal0
         getlocal3
         pushstring "hasWonHardMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         initproperty QName(PackageNamespace(""),"hasWonHardMode")
         getlocal0
         getlocal3
         pushstring "hasWonInsaneMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         initproperty QName(PackageNamespace(""),"hasWonInsaneMode")
         getlocal0
         getlocal3
         pushstring "hasFullClear"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         initproperty QName(PackageNamespace(""),"hasFullClear")
         getlocal0
         getlocal3
         pushstring "hasWonBossRush"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         initproperty QName(PackageNamespace(""),"hasWonBossRush")
         getlex QName(PackageNamespace(""),"PlayState")
         getlocal3
         pushstring "hideTab"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty QName(PackageNamespace(""),"hideTab")
         getlex QName(PackageNamespace(""),"PlayState")
         getlocal3
         pushstring "hideMiniMap"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty QName(PackageNamespace(""),"hideMiniMap")
         getlex QName(PackageNamespace(""),"PlayState")
         getlocal3
         pushstring "hasGoodEnding"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty QName(PackageNamespace(""),"hasGoodEnding")
         getlocal0
         getlocal3
         pushstring "easyMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setEasyMode"), 1
         getlocal0
         getlocal3
         pushstring "hardMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHardMode"), 1
         getlocal0
         getlocal3
         pushstring "insaneMode"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setInsaneMode"), 1
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         convert_b
         dup
         iffalse ofs0638
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_insaneMode")
         not
         ofs0638:
         initproperty QName(PackageNamespace(""),"_slugMode")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0664
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         pushbyte 0
         pushdouble 0.046
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         pushbyte 1
         pushdouble 0.23
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         pushbyte 2
         pushdouble 0.13
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs0664:
         getlocal3
         pushstring "maxHp"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iftrue ofs067e
         getlocal 4
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         setproperty Multiname("maxHp",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         ofs067e:
         getlocal0
         getlocal 4
         getproperty Multiname("maxHp",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         getlocal0
         pushint 999999999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getlocal 4
         getproperty Multiname("bestMainTime",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getlocal 4
         getproperty Multiname("bestHardTime",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"bestBossRushTime")
         getlocal 4
         getproperty Multiname("bestBossRushTime",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlocal 4
         getproperty Multiname("bestInsaneTime",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         getlocal 4
         getproperty Multiname("gameTime",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         pushbyte 0
         getlocal3
         pushstring "hasWeaponZero"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasWeapon"), 2
         getlocal0
         pushbyte 1
         getlocal3
         pushstring "hasWeaponOne"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasWeapon"), 2
         getlocal0
         pushbyte 2
         getlocal3
         pushstring "hasWeaponTwo"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasWeapon"), 2
         getlocal0
         getlocal3
         pushstring "hasTurbo"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PrivateNamespace(null,"39"),"setHasTurbo"), 1
         getlocal3
         pushstring "toggleFire"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         iffalse ofs071f
         findproperty QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         setproperty QName(PackageNamespace(""),"firingMode")
         jump ofs0728
         ofs071f:
         findproperty QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         setproperty QName(PackageNamespace(""),"firingMode")
         ofs0728:
         getlocal0
         getlocal3
         pushstring "hasHighJump"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHighJump"), 1
         getlocal0
         getlocal3
         pushstring "hasDevastator"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasDevastator"), 1
         getlocal0
         getlocal3
         pushstring "hasGravityShock"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasGravityShock"), 1
         getlocal0
         getlocal3
         pushstring "hasShellShield"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         callpropvoid QName(PackageNamespace(""),"setHasShellShield"), 1
         getlocal0
         getlocal 4
         getproperty Multiname("lastWeapon",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         getlocal0
         getlocal 4
         getproperty Multiname("helixFragments",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         getlocal0
         getlocal 4
         getproperty Multiname("snailType",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         getlocal0
         getlocal3
         pushstring "hasSeenIsis"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         initproperty QName(PackageNamespace(""),"hasSeenIsis")
         getlocal0
         getlocal3
         pushstring "hasSeenHelp"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         initproperty QName(PackageNamespace(""),"hasSeenHelp")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getlocal3
         pushstring "bossesKilledOne"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getlocal3
         pushstring "bossesKilledTwo"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getlocal3
         pushstring "bossesKilledThree"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getlocal3
         pushstring "bossesKilledFour"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         greaterthan
         dup
         iftrue ofs07f8
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         greaterthan
         ofs07f8:
         iffalse ofs0818
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockFirstOfFour"), 0
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockStinkyToe"), 0
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockGravityBattle"), 0
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockVictory"), 0
         ofs0818:
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs082c
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockHomeless"), 0
         ofs082c:
         getlocal0
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs0840
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockHappyEnding"), 0
         ofs0840:
         getlocal0
         getproperty QName(PackageNamespace(""),"bestBossRushTime")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs0854
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockTheGauntlet"), 0
         ofs0854:
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenIsis")
         iffalse ofs0863
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockPilgrim"), 0
         ofs0863:
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs087f
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs087f:
         iffalse ofs088a
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockFirstOfFour"), 0
         ofs088a:
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs08a6
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs08a6:
         iffalse ofs08b1
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockStinkyToe"), 0
         ofs08b1:
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs08cd
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs08cd:
         iffalse ofs08d8
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockGravityBattle"), 0
         ofs08d8:
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs08f4
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         not
         ofs08f4:
         iffalse ofs08ff
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockVictory"), 0
         ofs08ff:
         findproperty QName(PackageNamespace(""),"MAP_KEY")
         getlocal 4
         getproperty Multiname("mapKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"MAP_KEY")
         findproperty QName(PackageNamespace(""),"JUMP_KEY")
         getlocal 4
         getproperty Multiname("jumpKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"JUMP_KEY")
         findproperty QName(PackageNamespace(""),"SHOOT_KEY")
         getlocal 4
         getproperty Multiname("shootKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"SHOOT_KEY")
         findproperty QName(PackageNamespace(""),"STRAFE_KEY")
         getlocal 4
         getproperty Multiname("strafeKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"STRAFE_KEY")
         findproperty QName(PackageNamespace(""),"UP_KEY")
         getlocal 4
         getproperty Multiname("upKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"UP_KEY")
         findproperty QName(PackageNamespace(""),"LEFT_KEY")
         getlocal 4
         getproperty Multiname("leftKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"LEFT_KEY")
         findproperty QName(PackageNamespace(""),"DOWN_KEY")
         getlocal 4
         getproperty Multiname("downKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"DOWN_KEY")
         findproperty QName(PackageNamespace(""),"RIGHT_KEY")
         getlocal 4
         getproperty Multiname("rightKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"RIGHT_KEY")
         findproperty QName(PackageNamespace(""),"ALT_JUMP_KEY")
         getlocal 4
         getproperty Multiname("jumpAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"ALT_JUMP_KEY")
         findproperty QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         getlocal 4
         getproperty Multiname("shootAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         findproperty QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         getlocal 4
         getproperty Multiname("strafeAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         findproperty QName(PackageNamespace(""),"ALT_UP_KEY")
         getlocal 4
         getproperty Multiname("upAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"ALT_UP_KEY")
         findproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
         getlocal 4
         getproperty Multiname("leftAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"ALT_LEFT_KEY")
         findproperty QName(PackageNamespace(""),"ALT_DOWN_KEY")
         getlocal 4
         getproperty Multiname("downAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"ALT_DOWN_KEY")
         findproperty QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         getlocal 4
         getproperty Multiname("rightAltKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_1_KEY")
         getlocal 4
         getproperty Multiname("weap1Key",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"WEAPON_1_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_2_KEY")
         getlocal 4
         getproperty Multiname("weap2Key",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"WEAPON_2_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_3_KEY")
         getlocal 4
         getproperty Multiname("weap3Key",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"WEAPON_3_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         getlocal 4
         getproperty Multiname("weapNextKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         findproperty QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         getlocal 4
         getproperty Multiname("weapPrevKey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         setproperty QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         findproperty QName(PackageNamespace(""),"x")
         getlocal 4
         getproperty Multiname("savex",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal 4
         getproperty Multiname("savey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"startFromTown")
         iffalse ofs0a21
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartX"), 0
         pushbyte 16
         multiply
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartY"), 0
         pushbyte 16
         multiply
         initproperty QName(PackageNamespace(""),"y")
         ofs0a21:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"startFromTown")
         iftrue ofs0a30
         getlocal0
         pushtrue
         initproperty QName(PackageNamespace(""),"saveOnNextFrame")
         ofs0a30:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         initproperty QName(PackageNamespace(""),"_slugMode")
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"SnailySnail")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"39"),"SPRITE_WIDTH")
         getlex QName(PrivateNamespace(null,"39"),"SPRITE_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         pushbyte 0
         setlocal 5
         jump ofs0bbd
         ofs0a5d:
         label
         getlocal 5
         pushbyte 20
         multiply
         convert_i
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0a76
         getlocal2
         pushbyte 4
         pushbyte 20
         multiply
         add
         convert_i
         setlocal2
         ofs0a76:
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_floor_right_move"
         add
         pushbyte 0
         getlocal2
         add
         pushbyte 1
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_floor_right_hide"
         add
         pushbyte 3
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_up_move"
         add
         pushbyte 4
         getlocal2
         add
         pushbyte 5
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_up_hide"
         add
         pushbyte 7
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_down_move"
         add
         pushbyte 8
         getlocal2
         add
         pushbyte 9
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_down_hide"
         add
         pushbyte 11
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_ceil_right_move"
         add
         pushbyte 12
         getlocal2
         add
         pushbyte 13
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_ceil_right_hide"
         add
         pushbyte 15
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal 5
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_death"
         add
         pushbyte 16
         getlocal2
         add
         pushbyte 17
         getlocal2
         add
         pushbyte 18
         getlocal2
         add
         pushbyte 19
         getlocal2
         add
         newarray 4
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         inclocal_i 5
         ofs0bbd:
         getlocal 5
         pushbyte 4
         iflt ofs0a5d
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushstring "floor_right_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hpPerHeart() : int
      {
         trait method QName(PackageNamespace(""),"hpPerHeart")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         iffalse ofs000d
         pushbyte 8
         returnvalue
         ofs000d:
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         iffalse ofs0018
         pushbyte 2
         returnvalue
         ofs0018:
         pushbyte 4
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function destroy() : void
      {
         trait method QName(PackageNamespace(""),"destroy")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"deathFadeInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"reviveInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_bulletGroups")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasColdFoot")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasGravityShock")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasHighJump")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasShellShield")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasTurbo")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"_maxHp")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_snailType")
         getlocal0
         pushnull
         setproperty QName(PrivateNamespace(null,"39"),"_turboMultiplier")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"_weaponTimeout")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestBossRushTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestMainTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestHardTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"bestInsaneTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"gameTime")
         getlocal0
         pushnull
         setproperty QName(PackageNamespace(""),"clearTime")
         getlocal0
         callsupervoid QName(PackageNamespace(""),"destroy"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleMenu() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleMenu")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "P"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "ESCAPE"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0024:
         dup
         iffalse ofs002e
         pop
         getlex QName(PackageNamespace(""),"dead")
         not
         ofs002e:
         dup
         iffalse ofs003b
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isBossRushComplete")
         not
         ofs003b:
         dup
         iffalse ofs0048
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isGameComplete")
         not
         ofs0048:
         dup
         iffalse ofs0053
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         not
         ofs0053:
         iffalse ofs007d
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_SUBSCREEN")
         ifne ofs0071
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"toggleMapSize"), 0
         ofs0071:
         getlex QName(PackageNamespace(""),"PlayState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_MENU")
         setproperty QName(PackageNamespace(""),"realState")
         ofs007d:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleHelp() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleHelp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "F1"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iffalse ofs001b
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"cheatsEnabled")
         not
         ofs001b:
         iffalse ofs0029
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"controlHelp")
         callpropvoid QName(PackageNamespace(""),"toggle"), 0
         ofs0029:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleSkyFishCheat() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleSkyFishCheat")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         convert_b
         dup
         iftrue ofs0019
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"area")
         pushbyte 0
         equals
         not
         ofs0019:
         iffalse ofs001e
         returnvoid
         ofs001e:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushbyte 6
         callproperty QName(PackageNamespace(""),"getLastKeys"), 1
         pushstring "SKYFIS"
         equals
         dup
         iffalse ofs008a
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iftrue ofs005c
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs005c:
         dup
         iftrue ofs0073
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0073:
         dup
         iftrue ofs008a
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs008a:
         iffalse ofs00da
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playSlugMode"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         callpropvoid QName(PackageNamespace(""),"saveNoCoords"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushstring "- SKYFISH FLIES AGAIN -"
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         ofs00da:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_handleSlugCheat() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_handleSlugCheat")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 7
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal1
         pushbyte 0
         setlocal2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         not
         dup
         iftrue ofs001f
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"started")
         convert_b
         ofs001f:
         dup
         iftrue ofs002a
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         convert_b
         ofs002a:
         iffalse ofs002f
         returnvoid
         ofs002f:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushbyte 4
         callproperty QName(PackageNamespace(""),"getLastKeys"), 1
         pushstring "SLUG"
         ifne ofs0247
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playSlugMode"), 0
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         divide
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"_slugMode")
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"_hardMode")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         multiply
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getlocal0
         callproperty QName(PackageNamespace(""),"getMaxHp"), 0
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         getlocal0
         pushint 999999999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         pushbyte 0
         pushdouble 0.046
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         pushbyte 1
         pushdouble 0.23
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         pushbyte 2
         pushdouble 0.13
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         findproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_animations")
         findpropstrict QName(PackageNamespace(""),"Array")
         constructprop QName(PackageNamespace(""),"Array"), 0
         initproperty QName(ProtectedNamespace("org.flixel:FlxSprite"),"_animations")
         pushbyte 0
         setlocal1
         jump ofs021c
         ofs00c6:
         label
         getlocal1
         pushbyte 20
         multiply
         convert_i
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs00de
         getlocal2
         pushbyte 4
         pushbyte 20
         multiply
         add
         convert_i
         setlocal2
         ofs00de:
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_floor_right_move"
         add
         pushbyte 0
         getlocal2
         add
         pushbyte 1
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_floor_right_hide"
         add
         pushbyte 3
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_up_move"
         add
         pushbyte 4
         getlocal2
         add
         pushbyte 5
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_up_hide"
         add
         pushbyte 7
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_down_move"
         add
         pushbyte 8
         getlocal2
         add
         pushbyte 9
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_rwall_down_hide"
         add
         pushbyte 11
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_ceil_right_move"
         add
         pushbyte 12
         getlocal2
         add
         pushbyte 13
         getlocal2
         add
         newarray 2
         pushbyte 3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_ceil_right_hide"
         add
         pushbyte 15
         getlocal2
         add
         newarray 1
         pushbyte 9
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "snail"
         getlocal1
         pushbyte 1
         add
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_death"
         add
         pushbyte 16
         getlocal2
         add
         pushbyte 17
         getlocal2
         add
         pushbyte 18
         getlocal2
         add
         pushbyte 19
         getlocal2
         add
         newarray 4
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         inclocal_i 1
         ofs021c:
         getlocal1
         pushbyte 4
         iflt ofs00c6
         getlocal0
         pushstring "death"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_snailType")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"areaName")
         pushstring "- OMEGA SLUG ENGAGE -"
         callpropvoid QName(PackageNamespace(""),"setArea"), 1
         ofs0247:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_hideInShell() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_hideInShell")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs000b
         returnvoid
         ofs000b:
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         equals
         dup
         iffalse ofs001e
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedShoot"), 0
         convert_b
         ofs001e:
         iffalse ofs0023
         returnvoid
         ofs0023:
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         equals
         dup
         iffalse ofs0036
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         convert_b
         ofs0036:
         iffalse ofs003b
         returnvoid
         ofs003b:
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         convert_b
         dup
         iftrue ofs004d
         pop
         getlex QName(PackageNamespace(""),"dead")
         convert_b
         ofs004d:
         iffalse ofs0052
         returnvoid
         ofs0052:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         equals
         dup
         iffalse ofs0066
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedDown"), 0
         convert_b
         ofs0066:
         dup
         iftrue ofs0080
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_UP")
         equals
         dup
         iffalse ofs0080
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedUp"), 0
         convert_b
         ofs0080:
         iffalse ofs00af
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs0096
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs0096:
         dup
         iftrue ofs00a1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         convert_b
         ofs00a1:
         iffalse ofs00af
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         not
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs00af:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         equals
         dup
         iffalse ofs00c3
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedLeft"), 0
         convert_b
         ofs00c3:
         dup
         iftrue ofs00dd
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         equals
         dup
         iffalse ofs00dd
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedRight"), 0
         convert_b
         ofs00dd:
         iffalse ofs010c
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         dup
         iffalse ofs00f3
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         ofs00f3:
         dup
         iftrue ofs00fe
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         convert_b
         ofs00fe:
         iffalse ofs010c
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         not
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs010c:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_shoot() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_shoot")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_TOGGLE")
         ifne ofs0030
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedShoot"), 0
         convert_b
         dup
         iffalse ofs001e
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasAnyWeapon"), 0
         convert_b
         ofs001e:
         iffalse ofs002c
         findproperty QName(PackageNamespace(""),"fireToggle")
         getlex QName(PackageNamespace(""),"fireToggle")
         not
         setproperty QName(PackageNamespace(""),"fireToggle")
         ofs002c:
         jump ofs003b
         ofs0030:
         findproperty QName(PackageNamespace(""),"fireToggle")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedShoot"), 0
         setproperty QName(PackageNamespace(""),"fireToggle")
         ofs003b:
         getlex QName(PackageNamespace(""),"fireToggle")
         convert_b
         dup
         iffalse ofs004a
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         not
         ofs004a:
         iffalse ofs0053
         getlocal0
         callpropvoid QName(PackageNamespace(""),"shootCurrentWeapon"), 0
         ofs0053:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedShoot"), 0
         convert_b
         dup
         iffalse ofs0064
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         convert_b
         ofs0064:
         dup
         iffalse ofs0070
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasAnyWeapon"), 0
         convert_b
         ofs0070:
         iffalse ofs007f
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         callpropvoid QName(PackageNamespace(""),"shootCurrentWeapon"), 0
         ofs007f:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_switchWeapons() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_switchWeapons")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_1_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs001a
         getlocal0
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs001a:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_2_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs0032
         getlocal0
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs0032:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_3_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs004a
         getlocal0
         pushbyte 2
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs004a:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs0060
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"39"),"switchToNextWeapon"), 0
         ofs0060:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         iffalse ofs0076
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"39"),"switchToPrevWeapon"), 0
         ofs0076:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_performGravityJump() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_performGravityJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs0016
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedJump"), 0
         convert_b
         ofs0016:
         dup
         iffalse ofs0021
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         convert_b
         ofs0021:
         iffalse ofs002a
         getlocal0
         callpropvoid QName(PackageNamespace(""),"performGravityJump"), 0
         ofs002a:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function checkInput_move() : void
      {
         trait method QName(PrivateNamespace(null,"39"),"checkInput_move")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"noCollide")
         iffalse ofs0018
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"noCollide")
         getlex QName(PackageNamespace(""),"acceleration")
         pushshort 1200
         setproperty QName(PackageNamespace(""),"y")
         ofs0018:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedUp"), 0
         iffalse ofs002f
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_UP")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_UP")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         ofs002f:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedDown"), 0
         iffalse ofs0046
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         ofs0046:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedLeft"), 0
         iffalse ofs005d
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentLeftRight")
         ofs005d:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedRight"), 0
         iffalse ofs0074
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentLeftRight")
         ofs0074:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         convert_b
         dup
         iffalse ofs0084
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         not
         ofs0084:
         convert_b
         setlocal1
         jump ofs044b
         ofs008a:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         dup
         iffalse ofs00a5
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs00a5:
         iffalse ofs0134
         getlocal1
         iffalse ofs00b4
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs00b4:
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         dup
         iftrue ofs00f1
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         ofs00f1:
         dup
         iffalse ofs010a
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs0109
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0109:
         not
         ofs010a:
         iffalse ofs011a
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         jump ofs0128
         ofs011a:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"x")
         ofs0128:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs01d6
         ofs0134:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         dup
         iffalse ofs0146
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs0146:
         iffalse ofs01d6
         getlocal1
         iffalse ofs0155
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs0155:
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         dup
         iftrue ofs0198
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         ofs0198:
         dup
         iffalse ofs01b1
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs01b0
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs01b0:
         not
         ofs01b1:
         iffalse ofs01c1
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         jump ofs01ce
         ofs01c1:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"x")
         ofs01ce:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs01d6:
         jump ofs04aa
         ofs01da:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         dup
         iffalse ofs01f5
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs01f5:
         iffalse ofs0284
         getlocal1
         iffalse ofs0204
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs0204:
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         dup
         iftrue ofs0241
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         decrement
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         ofs0241:
         dup
         iffalse ofs025a
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs0259
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0259:
         not
         ofs025a:
         iffalse ofs026a
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         jump ofs0278
         ofs026a:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"x")
         ofs0278:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs0326
         ofs0284:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         dup
         iffalse ofs0296
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs0296:
         iffalse ofs0326
         getlocal1
         iffalse ofs02a5
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs02a5:
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         pushbyte 3
         add
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         dup
         iftrue ofs02e8
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         pushbyte 4
         subtract
         callproperty QName(PackageNamespace(""),"solidAt"), 2
         convert_b
         ofs02e8:
         dup
         iffalse ofs0301
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs0300
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0300:
         not
         ofs0301:
         iffalse ofs0311
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         jump ofs031e
         ofs0311:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"x")
         ofs031e:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs0326:
         jump ofs04aa
         ofs032a:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iffalse ofs0345
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs0345:
         iffalse ofs0377
         getlocal1
         iffalse ofs0354
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs0354:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs03b6
         ofs0377:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         dup
         iffalse ofs0389
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs0389:
         iffalse ofs03b6
         getlocal1
         iffalse ofs0398
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs0398:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs03b6:
         jump ofs04aa
         ofs03ba:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iffalse ofs03d5
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs03d5:
         iffalse ofs0407
         getlocal1
         iffalse ofs03e4
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs03e4:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs0446
         ofs0407:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         dup
         iffalse ofs0419
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         not
         ofs0419:
         iffalse ofs0446
         getlocal1
         iffalse ofs0428
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs0428:
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs0446:
         label
         jump ofs04aa
         ofs044b:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal2
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal2
         ifstrictne ofs045e
         pushbyte 0
         jump ofs0494
         ofs045e:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal2
         ifstrictne ofs046c
         pushbyte 1
         jump ofs0494
         ofs046c:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal2
         ifstrictne ofs047a
         pushbyte 2
         jump ofs0494
         ofs047a:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal2
         ifstrictne ofs0488
         pushbyte 3
         jump ofs0494
         ofs0488:
         jump ofs0492
         pushbyte 4
         jump ofs0492
         ofs0492:
         pushbyte 4
         ofs0494:
         kill 2
         lookupswitch ofs0446, [ofs008a, ofs01da, ofs032a, ofs03ba, ofs0446]
         ofs04aa:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_map() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_map")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "TAB"
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"MAP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0024:
         dup
         iffalse ofs002f
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         not
         ofs002f:
         dup
         iffalse ofs0039
         pop
         getlex QName(PackageNamespace(""),"dead")
         not
         ofs0039:
         dup
         iffalse ofs0046
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isBossRushComplete")
         not
         ofs0046:
         dup
         iffalse ofs0053
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"isGameComplete")
         not
         ofs0053:
         iffalse ofs0061
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"toggleMapSize"), 0
         ofs0061:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function checkInput_jump() : void
      {
         trait method QName(PackageNamespace(""),"checkInput_jump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedJump"), 0
         iffalse ofs0026
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         iffalse ofs0019
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         ofs0019:
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iftrue ofs0026
         getlocal0
         callpropvoid QName(PackageNamespace(""),"doJump"), 0
         ofs0026:
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         convert_b
         dup
         iffalse ofs0037
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs0037:
         iffalse ofs0157
         jump ofs00f8
         ofs003f:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         ifngt ofs0069
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         setproperty QName(PackageNamespace(""),"y")
         ofs0069:
         jump ofs0157
         ofs006d:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         ifnlt ofs0097
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         setproperty QName(PackageNamespace(""),"y")
         ofs0097:
         jump ofs0157
         ofs009b:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs00c5
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         setproperty QName(PackageNamespace(""),"x")
         ofs00c5:
         jump ofs0157
         ofs00c9:
         label
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs00f3
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"Utility")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         pushbyte 4
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         callproperty QName(PackageNamespace(""),"integrate"), 4
         setproperty QName(PackageNamespace(""),"x")
         ofs00f3:
         label
         jump ofs0157
         ofs00f8:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs010b
         pushbyte 0
         jump ofs0141
         ofs010b:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs0119
         pushbyte 1
         jump ofs0141
         ofs0119:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs0127
         pushbyte 2
         jump ofs0141
         ofs0127:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs0135
         pushbyte 3
         jump ofs0141
         ofs0135:
         jump ofs013f
         pushbyte 4
         jump ofs013f
         ofs013f:
         pushbyte 4
         ofs0141:
         kill 1
         lookupswitch ofs00f3, [ofs003f, ofs006d, ofs009b, ofs00c9, ofs00f3]
         ofs0157:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"saveOnNextFrame")
         iffalse ofs0034
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setSaveCoords"), 3
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"saveOnNextFrame")
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"hasSetHpBar")
         getlocal0
         pushshort 9999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         ofs0034:
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSetHpBar")
         pushfalse
         ifne ofs0056
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"hasSetHpBar")
         getlocal0
         pushshort 9999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         ofs0056:
         getlex QName(PackageNamespace(""),"facing")
         pushbyte 10
         ifngt ofs0068
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs0068:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         equals
         dup
         iftrue ofs0088
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_SUBSCREEN")
         equals
         ofs0088:
         iffalse ofs009b
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_map"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleMenu"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_switchWeapons"), 0
         ofs009b:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs00ac
         returnvoid
         ofs00ac:
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedLeft"), 0
         iffalse ofs00e8
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"pressedLeftSinceJump")
         jump ofs010d
         ofs00e8:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedRight"), 0
         iffalse ofs00fa
         getlocal0
         pushtrue
         setproperty QName(PackageNamespace(""),"pressedRightSinceJump")
         jump ofs010d
         ofs00fa:
         getlocal0
         callproperty QName(PackageNamespace(""),"justPressedJump"), 0
         iffalse ofs010d
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"pressedLeftSinceJump")
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"pressedRightSinceJump")
         ofs010d:
         getlex QName(PackageNamespace(""),"dead")
         iftrue ofs0119
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"39"),"fixGravity"), 0
         ofs0119:
         getlex QName(PackageNamespace(""),"dead")
         not
         dup
         iffalse ofs0128
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         not
         ofs0128:
         iffalse ofs0154
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleHelp"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleSkyFishCheat"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_handleSlugCheat"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_hideInShell"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_shoot"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_performGravityJump"), 0
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"39"),"checkInput_move"), 0
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkInput_jump"), 0
         ofs0154:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs0166
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0166:
         dup
         iftrue ofs0172
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs0172:
         dup
         iftrue ofs017e
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs017e:
         dup
         iftrue ofs018a
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedShoot"), 0
         convert_b
         ofs018a:
         dup
         iftrue ofs0196
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedStrafe"), 0
         convert_b
         ofs0196:
         dup
         iftrue ofs01a2
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         convert_b
         ofs01a2:
         dup
         iftrue ofs01b0
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         convert_b
         ofs01b0:
         iffalse ofs01bb
         getlocal0
         getlex QName(PrivateNamespace(null,"39"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         ofs01bb:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         pushbyte 0
         lessequals
         dup
         iffalse ofs01e1
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"zzz")
         getproperty QName(PackageNamespace(""),"visible")
         not
         ofs01e1:
         dup
         iffalse ofs01ec
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         not
         ofs01ec:
         iffalse ofs0207
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"zzz")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getlex QName(PrivateNamespace(null,"39"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         ofs0207:
         getlex QName(PackageNamespace(""),"dead")
         iftrue ofs021e
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         callpropvoid QName(PackageNamespace(""),"checkFakeBounds"), 2
         ofs021e:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_invincible")
         convert_b
         dup
         iftrue ofs0012
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"noCollide")
         convert_b
         ofs0012:
         dup
         iftrue ofs001d
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         convert_b
         ofs001d:
         iffalse ofs0022
         returnvoid
         ofs0022:
         getlocal0
         getlex QName(PrivateNamespace(null,"39"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         iffalse ofs0053
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs0053
         findpropstrict QName(PackageNamespace(""),"flicker")
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"flicker"), 1
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playEnemyPingOffArmor"), 0
         returnvoid
         ofs0053:
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         convert_b
         dup
         iftrue ofs0065
         pop
         getlex QName(PackageNamespace(""),"dead")
         convert_b
         ofs0065:
         iffalse ofs006a
         returnvoid
         ofs006a:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs008a
         getlocal1
         pushbyte 2
         divide
         convert_d
         setlocal1
         getlocal1
         pushbyte 1
         ifnlt ofs008a
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playEnemyPingOffArmor"), 0
         returnvoid
         ofs008a:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal1
         subtract
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlex QName(PackageNamespace(""),"dead")
         iffalse ofs010c
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playDeath"), 0
         getlocal0
         pushstring "death"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         equals
         iffalse ofs00c3
         pushbyte 110
         convert_d
         jump ofs00c6
         ofs00c3:
         pushbyte -110
         convert_d
         ofs00c6:
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushshort -300
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"dead")
         pushtrue
         initproperty QName(PackageNamespace(""),"dead")
         findproperty QName(PackageNamespace(""),"solid")
         pushfalse
         initproperty QName(PackageNamespace(""),"solid")
         jump ofs011c
         ofs010c:
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playHurt"), 0
         findpropstrict QName(PackageNamespace(""),"flicker")
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"flicker"), 1
         ofs011c:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function heal(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"heal")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal1
         add
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function kill() : void
      {
         trait method QName(PackageNamespace(""),"kill")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"dead")
         iffalse ofs000a
         returnvoid
         ofs000a:
         getlocal0
         getlex QName(PrivateNamespace(null,"39"),"SLEEP_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"39"),"_sleepTimeout")
         findproperty QName(PackageNamespace(""),"dead")
         pushtrue
         initproperty QName(PackageNamespace(""),"dead")
         findproperty QName(PackageNamespace(""),"solid")
         pushfalse
         initproperty QName(PackageNamespace(""),"solid")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs007b
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"going")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"started")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"now")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"value")
         ofs007b:
         getlocal0
         getproperty QName(PackageNamespace(""),"_invincible")
         iftrue ofs00ba
         getlex QName(PackageNamespace(""),"Utility")
         pushstring "setting timer for kill()"
         callpropvoid QName(PackageNamespace(""),"stackTrace"), 1
         getlocal0
         findpropstrict QName(PackageNamespace("flash.utils"),"setInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"deathFade")
         getlex QName(PrivateNamespace(null,"39"),"DEATHFADE_DELAY")
         callproperty QName(PackageNamespace("flash.utils"),"setInterval"), 2
         setproperty QName(PackageNamespace(""),"deathFadeInterval")
         getlocal0
         findpropstrict QName(PackageNamespace("flash.utils"),"setInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"revive")
         getlex QName(PrivateNamespace(null,"39"),"REVIVE_DELAY")
         callproperty QName(PackageNamespace("flash.utils"),"setInterval"), 2
         setproperty QName(PackageNamespace(""),"reviveInterval")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs00ba:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function deathFade() : void
      {
         trait method QName(PackageNamespace(""),"deathFade")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         pushdouble 4278206591
         pushdouble 0.44
         callpropvoid QName(PackageNamespace(""),"start"), 2
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"deathFadeInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function revive() : void
      {
         trait method QName(PackageNamespace(""),"revive")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"reviveInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"right")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         getlocal0
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_mostRecentLeftRight")
         getlocal0
         pushbyte 32
         dup
         callpropvoid QName(PackageNamespace(""),"teleportTo"), 2
         getlocal0
         findpropstrict QName(PackageNamespace("flash.utils"),"setInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"realTeleport")
         getlex QName(PrivateNamespace(null,"39"),"TELEPORT_DELAY")
         callproperty QName(PackageNamespace("flash.utils"),"setInterval"), 2
         setproperty QName(PackageNamespace(""),"teleportInterval")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs00b8
         getlex QName(PackageNamespace(""),"Music")
         callpropvoid QName(PackageNamespace(""),"playBoss1"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         pushfalse
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"going")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         pushfalse
         setproperty QName(PackageNamespace(""),"started")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRushTimer")
         getproperty QName(PackageNamespace(""),"now")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"value")
         ofs00b8:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitLeft(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitLeft")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(null,"39"),"_justHitHeadOrWall")
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs0013
         returnvoid
         ofs0013:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         iffalse ofs001c
         returnvoid
         ofs001c:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         dup
         iffalse ofs003e
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         not
         dup
         iftrue ofs003e
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         ofs003e:
         iffalse ofs0108
         jump ofs00cb
         ofs0046:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs006a
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushbyte 0
         pushbyte 2
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs006a:
         jump ofs0108
         ofs006e:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs008c
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         convert_b
         dup
         iffalse ofs008c
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs008c:
         iffalse ofs00c6
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs00a3
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         convert_b
         ofs00a3:
         dup
         iffalse ofs00b0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 8
         lessthan
         ofs00b0:
         iffalse ofs00b5
         returnvoid
         ofs00b5:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs00c6:
         label
         jump ofs0108
         ofs00cb:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal3
         ifstrictne ofs00de
         pushbyte 0
         jump ofs00f8
         ofs00de:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal3
         ifstrictne ofs00ec
         pushbyte 1
         jump ofs00f8
         ofs00ec:
         jump ofs00f6
         pushbyte 2
         jump ofs00f6
         ofs00f6:
         pushbyte 2
         ofs00f8:
         kill 3
         lookupswitch ofs00c6, [ofs0046, ofs006e, ofs00c6]
         ofs0108:
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitLeft"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitRight(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitRight")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(null,"39"),"_justHitHeadOrWall")
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitRight"), 2
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         iffalse ofs0017
         returnvoid
         ofs0017:
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs0023
         returnvoid
         ofs0023:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         dup
         iffalse ofs0045
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         not
         dup
         iftrue ofs0045
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         ofs0045:
         iffalse ofs0130
         jump ofs00f3
         ofs004d:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs0071
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushbyte 11
         pushbyte 2
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs0071:
         jump ofs0130
         ofs0075:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs0093
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         convert_b
         dup
         iffalse ofs0093
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0093:
         iffalse ofs00ee
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs00aa
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         convert_b
         ofs00aa:
         dup
         iffalse ofs00b7
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 8
         lessthan
         ofs00b7:
         iffalse ofs00bc
         returnvoid
         ofs00bc:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         pushbyte 11
         subtract
         initproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 11
         add
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         pushbyte 11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckFullBounds"), 2
         ofs00ee:
         label
         jump ofs0130
         ofs00f3:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal3
         ifstrictne ofs0106
         pushbyte 0
         jump ofs0120
         ofs0106:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal3
         ifstrictne ofs0114
         pushbyte 1
         jump ofs0120
         ofs0114:
         jump ofs011e
         pushbyte 2
         jump ofs011e
         ofs011e:
         pushbyte 2
         ofs0120:
         kill 3
         lookupswitch ofs00ee, [ofs004d, ofs0075, ofs00ee]
         ofs0130:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitBottom(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitBottom")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushfalse
         setproperty QName(PrivateNamespace(null,"39"),"_justHitHeadOrWall")
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitBottom"), 2
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs001a
         returnvoid
         ofs001a:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         iffalse ofs0023
         returnvoid
         ofs0023:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         equals
         dup
         iftrue ofs0039
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         equals
         ofs0039:
         iffalse ofs0113
         jump ofs00d6
         ofs0041:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         dup
         iftrue ofs0054
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs0054:
         dup
         iftrue ofs0060
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasGravityJump"), 0
         not
         ofs0060:
         iffalse ofs0087
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 2
         pushbyte 11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs0087:
         jump ofs0113
         ofs008b:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         dup
         iftrue ofs009e
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs009e:
         dup
         iftrue ofs00aa
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasGravityJump"), 0
         not
         ofs00aa:
         iffalse ofs00d1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         getlocal0
         pushbyte 0
         pushbyte 11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs00d1:
         label
         jump ofs0113
         ofs00d6:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal3
         ifstrictne ofs00e9
         pushbyte 0
         jump ofs0103
         ofs00e9:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal3
         ifstrictne ofs00f7
         pushbyte 1
         jump ofs0103
         ofs00f7:
         jump ofs0101
         pushbyte 2
         jump ofs0101
         ofs0101:
         pushbyte 2
         ofs0103:
         kill 3
         lookupswitch ofs00d1, [ofs0041, ofs008b, ofs00d1]
         ofs0113:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         equals
         dup
         iftrue ofs0129
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         equals
         ofs0129:
         iffalse ofs015b
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs015b
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs0152
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         convert_i
         jump ofs0156
         ofs0152:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         convert_i
         ofs0156:
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs015b:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitTop(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitTop")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         setproperty QName(PrivateNamespace(null,"39"),"_justHitHeadOrWall")
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"hitTop"), 2
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs001a
         returnvoid
         ofs001a:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         iffalse ofs0023
         returnvoid
         ofs0023:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         equals
         dup
         iftrue ofs0039
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         equals
         ofs0039:
         iffalse ofs00e1
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         iftrue ofs00e1
         jump ofs00a4
         ofs004a:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         iffalse ofs006e
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs006e:
         jump ofs00e1
         ofs0072:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         iffalse ofs009f
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushbyte -11
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs009f:
         label
         jump ofs00e1
         ofs00a4:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal3
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal3
         ifstrictne ofs00b7
         pushbyte 0
         jump ofs00d1
         ofs00b7:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal3
         ifstrictne ofs00c5
         pushbyte 1
         jump ofs00d1
         ofs00c5:
         jump ofs00cf
         pushbyte 2
         jump ofs00cf
         ofs00cf:
         pushbyte 2
         ofs00d1:
         kill 3
         lookupswitch ofs009f, [ofs004a, ofs0072, ofs009f]
         ofs00e1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         equals
         dup
         iftrue ofs00f7
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         equals
         ofs00f7:
         iffalse ofs0129
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         iffalse ofs0129
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs0120
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         convert_i
         jump ofs0124
         ofs0120:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         convert_i
         ofs0124:
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         ofs0129:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasAnyWeapon() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasAnyWeapon")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iftrue ofs0026
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0026:
         dup
         iftrue ofs003b
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs003b:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasAnyTwoWeapons() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasAnyTwoWeapons")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs003b
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iftrue ofs003b
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs003b:
         dup
         iftrue ofs0065
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs0065
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0065:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getHasWeapon(param1:int) : Boolean
      {
         trait method QName(PackageNamespace(""),"getHasWeapon")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasWeapon(param1:int, param2:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasWeapon")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal1
         getlocal2
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function switchToWeapon(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"switchToWeapon")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iftrue ofs001b
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         equals
         ofs001b:
         iffalse ofs0027
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         ofs0027:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getCurrentWeapon() : int
      {
         trait method QName(PackageNamespace(""),"getCurrentWeapon")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function switchToNextWeapon() : void
      {
         trait method QName(PrivateNamespace(null,"39"),"switchToNextWeapon")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iftrue ofs0026
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0026:
         dup
         iftrue ofs003b
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs003b:
         iftrue ofs0040
         returnvoid
         ofs0040:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         convert_i
         setlocal1
         jump ofs004e
         ofs004d:
         label
         ofs004e:
         inclocal_i 1
         getlocal1
         pushbyte 3
         modulo
         convert_i
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         not
         iftrue ofs004d
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function switchToPrevWeapon() : void
      {
         trait method QName(PrivateNamespace(null,"39"),"switchToPrevWeapon")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iftrue ofs0026
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0026:
         dup
         iftrue ofs003b
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs003b:
         iftrue ofs0040
         returnvoid
         ofs0040:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         convert_i
         setlocal1
         jump ofs004e
         ofs004d:
         label
         ofs004e:
         getlocal1
         decrement_i
         setlocal1
         getlocal1
         pushbyte 3
         add
         convert_i
         setlocal1
         getlocal1
         pushbyte 3
         modulo
         convert_i
         setlocal1
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         not
         iftrue ofs004d
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasTurbo() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasTurbo")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function setHasTurbo(param1:Boolean) : void
      {
         trait method QName(PrivateNamespace(null,"39"),"setHasTurbo")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasTurbo")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_turboMultiplier")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs0020
         pushdouble 0.5
         convert_d
         jump ofs0023
         ofs0020:
         pushbyte 1
         convert_d
         ofs0023:
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function shootCurrentWeapon() : void
      {
         trait method QName(PackageNamespace(""),"shootCurrentWeapon")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 12
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         pushbyte 0
         setlocal1
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         pushfalse
         setlocal3
         pushnull
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         pushbyte 0
         setlocal 5
         pushbyte 0
         setlocal 6
         pushbyte 0
         setlocal 7
         pushbyte 0
         setlocal 8
         jump ofs003d
         ofs0024:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         dup
         setlocal 10
         getproperty QName(PackageNamespace(""),"value")
         decrement_i
         setlocal 11
         getlocal 10
         getlocal 11
         setproperty QName(PackageNamespace(""),"value")
         kill 11
         kill 10
         ofs003d:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         greaterthan
         dup
         iffalse ofs005d
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         not
         ofs005d:
         iftrue ofs0024
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"WEAPON_NONE")
         ifne ofs0070
         returnvoid
         ofs0070:
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifngt ofs007e
         returnvoid
         ofs007e:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_bulletGroups")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(PackageNamespace(""),"getBullet"), 2
         coerce QName(PackageNamespace(""),"PlayerBullet")
         dup
         setlocal 9
         iffalse ofs04a5
         pushbyte -1
         setlocal1
         pushfalse
         setlocal3
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         convert_b
         dup
         iftrue ofs00b5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         ofs00b5:
         dup
         iftrue ofs00bd
         pop
         getlocal3
         convert_b
         ofs00bd:
         iffalse ofs00d5
         pushbyte 1
         dup
         dup
         pushbyte 1
         dup
         dup
         pushbyte 1
         dup
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         jump ofs01b6
         ofs00d5:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"WEAPON_PEA_SHOOTER")
         ifne ofs01a6
         jump ofs013e
         ofs00e7:
         label
         pushbyte 1
         dup
         dup
         pushbyte 0
         dup
         dup
         pushbyte 1
         dup
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         jump ofs01a2
         ofs00fc:
         label
         pushbyte 0
         dup
         pushbyte 1
         dup
         dup
         pushbyte 1
         dup
         pushbyte 0
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         jump ofs01a2
         ofs0112:
         label
         pushbyte 1
         pushbyte 0
         dup
         dup
         pushbyte 1
         dup
         dup
         pushbyte 1
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         jump ofs01a2
         ofs0128:
         label
         pushbyte 1
         dup
         dup
         pushbyte 1
         dup
         pushbyte 0
         dup
         dup
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         ofs0139:
         label
         jump ofs01a2
         ofs013e:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal 10
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal 10
         ifstrictne ofs0153
         pushbyte 0
         jump ofs018c
         ofs0153:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal 10
         ifstrictne ofs0162
         pushbyte 1
         jump ofs018c
         ofs0162:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal 10
         ifstrictne ofs0171
         pushbyte 2
         jump ofs018c
         ofs0171:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal 10
         ifstrictne ofs0180
         pushbyte 3
         jump ofs018c
         ofs0180:
         jump ofs018a
         pushbyte 4
         jump ofs018a
         ofs018a:
         pushbyte 4
         ofs018c:
         kill 10
         lookupswitch ofs0139, [ofs00e7, ofs00fc, ofs0112, ofs0128, ofs0139]
         ofs01a2:
         jump ofs01b6
         ofs01a6:
         pushbyte 1
         dup
         dup
         pushbyte 1
         dup
         dup
         pushbyte 1
         dup
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal2
         ofs01b6:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iffalse ofs01c8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs01c8:
         dup
         iffalse ofs01da
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs01da:
         iffalse ofs01e5
         pushbyte 3
         setlocal1
         jump ofs02fa
         ofs01e5:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iffalse ofs01f7
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs01f7:
         dup
         iffalse ofs0209
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0209:
         iffalse ofs0214
         pushbyte 1
         setlocal1
         jump ofs02fa
         ofs0214:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         dup
         iffalse ofs0226
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs0226:
         dup
         iffalse ofs0238
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 5
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0238:
         iffalse ofs0243
         pushbyte 5
         setlocal1
         jump ofs02fa
         ofs0243:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         dup
         iffalse ofs0255
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs0255:
         dup
         iffalse ofs0267
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 7
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs0267:
         iffalse ofs0272
         pushbyte 7
         setlocal1
         jump ofs02fa
         ofs0272:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iffalse ofs028a
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs028a:
         iffalse ofs0295
         pushbyte 2
         setlocal1
         jump ofs02fa
         ofs0295:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         dup
         iffalse ofs02ad
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 6
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs02ad:
         iffalse ofs02b8
         pushbyte 6
         setlocal1
         jump ofs02fa
         ofs02b8:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         dup
         iffalse ofs02d0
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs02d0:
         iffalse ofs02db
         pushbyte 4
         setlocal1
         jump ofs02fa
         ofs02db:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         dup
         iffalse ofs02f3
         pop
         findpropstrict QName(PackageNamespace(""),"Boolean")
         getlocal2
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         ofs02f3:
         iffalse ofs02fa
         pushbyte 0
         setlocal1
         ofs02fa:
         getlocal1
         pushbyte -1
         ifne ofs03f2
         jump ofs0346
         ofs0305:
         label
         pushbyte 4
         setlocal1
         jump ofs03f2
         ofs030d:
         label
         pushbyte 4
         setlocal1
         jump ofs03f2
         ofs0315:
         label
         pushbyte 0
         setlocal1
         jump ofs03f2
         ofs031d:
         label
         pushbyte 0
         setlocal1
         jump ofs03f2
         ofs0325:
         label
         pushbyte 2
         setlocal1
         jump ofs03f2
         ofs032d:
         label
         pushbyte 2
         setlocal1
         jump ofs03f2
         ofs0335:
         label
         pushbyte 6
         setlocal1
         jump ofs03f2
         ofs033d:
         label
         pushbyte 6
         setlocal1
         ofs0341:
         label
         jump ofs03f2
         ofs0346:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         setlocal 10
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         getlocal 10
         ifstrictne ofs035b
         pushbyte 0
         jump ofs03d0
         ofs035b:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         getlocal 10
         ifstrictne ofs036a
         pushbyte 1
         jump ofs03d0
         ofs036a:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         getlocal 10
         ifstrictne ofs0379
         pushbyte 2
         jump ofs03d0
         ofs0379:
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         getlocal 10
         ifstrictne ofs0388
         pushbyte 3
         jump ofs03d0
         ofs0388:
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         getlocal 10
         ifstrictne ofs0397
         pushbyte 4
         jump ofs03d0
         ofs0397:
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         getlocal 10
         ifstrictne ofs03a6
         pushbyte 5
         jump ofs03d0
         ofs03a6:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         getlocal 10
         ifstrictne ofs03b5
         pushbyte 6
         jump ofs03d0
         ofs03b5:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         getlocal 10
         ifstrictne ofs03c4
         pushbyte 7
         jump ofs03d0
         ofs03c4:
         jump ofs03ce
         pushbyte 8
         jump ofs03ce
         ofs03ce:
         pushbyte 8
         ofs03d0:
         kill 10
         lookupswitch ofs0341, [ofs0305, ofs030d, ofs0315, ofs031d, ofs0325, ofs032d, ofs0335, ofs033d, ofs0341]
         ofs03f2:
         pushbyte 0
         pushbyte 40
         pushbyte 90
         pushshort 140
         pushshort 180
         pushshort -140
         pushbyte -90
         pushbyte -40
         newarray 8
         coerce QName(PackageNamespace(""),"Array")
         setlocal 4
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal 4
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_i
         setlocal 5
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_SPEED")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_turboMultiplier")
         getproperty QName(PackageNamespace(""),"value")
         divide
         convert_i
         setlocal 6
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         pushshort 180
         divide
         callproperty QName(PackageNamespace(""),"cos"), 1
         getlocal 6
         multiply
         convert_i
         setlocal 7
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getproperty QName(PackageNamespace(""),"PI")
         multiply
         pushshort 180
         divide
         callproperty QName(PackageNamespace(""),"sin"), 1
         negate
         getlocal 6
         multiply
         convert_i
         setlocal 8
         getlocal 9
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         add
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         add
         getlocal 7
         getlocal 8
         callpropvoid QName(PackageNamespace(""),"shoot"), 4
         getlocal0
         getproperty QName(PackageNamespace(""),"_weaponTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"WEAPON_TIMEOUTS")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_turboMultiplier")
         getproperty QName(PackageNamespace(""),"value")
         multiply
         setproperty QName(PackageNamespace(""),"value")
         ofs04a5:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function performGravityJump() : void
      {
         trait method QName(PackageNamespace(""),"performGravityJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         pushstring "SHIFT"
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iffalse ofs001b
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"cheatsEnabled")
         convert_b
         ofs001b:
         iffalse ofs0020
         returnvoid
         ofs0020:
         jump ofs0468
         ofs0024:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs0037
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs0037:
         dup
         iftrue ofs0045
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         ofs0045:
         dup
         iffalse ofs0051
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         ofs0051:
         iffalse ofs0088
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs0061
         returnvoid
         ofs0061:
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs0075
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         convert_i
         jump ofs0079
         ofs0075:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         convert_i
         ofs0079:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs0122
         ofs0088:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs009a
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs009a:
         dup
         iftrue ofs00a8
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs00a8:
         dup
         iffalse ofs00b4
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs00b4:
         iffalse ofs00d7
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs00c4
         returnvoid
         ofs00c4:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs0122
         ofs00d7:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs00e9
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs00e9:
         dup
         iftrue ofs00f7
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs00f7:
         dup
         iffalse ofs0103
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs0103:
         iffalse ofs0122
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs0113
         returnvoid
         ofs0113:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         ofs0122:
         jump ofs04c7
         ofs0126:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs0139
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs0139:
         dup
         iftrue ofs0147
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs0147:
         dup
         iffalse ofs0153
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs0153:
         iffalse ofs0176
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs0163
         returnvoid
         ofs0163:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs01fd
         ofs0176:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs0188
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs0188:
         dup
         iftrue ofs0196
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs0196:
         dup
         iffalse ofs01a2
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs01a2:
         iffalse ofs01c5
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs01b2
         returnvoid
         ofs01b2:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs01fd
         ofs01c5:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         iffalse ofs01fd
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs01da
         returnvoid
         ofs01da:
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs01ee
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         convert_i
         jump ofs01f2
         ofs01ee:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         convert_i
         ofs01f2:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         ofs01fd:
         jump ofs04c7
         ofs0201:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs0214
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs0214:
         dup
         iftrue ofs0222
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         ofs0222:
         dup
         iffalse ofs022e
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         ofs022e:
         iffalse ofs0251
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs023e
         returnvoid
         ofs023e:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs0330
         ofs0251:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs0263
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs0263:
         dup
         iftrue ofs0271
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs0271:
         dup
         iffalse ofs027d
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs027d:
         iftrue ofs0330
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs0293
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs0293:
         dup
         iftrue ofs02a1
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs02a1:
         dup
         iffalse ofs02ad
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs02ad:
         iffalse ofs02e5
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs02bd
         returnvoid
         ofs02bd:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         equals
         iffalse ofs02d2
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         convert_i
         jump ofs02d6
         ofs02d2:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         convert_i
         ofs02d6:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs0330
         ofs02e5:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs02f7
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs02f7:
         dup
         iftrue ofs0305
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         equals
         ofs0305:
         dup
         iffalse ofs0311
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0311:
         iffalse ofs0330
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs0321
         returnvoid
         ofs0321:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         ofs0330:
         jump ofs04c7
         ofs0334:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs0347
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs0347:
         dup
         iftrue ofs0355
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         ofs0355:
         dup
         iffalse ofs0361
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         ofs0361:
         iffalse ofs0384
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs0371
         returnvoid
         ofs0371:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs0463
         ofs0384:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs0396
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs0396:
         dup
         iftrue ofs03a4
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_LEFT")
         equals
         ofs03a4:
         dup
         iffalse ofs03b0
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs03b0:
         iftrue ofs0463
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         not
         dup
         iffalse ofs03c6
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs03c6:
         dup
         iftrue ofs03d4
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_RIGHT")
         equals
         ofs03d4:
         dup
         iffalse ofs03e0
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs03e0:
         iffalse ofs0418
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnlt ofs03f0
         returnvoid
         ofs03f0:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         equals
         iffalse ofs0405
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         convert_i
         jump ofs0409
         ofs0405:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         convert_i
         ofs0409:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs0463
         ofs0418:
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         dup
         iffalse ofs042a
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs042a:
         dup
         iftrue ofs0438
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentDir")
         getlex QName(PackageNamespace(""),"DIR_DOWN")
         equals
         ofs0438:
         dup
         iffalse ofs0444
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0444:
         iffalse ofs0463
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnlt ofs0454
         returnvoid
         ofs0454:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         ofs0463:
         label
         jump ofs04c7
         ofs0468:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs047b
         pushbyte 0
         jump ofs04b1
         ofs047b:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs0489
         pushbyte 1
         jump ofs04b1
         ofs0489:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs0497
         pushbyte 2
         jump ofs04b1
         ofs0497:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs04a5
         pushbyte 3
         jump ofs04b1
         ofs04a5:
         jump ofs04af
         pushbyte 4
         jump ofs04af
         ofs04af:
         pushbyte 4
         ofs04b1:
         kill 1
         lookupswitch ofs0463, [ofs0024, ofs0126, ofs0201, ofs0334, ofs0463]
         ofs04c7:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function changeSnailSizeCheckBounds(param1:int, param2:int, param3:int, param4:int) : void
      {
         trait method QName(PackageNamespace(""),"changeSnailSizeCheckBounds")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 7
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal1
         getlocal3
         subtract
         convert_i
         setlocal 5
         getlocal2
         getlocal 4
         subtract
         convert_i
         setlocal 6
         findproperty QName(PackageNamespace(""),"x")
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"x")
         callproperty QName(PackageNamespace(""),"int"), 1
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PackageNamespace(""),"y")
         callproperty QName(PackageNamespace(""),"int"), 1
         initproperty QName(PackageNamespace(""),"y")
         getlocal 5
         pushbyte 0
         greaterthan
         dup
         iffalse ofs003b
         pop
         getlocal 6
         pushbyte 0
         greaterthan
         ofs003b:
         iffalse ofs0064
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal 5
         subtract
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal 6
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs00a2
         ofs0064:
         getlocal 5
         pushbyte 0
         ifngt ofs0085
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal 5
         subtract
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlocal 5
         pushbyte 0
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs00a2
         ofs0085:
         getlocal 6
         pushbyte 0
         ifngt ofs00a2
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal 6
         subtract
         initproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushbyte 0
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs00a2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function findNotSolidHeight() : int
      {
         trait method QName(PackageNamespace(""),"findNotSolidHeight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         pushbyte 0
         pushbyte -8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidTop"), 5
         convert_i
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         getlex QName(PackageNamespace(""),"width")
         pushbyte 0
         pushbyte 8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidBottom"), 5
         convert_i
         setlocal2
         getlocal2
         getlocal1
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function findNotSolidWidth() : int
      {
         trait method QName(PackageNamespace(""),"findNotSolidWidth")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         pushbyte 0
         getlex QName(PackageNamespace(""),"height")
         pushbyte -8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidLeft"), 5
         convert_i
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace(""),"y")
         pushbyte 0
         getlex QName(PackageNamespace(""),"height")
         pushbyte 8
         callproperty QName(PackageNamespace(""),"findFirstNotSolidRight"), 5
         convert_i
         setlocal2
         getlocal2
         getlocal1
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function moveSnailCheckFullBounds(param1:int, param2:int) : void
      {
         trait method QName(PackageNamespace(""),"moveSnailCheckFullBounds")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal2
         convert_i
         setlocal3
         getlocal2
         pushbyte 0
         ifnlt ofs0029
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs0049
         ofs0029:
         getlocal2
         pushbyte 0
         ifngt ofs0049
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs0049:
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushbyte 0
         ifnlt ofs0078
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidLeft"), 5
         convert_i
         setlocal1
         jump ofs0098
         ofs0078:
         getlocal1
         pushbyte 0
         ifngt ofs0098
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidRight"), 5
         convert_i
         setlocal1
         ofs0098:
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal1
         add
         initproperty QName(PackageNamespace(""),"x")
         getlocal3
         getlocal2
         subtract
         convert_i
         setlocal2
         getlocal2
         pushbyte 0
         ifnlt ofs00cc
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs00ec
         ofs00cc:
         getlocal2
         pushbyte 0
         ifngt ofs00ec
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstFullNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs00ec:
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         initproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function moveSnailCheckBounds(param1:int, param2:int) : void
      {
         trait method QName(PackageNamespace(""),"moveSnailCheckBounds")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal2
         convert_i
         setlocal3
         getlocal2
         pushbyte 0
         ifnlt ofs0029
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs0049
         ofs0029:
         getlocal2
         pushbyte 0
         ifngt ofs0049
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs0049:
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal1
         pushbyte 0
         ifnlt ofs0078
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstNotSolidLeft"), 5
         convert_i
         setlocal1
         jump ofs0098
         ofs0078:
         getlocal1
         pushbyte 0
         ifngt ofs0098
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal1
         callproperty QName(PackageNamespace(""),"findFirstNotSolidRight"), 5
         convert_i
         setlocal1
         ofs0098:
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal1
         add
         initproperty QName(PackageNamespace(""),"x")
         getlocal3
         getlocal2
         subtract
         convert_i
         setlocal2
         getlocal2
         pushbyte 0
         ifnlt ofs00cc
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidTop"), 5
         convert_i
         setlocal2
         jump ofs00ec
         ofs00cc:
         getlocal2
         pushbyte 0
         ifngt ofs00ec
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal2
         callproperty QName(PackageNamespace(""),"findFirstNotSolidBottom"), 5
         convert_i
         setlocal2
         ofs00ec:
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal2
         add
         initproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function fixGravity() : void
      {
         trait method QName(PrivateNamespace(null,"39"),"fixGravity")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_justHitSteps")
         iffalse ofs0010
         getlocal0
         pushfalse
         setproperty QName(PackageNamespace(""),"_justHitSteps")
         returnvoid
         ofs0010:
         jump ofs07cd
         ofs0014:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs0040
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         kill 2
         kill 1
         jump ofs0046
         ofs0040:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         ofs0046:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs005b
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         greaterequals
         ofs005b:
         dup
         iftrue ofs0077
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         convert_b
         dup
         iffalse ofs0077
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs0077:
         iffalse ofs009b
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs008f
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         convert_i
         jump ofs0093
         ofs008f:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         convert_i
         ofs0093:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs0249
         ofs009b:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs00b0
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs00b0:
         dup
         iffalse ofs00bc
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         ofs00bc:
         dup
         iffalse ofs00c8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs00c8:
         iffalse ofs00e1
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte -1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs0249
         ofs00e1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs00f6
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs00f6:
         dup
         iffalse ofs0102
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         ofs0102:
         dup
         iffalse ofs010e
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs010e:
         iffalse ofs0127
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 12
         pushbyte -1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs0249
         ofs0127:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs013b
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs013b:
         dup
         iffalse ofs0148
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs0148:
         dup
         iffalse ofs0154
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         not
         ofs0154:
         iffalse ofs0249
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs01ea
         ofs0163:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs0178
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         convert_i
         jump ofs017c
         ofs0178:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         convert_i
         ofs017c:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs0249
         ofs0184:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs0199
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         convert_i
         jump ofs019d
         ofs0199:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         convert_i
         ofs019d:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs0249
         ofs01a5:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         iffalse ofs01bb
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         convert_i
         jump ofs01bf
         ofs01bb:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         convert_i
         ofs01bf:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs0249
         ofs01c7:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         iffalse ofs01dd
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         convert_i
         jump ofs01e1
         ofs01dd:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         convert_i
         ofs01e1:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs01e5:
         label
         jump ofs0249
         ofs01ea:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs01fd
         pushbyte 0
         jump ofs0233
         ofs01fd:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs020b
         pushbyte 1
         jump ofs0233
         ofs020b:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs0219
         pushbyte 2
         jump ofs0233
         ofs0219:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs0227
         pushbyte 3
         jump ofs0233
         ofs0227:
         jump ofs0231
         pushbyte 4
         jump ofs0231
         ofs0231:
         pushbyte 4
         ofs0233:
         kill 1
         lookupswitch ofs01e5, [ofs0163, ofs0184, ofs01a5, ofs01c7, ofs01e5]
         ofs0249:
         jump ofs082c
         ofs024d:
         label
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         dup
         iffalse ofs0261
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0261:
         dup
         iffalse ofs026c
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_justHitHeadOrWall")
         not
         ofs026c:
         dup
         iffalse ofs027a
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         not
         ofs027a:
         dup
         iffalse ofs0289
         pop
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         greaterthan
         ofs0289:
         iffalse ofs0304
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         dup
         iffalse ofs02a0
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs02a0:
         iffalse ofs02c9
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         pushfalse
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 3
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         pushbyte -11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs0300
         ofs02c9:
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         equals
         dup
         iffalse ofs02dc
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs02dc:
         iffalse ofs0300
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         pushfalse
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 3
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 15
         pushbyte -11
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         ofs0300:
         jump ofs082c
         ofs0304:
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs032f
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         kill 2
         kill 1
         jump ofs0335
         ofs032f:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         ofs0335:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         dup
         iftrue ofs034a
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         convert_b
         ofs034a:
         iffalse ofs036c
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         ifne ofs0364
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs036c
         ofs0364:
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs036c:
         jump ofs082c
         ofs0370:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs039c
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         kill 2
         kill 1
         jump ofs03a2
         ofs039c:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         ofs03a2:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs03b7
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         greaterequals
         ofs03b7:
         dup
         iftrue ofs03d3
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         convert_b
         dup
         iffalse ofs03d3
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs03d3:
         iffalse ofs03ec
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs059a
         ofs03ec:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs0401
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs0401:
         dup
         iffalse ofs040d
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         ofs040d:
         dup
         iffalse ofs0419
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs0419:
         iffalse ofs0432
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs059a
         ofs0432:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs0447
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs0447:
         dup
         iffalse ofs0453
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0453:
         dup
         iffalse ofs045f
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         ofs045f:
         iffalse ofs0478
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte 0
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs059a
         ofs0478:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs048c
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs048c:
         dup
         iffalse ofs0499
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs0499:
         dup
         iffalse ofs04a5
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         not
         ofs04a5:
         iffalse ofs059a
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs053b
         ofs04b4:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs04c9
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         convert_i
         jump ofs04cd
         ofs04c9:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         convert_i
         ofs04cd:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs059a
         ofs04d5:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs04ea
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         convert_i
         jump ofs04ee
         ofs04ea:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         convert_i
         ofs04ee:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs059a
         ofs04f6:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         iffalse ofs050c
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         convert_i
         jump ofs0510
         ofs050c:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         convert_i
         ofs0510:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs059a
         ofs0518:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         iffalse ofs052e
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         convert_i
         jump ofs0532
         ofs052e:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         convert_i
         ofs0532:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs0536:
         label
         jump ofs059a
         ofs053b:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs054e
         pushbyte 0
         jump ofs0584
         ofs054e:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs055c
         pushbyte 1
         jump ofs0584
         ofs055c:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs056a
         pushbyte 2
         jump ofs0584
         ofs056a:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs0578
         pushbyte 3
         jump ofs0584
         ofs0578:
         jump ofs0582
         pushbyte 4
         jump ofs0582
         ofs0582:
         pushbyte 4
         ofs0584:
         kill 1
         lookupswitch ofs0536, [ofs04b4, ofs04d5, ofs04f6, ofs0518, ofs0536]
         ofs059a:
         jump ofs082c
         ofs059e:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         equals
         not
         setproperty QName(PackageNamespace(""),"_jumping")
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs05ca
         getlocal0
         dup
         setlocal1
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         increment_i
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         kill 2
         kill 1
         jump ofs05d0
         ofs05ca:
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         ofs05d0:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         dup
         iffalse ofs05e5
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         greaterequals
         ofs05e5:
         dup
         iftrue ofs0601
         pop
         findpropstrict QName(PackageNamespace(""),"flickering")
         callproperty QName(PackageNamespace(""),"flickering"), 0
         convert_b
         dup
         iffalse ofs0601
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         not
         ofs0601:
         iffalse ofs061a
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte -6
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs07c8
         ofs061a:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs062f
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs062f:
         dup
         iffalse ofs063b
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         ofs063b:
         dup
         iffalse ofs0647
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs0647:
         iffalse ofs0660
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte -6
         pushbyte 13
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs07c8
         ofs0660:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs0675
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs0675:
         dup
         iffalse ofs0681
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs0681:
         dup
         iffalse ofs068d
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         ofs068d:
         iffalse ofs06a6
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         getlocal0
         pushbyte -6
         pushbyte 1
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         jump ofs07c8
         ofs06a6:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         convert_b
         dup
         iffalse ofs06ba
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedJump"), 0
         not
         ofs06ba:
         dup
         iffalse ofs06c7
         pop
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_fallFrames")
         pushbyte 1
         equals
         ofs06c7:
         dup
         iffalse ofs06d3
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         not
         ofs06d3:
         iffalse ofs07c8
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         setproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         jump ofs0769
         ofs06e2:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs06f7
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         convert_i
         jump ofs06fb
         ofs06f7:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         convert_i
         ofs06fb:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs07c8
         ofs0703:
         label
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs0718
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         convert_i
         jump ofs071c
         ofs0718:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         convert_i
         ofs071c:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs07c8
         ofs0724:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         iffalse ofs073a
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         convert_i
         jump ofs073e
         ofs073a:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         convert_i
         ofs073e:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         jump ofs07c8
         ofs0746:
         label
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_mostRecentUpDown")
         getlex QName(PackageNamespace(""),"DIR_UP")
         equals
         iffalse ofs075c
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         convert_i
         jump ofs0760
         ofs075c:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         convert_i
         ofs0760:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         ofs0764:
         label
         jump ofs07c8
         ofs0769:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_desiredGravity")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs077c
         pushbyte 0
         jump ofs07b2
         ofs077c:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs078a
         pushbyte 1
         jump ofs07b2
         ofs078a:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs0798
         pushbyte 2
         jump ofs07b2
         ofs0798:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs07a6
         pushbyte 3
         jump ofs07b2
         ofs07a6:
         jump ofs07b0
         pushbyte 4
         jump ofs07b0
         ofs07b0:
         pushbyte 4
         ofs07b2:
         kill 1
         lookupswitch ofs0764, [ofs06e2, ofs0703, ofs0724, ofs0746, ofs0764]
         ofs07c8:
         label
         jump ofs082c
         ofs07cd:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs07e0
         pushbyte 0
         jump ofs0816
         ofs07e0:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs07ee
         pushbyte 1
         jump ofs0816
         ofs07ee:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs07fc
         pushbyte 2
         jump ofs0816
         ofs07fc:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs080a
         pushbyte 3
         jump ofs0816
         ofs080a:
         jump ofs0814
         pushbyte 4
         jump ofs0814
         ofs0814:
         pushbyte 4
         ofs0816:
         kill 1
         lookupswitch ofs07c8, [ofs0014, ofs024d, ofs0370, ofs059e, ofs07c8]
         ofs082c:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function doJump() : void
      {
         trait method QName(PackageNamespace(""),"doJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_jumping")
         iffalse ofs000b
         returnvoid
         ofs000b:
         getlocal0
         pushfalse
         callpropvoid QName(PackageNamespace(""),"hideInShell"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs0030
         getlocal0
         callproperty QName(PrivateNamespace(null,"39"),"doGravityJump"), 0
         iffalse ofs002c
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playJump1"), 0
         ofs002c:
         jump ofs0040
         ofs0030:
         getlocal0
         callproperty QName(PrivateNamespace(null,"39"),"doRegularJump"), 0
         iffalse ofs0040
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playJump1"), 0
         ofs0040:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private function doGravityJump() : Boolean
      {
         trait method QName(PrivateNamespace(null,"39"),"doGravityJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         jump ofs00c7
         ofs0006:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs002d
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         pushbyte 1
         add
         initproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs002d:
         jump ofs0126
         ofs0031:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs0060
         findpropstrict QName(PackageNamespace(""),"y")
         dup
         setlocal1
         getproperty QName(PackageNamespace(""),"y")
         decrement
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PackageNamespace(""),"y")
         kill 2
         kill 1
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs0060:
         jump ofs0126
         ofs0064:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnge ofs0092
         findpropstrict QName(PackageNamespace(""),"x")
         dup
         setlocal1
         getproperty QName(PackageNamespace(""),"x")
         decrement
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PackageNamespace(""),"x")
         kill 2
         kill 1
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"x")
         pushtrue
         returnvalue
         ofs0092:
         jump ofs0126
         ofs0096:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         ifnge ofs00be
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 1
         add
         initproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"x")
         pushtrue
         returnvalue
         ofs00be:
         jump ofs0126
         ofs00c2:
         label
         jump ofs0126
         ofs00c7:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs00da
         pushbyte 0
         jump ofs0110
         ofs00da:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs00e8
         pushbyte 1
         jump ofs0110
         ofs00e8:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs00f6
         pushbyte 2
         jump ofs0110
         ofs00f6:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs0104
         pushbyte 3
         jump ofs0110
         ofs0104:
         jump ofs010e
         pushbyte 4
         jump ofs010e
         ofs010e:
         pushbyte 4
         ofs0110:
         kill 1
         lookupswitch ofs00c2, [ofs0006, ofs0031, ofs0064, ofs0096, ofs00c2]
         ofs0126:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function doRegularJump() : Boolean
      {
         trait method QName(PrivateNamespace(null,"39"),"doRegularJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         jump ofs012c
         ofs0006:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs0044
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         pushbyte 1
         add
         initproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlex QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         equals
         iffalse ofs003a
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         convert_i
         jump ofs003e
         ofs003a:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         convert_i
         ofs003e:
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         pushtrue
         returnvalue
         ofs0044:
         jump ofs018b
         ofs0048:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidHeight"), 0
         pushbyte 8
         ifnge ofs0077
         findpropstrict QName(PackageNamespace(""),"y")
         dup
         setlocal1
         getproperty QName(PackageNamespace(""),"y")
         decrement
         setlocal2
         getlocal1
         getlocal2
         setproperty QName(PackageNamespace(""),"y")
         kill 2
         kill 1
         getlex QName(PackageNamespace(""),"velocity")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"y")
         pushtrue
         returnvalue
         ofs0077:
         jump ofs018b
         ofs007b:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         greaterequals
         dup
         iffalse ofs00a9
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedLeft"), 0
         convert_b
         dup
         iffalse ofs00a8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs00a8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs00a8:
         not
         ofs00a9:
         iffalse ofs00c7
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 100
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         pushtrue
         returnvalue
         ofs00c7:
         jump ofs018b
         ofs00cb:
         label
         getlocal0
         callproperty QName(PackageNamespace(""),"findNotSolidWidth"), 0
         pushbyte 8
         greaterequals
         dup
         iffalse ofs00f9
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedRight"), 0
         convert_b
         dup
         iffalse ofs00f8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedUp"), 0
         convert_b
         dup
         iftrue ofs00f8
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"pressedDown"), 0
         convert_b
         ofs00f8:
         not
         ofs00f9:
         iffalse ofs0123
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte -100
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         pushbyte 11
         subtract
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 1
         pushtrue
         returnvalue
         ofs0123:
         jump ofs018b
         ofs0127:
         label
         jump ofs018b
         ofs012c:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal1
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal1
         ifstrictne ofs013f
         pushbyte 0
         jump ofs0175
         ofs013f:
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal1
         ifstrictne ofs014d
         pushbyte 1
         jump ofs0175
         ofs014d:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal1
         ifstrictne ofs015b
         pushbyte 2
         jump ofs0175
         ofs015b:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal1
         ifstrictne ofs0169
         pushbyte 3
         jump ofs0175
         ofs0169:
         jump ofs0173
         pushbyte 4
         jump ofs0173
         ofs0173:
         pushbyte 4
         ofs0175:
         kill 1
         lookupswitch ofs0127, [ofs0006, ofs0048, ofs007b, ofs00cb, ofs0127]
         ofs018b:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHighJump(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHighJump")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasHighJump")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_jumpPower")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs0021
         getlex QName(PrivateNamespace(null,"39"),"HIGH_JUMP")
         convert_i
         jump ofs0025
         ofs0021:
         getlex QName(PrivateNamespace(null,"39"),"REGULAR_JUMP")
         convert_i
         ofs0025:
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function isIcy() : Boolean
      {
         trait method QName(PackageNamespace(""),"isIcy")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setSnailType(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setSnailType")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_snailType")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         pushstring "snail"
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "_"
         add
         setproperty QName(PrivateNamespace(null,"39"),"_snailTypePrefix")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasColdFoot")
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICE")
         greaterequals
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
         greaterequals
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         getlocal1
         getlex QName(PackageNamespace(""),"SNAILTYPE_METAL")
         greaterequals
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs008a
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs005d
         pushshort 480
         jump ofs0060
         ofs005d:
         pushshort 330
         ofs0060:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         pushshort 550
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0080
         pushshort 900
         jump ofs0083
         ofs0080:
         pushshort 1200
         ofs0083:
         setproperty QName(PackageNamespace(""),"value")
         jump ofs015c
         ofs008a:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00d5
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs00a8
         pushshort 370
         jump ofs00ab
         ofs00a8:
         pushshort 260
         ofs00ab:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         pushshort 500
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs00cb
         pushshort 900
         jump ofs00ce
         ofs00cb:
         pushshort 1200
         ofs00ce:
         setproperty QName(PackageNamespace(""),"value")
         jump ofs015c
         ofs00d5:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs0120
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs00f3
         pushshort 370
         jump ofs00f6
         ofs00f3:
         pushshort 260
         ofs00f6:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         pushshort 500
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0116
         pushshort 900
         jump ofs0119
         ofs0116:
         pushshort 1200
         ofs0119:
         setproperty QName(PackageNamespace(""),"value")
         jump ofs015c
         ofs0120:
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0133
         pushshort 370
         jump ofs0136
         ofs0133:
         pushshort 260
         ofs0136:
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_maxSpeed")
         pushshort 500
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0156
         pushshort 900
         jump ofs0159
         ofs0156:
         pushshort 1200
         ofs0159:
         setproperty QName(PackageNamespace(""),"value")
         ofs015c:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function playAnim(param1:String) : void
      {
         trait method QName(PackageNamespace(""),"playAnim")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"String")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"play")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_snailTypePrefix")
         getlocal1
         add
         callpropvoid QName(PackageNamespace(""),"play"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setGravityDir(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setGravityDir")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setproperty QName(PackageNamespace(""),"_gravityDir")
         jump ofs00da
         ofs000b:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         jump ofs0139
         ofs003e:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         jump ofs0139
         ofs0071:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         jump ofs0139
         ofs00a5:
         label
         getlex QName(PackageNamespace(""),"acceleration")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_gravity")
         getproperty QName(PackageNamespace(""),"value")
         negate
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"acceleration")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         ofs00d5:
         label
         jump ofs0139
         ofs00da:
         getlocal0
         getproperty QName(PackageNamespace(""),"_gravityDir")
         setlocal2
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         getlocal2
         ifstrictne ofs00ed
         pushbyte 0
         jump ofs0123
         ofs00ed:
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         getlocal2
         ifstrictne ofs00fb
         pushbyte 1
         jump ofs0123
         ofs00fb:
         getlex QName(PackageNamespace(""),"GRAV_UP")
         getlocal2
         ifstrictne ofs0109
         pushbyte 2
         jump ofs0123
         ofs0109:
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         getlocal2
         ifstrictne ofs0117
         pushbyte 3
         jump ofs0123
         ofs0117:
         jump ofs0121
         pushbyte 4
         jump ofs0121
         ofs0121:
         pushbyte 4
         ofs0123:
         kill 2
         lookupswitch ofs00d5, [ofs000b, ofs003e, ofs0071, ofs00a5, ofs00d5]
         ofs0139:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hideInShell(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"hideInShell")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         not
         dup
         iffalse ofs000f
         pop
         getlocal1
         convert_b
         ofs000f:
         iffalse ofs001a
         getlex QName(PackageNamespace(""),"Sfx")
         callpropvoid QName(PackageNamespace(""),"playShell"), 0
         ofs001a:
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"zzz")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function realTeleport() : void
      {
         trait method QName(PackageNamespace(""),"realTeleport")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal1
         getlocal0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         findproperty QName(PackageNamespace(""),"dead")
         pushfalse
         initproperty QName(PackageNamespace(""),"dead")
         findproperty QName(PackageNamespace(""),"solid")
         pushtrue
         initproperty QName(PackageNamespace(""),"solid")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0052
         getlocal0
         pushint 99999
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTX")
         pushbyte 16
         multiply
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"BOSSRUSH_STARTY")
         pushbyte 16
         multiply
         initproperty QName(PackageNamespace(""),"y")
         jump ofs006e
         ofs0052:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal1
         getlocal0
         getlocal1
         getproperty Multiname("savex",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal1
         getproperty Multiname("savey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callpropvoid QName(PackageNamespace(""),"teleportTo"), 2
         ofs006e:
         findpropstrict QName(PackageNamespace("flash.utils"),"clearInterval")
         getlocal0
         getproperty QName(PackageNamespace(""),"teleportInterval")
         callpropvoid QName(PackageNamespace("flash.utils"),"clearInterval"), 1
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"fade")
         callpropvoid QName(PackageNamespace(""),"stop"), 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"flash")
         pushint 2130706432
         pushdouble 0.34
         callpropvoid QName(PackageNamespace(""),"start"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function teleportTo(param1:int, param2:int) : void
      {
         trait method QName(PackageNamespace(""),"teleportTo")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setFaceDir"), 2
         findproperty QName(PackageNamespace(""),"x")
         getlocal1
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal2
         initproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"drag")
         getlocal0
         getproperty QName(PackageNamespace(""),"_runSpeed")
         getproperty QName(PackageNamespace(""),"value")
         pushshort 200
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"worldMap")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"checkRoomBounds"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFaceDirHiding(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setFaceDirHiding")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         jump ofs0337
         ofs0006:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 13
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 16
         pushbyte 3
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "floor_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         add
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs03da
         ofs0072:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 7
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 16
         pushbyte 3
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         add
         initproperty QName(PackageNamespace(""),"x")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushstring "floor_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         jump ofs03da
         ofs00de:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 13
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         dup
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 16
         pushbyte 6
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "ceil_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         add
         initproperty QName(PackageNamespace(""),"x")
         jump ofs03da
         ofs0135:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 7
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         dup
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 16
         pushbyte 6
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "ceil_right_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         add
         initproperty QName(PackageNamespace(""),"x")
         jump ofs03da
         ofs018c:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 13
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 16
         pushbyte 6
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 6
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         add
         initproperty QName(PackageNamespace(""),"x")
         jump ofs03da
         ofs0201:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 7
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 16
         pushbyte 6
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 6
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         add
         initproperty QName(PackageNamespace(""),"y")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         add
         initproperty QName(PackageNamespace(""),"x")
         jump ofs03da
         ofs0276:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 13
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 13
         subtract
         pushbyte 7
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         dup
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 6
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 9
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         add
         initproperty QName(PackageNamespace(""),"y")
         jump ofs03da
         ofs02d6:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 7
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 7
         subtract
         pushbyte 13
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         dup
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 6
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_hide"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         getlocal0
         pushbyte 3
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         add
         initproperty QName(PackageNamespace(""),"y")
         ofs0332:
         label
         jump ofs03da
         ofs0337:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         setlocal2
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         getlocal2
         ifstrictne ofs034a
         pushbyte 0
         jump ofs03b8
         ofs034a:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         getlocal2
         ifstrictne ofs0358
         pushbyte 1
         jump ofs03b8
         ofs0358:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         getlocal2
         ifstrictne ofs0366
         pushbyte 2
         jump ofs03b8
         ofs0366:
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         getlocal2
         ifstrictne ofs0374
         pushbyte 3
         jump ofs03b8
         ofs0374:
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         getlocal2
         ifstrictne ofs0382
         pushbyte 4
         jump ofs03b8
         ofs0382:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         getlocal2
         ifstrictne ofs0390
         pushbyte 5
         jump ofs03b8
         ofs0390:
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         getlocal2
         ifstrictne ofs039e
         pushbyte 6
         jump ofs03b8
         ofs039e:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         getlocal2
         ifstrictne ofs03ac
         pushbyte 7
         jump ofs03b8
         ofs03ac:
         jump ofs03b6
         pushbyte 8
         jump ofs03b6
         ofs03b6:
         pushbyte 8
         ofs03b8:
         kill 2
         lookupswitch ofs0332, [ofs0006, ofs0072, ofs00de, ofs0135, ofs018c, ofs0201, ofs0276, ofs02d6, ofs0332]
         ofs03da:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFaceDirNotHiding(param1:int, param2:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"setFaceDirNotHiding")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 8
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"offset")
         getproperty QName(PackageNamespace(""),"x")
         convert_i
         setlocal3
         getlex QName(PackageNamespace(""),"offset")
         getproperty QName(PackageNamespace(""),"y")
         convert_i
         setlocal 4
         getlex QName(PackageNamespace(""),"width")
         convert_i
         setlocal 5
         getlex QName(PackageNamespace(""),"height")
         convert_i
         setlocal 6
         jump ofs023f
         ofs0023:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 4
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 32
         pushbyte 4
         subtract
         pushbyte 4
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 16
         pushbyte 3
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_DOWN")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "floor_right_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         jump ofs02eb
         ofs0076:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 4
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 32
         pushbyte 4
         subtract
         pushbyte 4
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         dup
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_UP")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "ceil_right_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         jump ofs02eb
         ofs00c8:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 4
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 8
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 16
         pushbyte 3
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal2
         iftrue ofs0109
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs0109:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         jump ofs02eb
         ofs0126:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 4
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 8
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 16
         pushbyte 3
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal2
         iftrue ofs0167
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs0167:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_RIGHT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         jump ofs02eb
         ofs0184:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 4
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 8
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         dup
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal2
         iftrue ofs01c4
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs01c4:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_up_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         jump ofs02eb
         ofs01e1:
         label
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         pushbyte 4
         add
         setproperty QName(PackageNamespace(""),"y")
         findproperty QName(PackageNamespace(""),"height")
         pushbyte 32
         pushbyte 8
         subtract
         initproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"offset")
         pushbyte 0
         dup
         add
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"width")
         pushbyte 16
         pushbyte 3
         subtract
         initproperty QName(PackageNamespace(""),"width")
         getlocal2
         iftrue ofs0221
         getlocal0
         getlex QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"height")
         getlocal 5
         getlocal 6
         callpropvoid QName(PackageNamespace(""),"changeSnailSizeCheckBounds"), 4
         ofs0221:
         getlocal0
         getlex QName(PackageNamespace(""),"GRAV_LEFT")
         callpropvoid QName(PackageNamespace(""),"setGravityDir"), 1
         getlocal0
         pushstring "rwall_down_move"
         callpropvoid QName(PackageNamespace(""),"playAnim"), 1
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs023a:
         label
         jump ofs02eb
         ofs023f:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         setlocal 7
         getlex QName(PackageNamespace(""),"FACE_FLOOR_LEFT")
         getlocal 7
         ifstrictne ofs0254
         pushbyte 0
         jump ofs02c9
         ofs0254:
         getlex QName(PackageNamespace(""),"FACE_FLOOR_RIGHT")
         getlocal 7
         ifstrictne ofs0263
         pushbyte 1
         jump ofs02c9
         ofs0263:
         getlex QName(PackageNamespace(""),"FACE_CEIL_LEFT")
         getlocal 7
         ifstrictne ofs0272
         pushbyte 2
         jump ofs02c9
         ofs0272:
         getlex QName(PackageNamespace(""),"FACE_CEIL_RIGHT")
         getlocal 7
         ifstrictne ofs0281
         pushbyte 3
         jump ofs02c9
         ofs0281:
         getlex QName(PackageNamespace(""),"FACE_RWALL_UP")
         getlocal 7
         ifstrictne ofs0290
         pushbyte 4
         jump ofs02c9
         ofs0290:
         getlex QName(PackageNamespace(""),"FACE_RWALL_DOWN")
         getlocal 7
         ifstrictne ofs029f
         pushbyte 5
         jump ofs02c9
         ofs029f:
         getlex QName(PackageNamespace(""),"FACE_LWALL_UP")
         getlocal 7
         ifstrictne ofs02ae
         pushbyte 6
         jump ofs02c9
         ofs02ae:
         getlex QName(PackageNamespace(""),"FACE_LWALL_DOWN")
         getlocal 7
         ifstrictne ofs02bd
         pushbyte 7
         jump ofs02c9
         ofs02bd:
         jump ofs02c7
         pushbyte 8
         jump ofs02c7
         ofs02c7:
         pushbyte 8
         ofs02c9:
         kill 7
         lookupswitch ofs023a, [ofs0023, ofs0023, ofs0076, ofs0076, ofs00c8, ofs0126, ofs0184, ofs01e1, ofs023a]
         ofs02eb:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setFaceDir(param1:int, param2:Boolean = false, param3:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"setFaceDir")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlocal1
         equals
         dup
         iffalse ofs0010
         pop
         getlocal2
         not
         ofs0010:
         iffalse ofs0015
         returnvoid
         ofs0015:
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         negate
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         negate
         callpropvoid QName(PackageNamespace(""),"moveSnailCheckBounds"), 2
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsX")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"39"),"_hideOfsY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hidingInShell")
         iffalse ofs004a
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         callpropvoid QName(PackageNamespace(""),"setFaceDirHiding"), 1
         jump ofs0054
         ofs004a:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_faceDir")
         getlocal3
         callpropvoid QName(PackageNamespace(""),"setFaceDirNotHiding"), 2
         ofs0054:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setCurHp(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setCurHp")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         ifngt ofs002a
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         setproperty QName(PackageNamespace(""),"value")
         ofs002a:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"heartHud")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 2
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifnle ofs0051
         getlocal0
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs0051:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getCurHp() : int
      {
         trait method QName(PackageNamespace(""),"getCurHp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_curHp")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getMaxHp() : int
      {
         trait method QName(PackageNamespace(""),"getMaxHp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setMaxHp(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setMaxHp")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         getlex QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
         multiply
         ifngt ofs002e
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         getlex QName(PackageNamespace(""),"MAX_HEART_CONTAINERS")
         multiply
         setproperty QName(PackageNamespace(""),"value")
         ofs002e:
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"heartHud")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hud")
         getproperty QName(PackageNamespace(""),"heartHud")
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callpropvoid QName(PackageNamespace(""),"setCurHp"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHeartContainer() : void
      {
         trait method QName(PackageNamespace(""),"addHeartContainer")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         add
         callpropvoid QName(PackageNamespace(""),"setMaxHp"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedShoot() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedShoot")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         ifne ofs0057
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs002e
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs002e:
         dup
         iftrue ofs0042
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0042:
         dup
         iftrue ofs0056
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0056:
         returnvalue
         ofs0057:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0079
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0079:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedStrafe() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedStrafe")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedShoot() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedShoot")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"firingMode")
         getlex QName(PackageNamespace(""),"FIRING_MODE_NORMAL")
         ifne ofs0057
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs002e
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs002e:
         dup
         iftrue ofs0042
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0042:
         dup
         iftrue ofs0056
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0056:
         returnvalue
         ofs0057:
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs0079
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0079:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"JUMP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_JUMP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"JUMP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_JUMP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedUp() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedUp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"UP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_UP_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedDown() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedDown")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"DOWN_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_DOWN_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedLeft() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedLeft")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"LEFT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_LEFT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function justPressedRight() : Boolean
      {
         trait method QName(PackageNamespace(""),"justPressedRight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"justPressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedUp() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedUp")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"UP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_UP_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedDown() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedDown")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"DOWN_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_DOWN_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedLeft() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedLeft")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"LEFT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_LEFT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function pressedRight() : Boolean
      {
         trait method QName(PackageNamespace(""),"pressedRight")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         dup
         iftrue ofs0024
         pop
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"keys")
         getlex QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         callproperty QName(PackageNamespace(""),"pressed"), 1
         convert_b
         ofs0024:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function saveGame() : void
      {
         trait method QName(PackageNamespace(""),"saveGame")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         coerce QName(PackageNamespace(""),"XMLList")
         setlocal1
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         getproperty Multiname("savex",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_i
         setlocal2
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal1
         getproperty Multiname("savey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_i
         setlocal3
         getlocal0
         getlocal2
         getlocal3
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setSaveCoords"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function saveNoCoords() : void
      {
         trait method QName(PackageNamespace(""),"saveNoCoords")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs000d
         returnvoid
         ofs000d:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartX"), 0
         pushbyte 16
         multiply
         convert_i
         setlocal1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"config")
         callproperty QName(PackageNamespace(""),"getPlayerStartY"), 0
         pushbyte 16
         multiply
         convert_i
         setlocal2
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         coerce QName(PackageNamespace(""),"SaveData")
         setlocal3
         getlocal3
         pushstring "savex"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iffalse ofs0052
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal3
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getproperty Multiname("savex",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_i
         setlocal1
         ofs0052:
         getlocal3
         pushstring "savey"
         callproperty QName(PackageNamespace(""),"isVarSet"), 1
         iffalse ofs006f
         findpropstrict QName(PackageNamespace(""),"int")
         getlocal3
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getproperty Multiname("savey",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         callproperty QName(PackageNamespace(""),"int"), 1
         convert_i
         setlocal2
         ofs006f:
         getlocal0
         getlocal1
         getlocal2
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setSaveCoords"), 3
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setSaveCoords(param1:int, param2:int, param3:Boolean = false) : void
      {
         trait method QName(PackageNamespace(""),"setSaveCoords")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Boolean")
         optional False()
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 5
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"dead")
         convert_b
         dup
         iftrue ofs0010
         pop
         getlex QName(PackageNamespace(""),"active")
         not
         ofs0010:
         iffalse ofs0015
         returnvoid
         ofs0015:
         getlocal3
         iftrue ofs0024
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"savingText")
         callpropvoid QName(PackageNamespace(""),"setSaving"), 0
         ofs0024:
         findpropstrict QName(PackageNamespace(""),"XML")
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<vars/>"
         construct 1
         constructprop QName(PackageNamespace(""),"XML"), 1
         coerce QName(PackageNamespace(""),"XML")
         dup
         setlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<savex>"
         getlocal1
         esc_xelem
         add
         pushstring "</savex>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<savey>"
         getlocal2
         esc_xelem
         add
         pushstring "</savey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<lastWeapon>"
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</lastWeapon>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlex QName(PackageNamespace(""),"firingMode")
         iffalse ofs0089
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<toggleFire>true</toggleFire>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0089:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00a1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasTurbo>true</hasTurbo>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs00a1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00b9
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasHighJump>true</hasHighJump>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs00b9:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00d1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasDevastator>true</hasDevastator>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs00d1:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityShock")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00e9
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasGravityShock>true</hasGravityShock>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs00e9:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs0101
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasShellShield>true</hasShellShield>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0101:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hasGoodEnding")
         iffalse ofs0118
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasGoodEnding>true</hasGoodEnding>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0118:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hideMiniMap")
         iffalse ofs012f
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hideMiniMap>true</hideMiniMap>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs012f:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"hideTab")
         iffalse ofs0146
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hideTab>true</hideTab>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0146:
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<snailType>"
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_snailType")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</snailType>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<maxHp>"
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</maxHp>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         iffalse ofs0196
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledOne>true</bossesKilledOne>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0196:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         iffalse ofs01b2
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledTwo>true</bossesKilledTwo>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs01b2:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 3
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         iffalse ofs01ce
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledThree>true</bossesKilledThree>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs01ce:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossesKilled")
         pushbyte 4
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         iffalse ofs01ea
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bossesKilledFour>true</bossesKilledFour>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs01ea:
         getlocal0
         getproperty QName(PackageNamespace(""),"_easyMode")
         iffalse ofs01ff
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<easyMode>true</easyMode>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs01ff:
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         iffalse ofs0214
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hardMode>true</hardMode>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0214:
         getlocal0
         getproperty QName(PackageNamespace(""),"_insaneMode")
         iffalse ofs0229
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<insaneMode>true</insaneMode>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0229:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         iffalse ofs0243
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWeaponZero>true</hasWeaponZero>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0243:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         iffalse ofs025d
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWeaponOne>true</hasWeaponOne>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs025d:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         iffalse ofs0277
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWeaponTwo>true</hasWeaponTwo>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs0277:
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<gameTime>"
         getlocal0
         getproperty QName(PackageNamespace(""),"gameTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</gameTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<helixFragments>"
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</helixFragments>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenIsis")
         iffalse ofs02ca
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasSeenIsis>"
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenIsis")
         esc_xelem
         add
         pushstring "</hasSeenIsis>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs02ca:
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenHelp")
         iffalse ofs02e9
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasSeenHelp>"
         getlocal0
         getproperty QName(PackageNamespace(""),"hasSeenHelp")
         esc_xelem
         add
         pushstring "</hasSeenHelp>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         ofs02e9:
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonGame>"
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonGame")
         esc_xelem
         add
         pushstring "</hasWonGame>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonHardMode>"
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonHardMode")
         esc_xelem
         add
         pushstring "</hasWonHardMode>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonInsaneMode>"
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonInsaneMode")
         esc_xelem
         add
         pushstring "</hasWonInsaneMode>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasFullClear>"
         getlocal0
         getproperty QName(PackageNamespace(""),"hasFullClear")
         esc_xelem
         add
         pushstring "</hasFullClear>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonBossRush>"
         getlocal0
         getproperty QName(PackageNamespace(""),"hasWonBossRush")
         esc_xelem
         add
         pushstring "</hasWonBossRush>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestBossRushTime>"
         getlocal0
         getproperty QName(PackageNamespace(""),"bestBossRushTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestBossRushTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestMainTime>"
         getlocal0
         getproperty QName(PackageNamespace(""),"bestMainTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestMainTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestHardTime>"
         getlocal0
         getproperty QName(PackageNamespace(""),"bestHardTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestHardTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<bestInsaneTime>"
         getlocal0
         getproperty QName(PackageNamespace(""),"bestInsaneTime")
         getproperty QName(PackageNamespace(""),"value")
         esc_xelem
         add
         pushstring "</bestInsaneTime>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<mapKey>"
         getlex QName(PackageNamespace(""),"MAP_KEY")
         esc_xelem
         add
         pushstring "</mapKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<jumpKey>"
         getlex QName(PackageNamespace(""),"JUMP_KEY")
         esc_xelem
         add
         pushstring "</jumpKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<shootKey>"
         getlex QName(PackageNamespace(""),"SHOOT_KEY")
         esc_xelem
         add
         pushstring "</shootKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<strafeKey>"
         getlex QName(PackageNamespace(""),"STRAFE_KEY")
         esc_xelem
         add
         pushstring "</strafeKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<upKey>"
         getlex QName(PackageNamespace(""),"UP_KEY")
         esc_xelem
         add
         pushstring "</upKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<downKey>"
         getlex QName(PackageNamespace(""),"DOWN_KEY")
         esc_xelem
         add
         pushstring "</downKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<leftKey>"
         getlex QName(PackageNamespace(""),"LEFT_KEY")
         esc_xelem
         add
         pushstring "</leftKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<rightKey>"
         getlex QName(PackageNamespace(""),"RIGHT_KEY")
         esc_xelem
         add
         pushstring "</rightKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<jumpAltKey>"
         getlex QName(PackageNamespace(""),"ALT_JUMP_KEY")
         esc_xelem
         add
         pushstring "</jumpAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<shootAltKey>"
         getlex QName(PackageNamespace(""),"ALT_SHOOT_KEY")
         esc_xelem
         add
         pushstring "</shootAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<strafeAltKey>"
         getlex QName(PackageNamespace(""),"ALT_STRAFE_KEY")
         esc_xelem
         add
         pushstring "</strafeAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<upAltKey>"
         getlex QName(PackageNamespace(""),"ALT_UP_KEY")
         esc_xelem
         add
         pushstring "</upAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<downAltKey>"
         getlex QName(PackageNamespace(""),"ALT_DOWN_KEY")
         esc_xelem
         add
         pushstring "</downAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<leftAltKey>"
         getlex QName(PackageNamespace(""),"ALT_LEFT_KEY")
         esc_xelem
         add
         pushstring "</leftAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<rightAltKey>"
         getlex QName(PackageNamespace(""),"ALT_RIGHT_KEY")
         esc_xelem
         add
         pushstring "</rightAltKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weap1Key>"
         getlex QName(PackageNamespace(""),"WEAPON_1_KEY")
         esc_xelem
         add
         pushstring "</weap1Key>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weap2Key>"
         getlex QName(PackageNamespace(""),"WEAPON_2_KEY")
         esc_xelem
         add
         pushstring "</weap2Key>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weap3Key>"
         getlex QName(PackageNamespace(""),"WEAPON_3_KEY")
         esc_xelem
         add
         pushstring "</weap3Key>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weapNextKey>"
         getlex QName(PackageNamespace(""),"WEAPON_NEXT_KEY")
         esc_xelem
         add
         pushstring "</weapNextKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlocal 4
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<weapPrevKey>"
         getlex QName(PackageNamespace(""),"WEAPON_PREV_KEY")
         esc_xelem
         add
         pushstring "</weapPrevKey>"
         add
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         deleteproperty Multiname("vars",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         getproperty QName(PackageNamespace(""),"xml")
         getlocal 4
         setproperty Multiname("vars",[PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"uniqueBlocks")
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         getlocal3
         iftrue ofs05c4
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"savingText")
         callpropvoid QName(PackageNamespace(""),"setSaved"), 0
         ofs05c4:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addWeapon(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"addWeapon")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"hasAnyWeapon"), 0
         not
         dup
         iffalse ofs0015
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         not
         ofs0015:
         dup
         iffalse ofs0020
         pop
         getlocal0
         getproperty QName(PackageNamespace(""),"_hardMode")
         not
         ofs0020:
         convert_b
         setlocal2
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal1
         pushtrue
         setproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_currentWeapon")
         getproperty QName(PackageNamespace(""),"value")
         getlocal1
         ifnlt ofs003d
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"switchToWeapon"), 1
         ofs003d:
         getlocal2
         iffalse ofs0057
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"controlHelp")
         callpropvoid QName(PackageNamespace(""),"updateLetterGraphics"), 0
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"controlHelp")
         pushtrue
         callpropvoid QName(PackageNamespace(""),"show"), 1
         ofs0057:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasWeapon(param1:int) : Boolean
      {
         trait method QName(PackageNamespace(""),"hasWeapon")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         getlocal1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getHasDevastator() : Boolean
      {
         trait method QName(PackageNamespace(""),"getHasDevastator")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasArmor() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasArmor")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasGravityJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasGravityJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function hasHighJump() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasHighJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function addTurbo() : void
      {
         trait method QName(PackageNamespace(""),"addTurbo")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         callpropvoid QName(PrivateNamespace(null,"39"),"setHasTurbo"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addDevastator() : void
      {
         trait method QName(PackageNamespace(""),"addDevastator")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setHasDevastator"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addGravityJump() : void
      {
         trait method QName(PackageNamespace(""),"addGravityJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"hasArmor"), 0
         iftrue ofs0013
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_GRAVITY")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         ofs0013:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addColdFoot() : void
      {
         trait method QName(PackageNamespace(""),"addColdFoot")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callproperty QName(PackageNamespace(""),"hasGravityJump"), 0
         not
         dup
         iffalse ofs0014
         pop
         getlocal0
         callproperty QName(PackageNamespace(""),"hasArmor"), 0
         not
         ofs0014:
         iffalse ofs0020
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_ICE")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         ofs0020:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHighJump() : void
      {
         trait method QName(PackageNamespace(""),"addHighJump")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setHighJump"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasDevastator(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasDevastator")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setHelixFragments(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"setHelixFragments")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         getlex QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
         ifngt ofs0022
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getlex QName(PackageNamespace(""),"MAX_HELIX_FRAGMENTS")
         setproperty QName(PackageNamespace(""),"value")
         ofs0022:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         iffalse ofs00b9
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 0
         ifne ofs007b
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixSprite")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushfalse
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushstring "x "
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         setproperty QName(PackageNamespace(""),"text")
         jump ofs00b9
         ofs007b:
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixSprite")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushtrue
         setproperty QName(PackageNamespace(""),"visible")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"miniMap")
         getproperty QName(PackageNamespace(""),"subscreen")
         getproperty QName(PackageNamespace(""),"helixText")
         pushstring "x "
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         setproperty QName(PackageNamespace(""),"text")
         ofs00b9:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getHelixFragments() : int
      {
         trait method QName(PackageNamespace(""),"getHelixFragments")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function getHasShellShield() : Boolean
      {
         trait method QName(PackageNamespace(""),"getHasShellShield")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasShellShield(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasShellShield")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs000b
         returnvoid
         ofs000b:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasShellShield")
         getlocal1
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addShellShield() : void
      {
         trait method QName(PackageNamespace(""),"addShellShield")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iftrue ofs0010
         getlocal0
         pushtrue
         callpropvoid QName(PackageNamespace(""),"setHasShellShield"), 1
         ofs0010:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setEasyMode(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setEasyMode")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setproperty QName(PackageNamespace(""),"_easyMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setHardMode(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHardMode")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setproperty QName(PackageNamespace(""),"_hardMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setInsaneMode(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setInsaneMode")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setproperty QName(PackageNamespace(""),"_insaneMode")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function hasGravityShock() : Boolean
      {
         trait method QName(PackageNamespace(""),"hasGravityShock")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityShock")
         getproperty QName(PackageNamespace(""),"value")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function setHasGravityShock(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"setHasGravityShock")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addGravityShock() : void
      {
         trait method QName(PackageNamespace(""),"addGravityShock")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addHelixFragment() : void
      {
         trait method QName(PackageNamespace(""),"addHelixFragment")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         pushbyte 1
         add
         callpropvoid QName(PackageNamespace(""),"setHelixFragments"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function getPercentComplete() : int
      {
         trait method QName(PackageNamespace(""),"getPercentComplete")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"int")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 0
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         not
         iftrue ofs0017
         pushbyte 1
         coerce_a
         jump ofs001a
         ofs0017:
         pushbyte 0
         coerce_a
         ofs001a:
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 1
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         not
         iftrue ofs002f
         pushbyte 1
         coerce_a
         jump ofs0032
         ofs002f:
         pushbyte 0
         coerce_a
         ofs0032:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasWeapon")
         pushbyte 2
         getproperty MultinameL([PrivateNamespace(null,"39"),PackageNamespace(""),PrivateNamespace(null,"397"),PackageInternalNs(""),Namespace("http://adobe.com/AS3/2006/builtin"),PackageNamespace("org.flixel"),ProtectedNamespace("Player"),StaticProtectedNs("Player"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         not
         iftrue ofs0048
         pushbyte 1
         coerce_a
         jump ofs004b
         ofs0048:
         pushbyte 0
         coerce_a
         ofs004b:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasDevastator")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs005e
         pushbyte 1
         coerce_a
         jump ofs0061
         ofs005e:
         pushbyte 0
         coerce_a
         ofs0061:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasTurbo")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs0074
         pushbyte 1
         coerce_a
         jump ofs0077
         ofs0074:
         pushbyte 0
         coerce_a
         ofs0077:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasHighJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs008a
         pushbyte 1
         coerce_a
         jump ofs008d
         ofs008a:
         pushbyte 0
         coerce_a
         ofs008d:
         add
         getlocal0
         getproperty QName(PackageNamespace(""),"_maxHp")
         getproperty QName(PackageNamespace(""),"value")
         getlocal0
         callproperty QName(PackageNamespace(""),"hpPerHeart"), 0
         divide
         add
         getlex QName(PackageNamespace(""),"STARTING_MAX_HEARTS")
         subtract
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasColdFoot")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00b2
         pushbyte 1
         coerce_a
         jump ofs00b5
         ofs00b2:
         pushbyte 0
         coerce_a
         ofs00b5:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasGravityJump")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00c8
         pushbyte 1
         coerce_a
         jump ofs00cb
         ofs00c8:
         pushbyte 0
         coerce_a
         ofs00cb:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00de
         pushbyte 1
         coerce_a
         jump ofs00e1
         ofs00de:
         pushbyte 0
         coerce_a
         ofs00e1:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasShellShield")
         getproperty QName(PackageNamespace(""),"value")
         iffalse ofs00f4
         pushbyte 1
         coerce_a
         jump ofs00f7
         ofs00f4:
         pushbyte 0
         coerce_a
         ofs00f7:
         add
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_helixFragments")
         getproperty QName(PackageNamespace(""),"value")
         add
         convert_i
         setlocal1
         getlocal1
         pushbyte 100
         multiply
         getlocal0
         getproperty QName(PackageNamespace(""),"_slugMode")
         iffalse ofs0115
         pushbyte 50
         coerce_a
         jump ofs0118
         ofs0115:
         pushbyte 51
         coerce_a
         ofs0118:
         divide
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isParalyzed() : Boolean
      {
         trait method QName(PackageNamespace(""),"isParalyzed")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function paralyze(param1:Boolean) : void
      {
         trait method QName(PackageNamespace(""),"paralyze")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Boolean")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"39"),"_paralyzed")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function addArmor() : void
      {
         trait method QName(PackageNamespace(""),"addArmor")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PackageNamespace(""),"SNAILTYPE_METAL")
         callpropvoid QName(PackageNamespace(""),"setSnailType"), 1
         getlocal0
         getproperty QName(PrivateNamespace(null,"39"),"_hasArmor")
         pushtrue
         setproperty QName(PackageNamespace(""),"value")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 7

code
getlocal0
pushscope
findpropstrict Multiname("Player",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
newclass 114
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"Player")
returnvoid
end ; code
end ; body
end ; method

