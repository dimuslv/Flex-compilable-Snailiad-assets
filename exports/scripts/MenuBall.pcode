package
{
   import org.flixel.FlxG;
   import org.flixel.FlxSprite;
   
   public class MenuBall extends FlxSprite
   {
      private static const WIDTH:int = 4;
      
      private static const HEIGHT:int = 4;
      
      public static const BOUNCE_WALL:int = 0;
      
      public static const BOUNCE_PADDLE:int = 1;
      
      public static const SEC_PER_TICK:Number = 0.001;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 7
      maxscopedepth 8
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"193"),"WIDTH")
      pushbyte 4
      initproperty QName(PrivateNamespace(null,"193"),"WIDTH")
      findproperty QName(PrivateNamespace(null,"193"),"HEIGHT")
      pushbyte 4
      initproperty QName(PrivateNamespace(null,"193"),"HEIGHT")
      findproperty QName(PackageNamespace(""),"BOUNCE_WALL")
      pushbyte 0
      initproperty QName(PackageNamespace(""),"BOUNCE_WALL")
      findproperty QName(PackageNamespace(""),"BOUNCE_PADDLE")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"BOUNCE_PADDLE")
      findproperty QName(PackageNamespace(""),"SEC_PER_TICK")
      pushdouble 0.001
      initproperty QName(PackageNamespace(""),"SEC_PER_TICK")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public var elapsed:Number = 0;
      
      public function MenuBall()
      {
         method
         name null
         returns null
         
         body
         maxstack 6
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"PlayerBullet1")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"193"),"WIDTH")
         getlex QName(PrivateNamespace(null,"193"),"HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"193"),"WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"193"),"HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         getlex QName(PackageNamespace(""),"scrollFactor")
         getlex QName(PackageNamespace(""),"scrollFactor")
         pushbyte 0
         dup
         setlocal1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         kill 1
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function playBounceFx(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"playBounceFx")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function bounceX(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"bounceX")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"playBounceFx"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function bounceY(param1:int) : void
      {
         trait method QName(PackageNamespace(""),"bounceY")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlocal0
         getlocal1
         callpropvoid QName(PackageNamespace(""),"playBounceFx"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_MENU")
         ifeq ofs0017
         getlocal0
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs0017:
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         setproperty QName(PackageNamespace(""),"elapsed")
         jump ofs0057
         ofs002a:
         label
         getlocal0
         getlocal0
         getproperty QName(PackageNamespace(""),"elapsed")
         getlex QName(PackageNamespace(""),"SEC_PER_TICK")
         subtract
         setproperty QName(PackageNamespace(""),"elapsed")
         findproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"SEC_PER_TICK")
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"SEC_PER_TICK")
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         ofs0057:
         getlocal0
         getproperty QName(PackageNamespace(""),"elapsed")
         pushbyte 0
         ifgt ofs002a
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         greaterthan
         dup
         iffalse ofs0077
         pop
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         greaterthan
         ofs0077:
         iffalse ofs0087
         getlocal0
         getlex QName(PackageNamespace(""),"BOUNCE_WALL")
         callpropvoid QName(PackageNamespace(""),"bounceX"), 1
         jump ofs00ef
         ofs0087:
         getlex QName(PackageNamespace(""),"x")
         pushbyte 0
         lessthan
         dup
         iffalse ofs009a
         pop
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         lessthan
         ofs009a:
         iffalse ofs00aa
         getlocal0
         getlex QName(PackageNamespace(""),"BOUNCE_WALL")
         callpropvoid QName(PackageNamespace(""),"bounceX"), 1
         jump ofs00ef
         ofs00aa:
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         greaterthan
         dup
         iffalse ofs00c0
         pop
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         greaterthan
         ofs00c0:
         iffalse ofs00d0
         getlocal0
         getlex QName(PackageNamespace(""),"BOUNCE_WALL")
         callpropvoid QName(PackageNamespace(""),"bounceY"), 1
         jump ofs00ef
         ofs00d0:
         getlex QName(PackageNamespace(""),"y")
         pushbyte 0
         lessthan
         dup
         iffalse ofs00e3
         pop
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"y")
         pushbyte 0
         lessthan
         ofs00e3:
         iffalse ofs00ef
         getlocal0
         getlex QName(PackageNamespace(""),"BOUNCE_WALL")
         callpropvoid QName(PackageNamespace(""),"bounceY"), 1
         ofs00ef:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function kill() : void
      {
         trait method QName(PackageNamespace(""),"kill")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 8
         maxscopedepth 9
         
         code
         getlocal0
         pushscope
         getlocal0
         callsupervoid QName(PackageNamespace(""),"kill"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 7

code
getlocal0
pushscope
findpropstrict Multiname("MenuBall",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
newclass 195
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"MenuBall")
returnvoid
end ; code
end ; body
end ; method

