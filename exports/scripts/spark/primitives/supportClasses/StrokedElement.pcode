package spark.primitives.supportClasses
{
   import flash.display.Graphics;
   import flash.display.LineScaleMode;
   import flash.display.Sprite;
   import flash.events.EventDispatcher;
   import flash.geom.Point;
   import flash.geom.Rectangle;
   import mx.core.mx_internal;
   import mx.events.PropertyChangeEvent;
   import mx.graphics.IStroke;
   
   use namespace mx_internal;
   
   public class StrokedElement extends GraphicElement
   {
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal0
      pushscope
      findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      pushstring "4.1.0.16076"
      initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      mx_internal var _stroke:IStroke;
      
      public function StrokedElement()
      {
         method
         name null
         returns null
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      [Bindable("propertyChange")]
      public function get stroke() : IStroke
      {
         trait getter QName(PackageNamespace(""),"stroke")
         flag METADATA
         metadata "Bindable"
         item null "propertyChange"
         end ; metadata
         dispid 0
         method
         name null
         returns QName(PackageNamespace("mx.graphics"),"IStroke")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_stroke")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function set stroke(param1:IStroke) : void
      {
         trait setter QName(PackageNamespace(""),"stroke")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.graphics"),"IStroke")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.events"),"EventDispatcher")
         setlocal2
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_stroke")
         coerce QName(PackageNamespace("mx.graphics"),"IStroke")
         setlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_stroke")
         getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
         astypelate
         coerce QName(PackageNamespace("flash.events"),"EventDispatcher")
         setlocal2
         getlocal2
         iffalse ofs0
         getlocal2
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getproperty QName(PackageNamespace(""),"PROPERTY_CHANGE")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"stroke_propertyChangeHandler")
         callpropvoid QName(PackageNamespace(""),"removeEventListener"), 2
         ofs0:
         getlocal0
         getlocal1
         initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_stroke")
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_stroke")
         getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
         astypelate
         coerce QName(PackageNamespace("flash.events"),"EventDispatcher")
         setlocal2
         getlocal2
         iffalse ofs1
         getlocal2
         getlex QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         getproperty QName(PackageNamespace(""),"PROPERTY_CHANGE")
         getlocal0
         getproperty QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"stroke_propertyChangeHandler")
         callpropvoid QName(PackageNamespace(""),"addEventListener"), 2
         ofs1:
         findpropstrict QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"dispatchPropertyChangeEvent")
         pushstring "stroke"
         getlocal3
         getlocal0
         getproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_stroke")
         callpropvoid QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"dispatchPropertyChangeEvent"), 3
         findpropstrict QName(PackageNamespace(""),"invalidateDisplayList")
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         findpropstrict QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"invalidateParentSizeAndDisplayList")
         callpropvoid QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"invalidateParentSizeAndDisplayList"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override protected function updateDisplayList(param1:Number, param2:Number) : void
      {
         trait method QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"updateDisplayList")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 4
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlex QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"drawnDisplayObject")
         not
         dup
         iftrue ofs0
         pop
         getlex QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"drawnDisplayObject")
         getlex QName(PackageNamespace("flash.display"),"Sprite")
         istypelate
         not
         ofs0:
         iffalse ofs1
         returnvoid
         ofs1:
         getlex QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"drawnDisplayObject")
         getlex QName(PackageNamespace("flash.display"),"Sprite")
         astypelate
         getproperty QName(PackageNamespace(""),"graphics")
         coerce QName(PackageNamespace("flash.display"),"Graphics")
         setlocal3
         getlocal0
         getlocal3
         callpropvoid QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"beginDraw"), 1
         getlocal0
         getlocal3
         callpropvoid QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"draw"), 1
         getlocal0
         getlocal3
         callpropvoid QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"endDraw"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function beginDraw(param1:Graphics) : void
      {
         trait method QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"beginDraw")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"Graphics")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal2
         getlocal0
         getproperty QName(PackageNamespace(""),"stroke")
         iffalse ofs0
         getlocal0
         callproperty QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"getStrokeBounds"), 0
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal2
         getlocal2
         getlex QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"drawX")
         getlex QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"drawY")
         callpropvoid QName(PackageNamespace(""),"offset"), 2
         getlocal0
         getproperty QName(PackageNamespace(""),"stroke")
         getlocal1
         getlocal2
         findpropstrict QName(PackageNamespace("flash.geom"),"Point")
         getlex QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"drawX")
         getlex QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"drawY")
         constructprop QName(PackageNamespace("flash.geom"),"Point"), 2
         callpropvoid QName(Namespace("mx.graphics:IStroke"),"apply"), 3
         jump ofs1
         ofs0:
         getlocal1
         callpropvoid QName(PackageNamespace(""),"lineStyle"), 0
         ofs1:
         getlocal1
         pushbyte 0
         dup
         callpropvoid QName(PackageNamespace(""),"beginFill"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function draw(param1:Graphics) : void
      {
         trait method QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"draw")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"Graphics")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function endDraw(param1:Graphics) : void
      {
         trait method QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"endDraw")
         dispid 0
         method
         name null
         param QName(PackageNamespace("flash.display"),"Graphics")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlocal1
         callpropvoid QName(PackageNamespace(""),"endFill"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      protected function getStrokeBounds() : Rectangle
      {
         trait method QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"getStrokeBounds")
         dispid 0
         method
         name null
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlocal0
         pushfalse
         callproperty QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"getStrokeExtents"), 1
         coerce QName(PackageNamespace("flash.geom"),"Rectangle")
         setlocal1
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"measuredX")
         add
         setproperty QName(PackageNamespace(""),"x")
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"width")
         getlex QName(PackageNamespace(""),"width")
         add
         setproperty QName(PackageNamespace(""),"width")
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"measuredY")
         add
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         getlocal1
         getproperty QName(PackageNamespace(""),"height")
         getlex QName(PackageNamespace(""),"height")
         add
         setproperty QName(PackageNamespace(""),"height")
         getlocal1
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override protected function getStrokeExtents(param1:Boolean = true) : Rectangle
      {
         trait method QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"getStrokeExtents")
         flag OVERRIDE
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"Boolean")
         optional True()
         returns QName(PackageNamespace("flash.geom"),"Rectangle")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PackageNamespace(""),"stroke")
         iftrue ofs0
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushbyte 0
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         returnvalue
         ofs0:
         getlocal0
         getproperty QName(PackageNamespace(""),"stroke")
         getproperty QName(Namespace("mx.graphics:IStroke"),"weight")
         convert_d
         setlocal2
         getlocal2
         pushbyte 0
         ifne ofs1
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushbyte 1
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushbyte 1
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushdouble -0.5
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         pushdouble -0.5
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         returnvalue
         ofs1:
         getlocal0
         getproperty QName(PackageNamespace(""),"stroke")
         getproperty QName(Namespace("mx.graphics:IStroke"),"scaleMode")
         coerce_s
         setlocal3
         getlocal3
         not
         dup
         iftrue ofs2
         pop
         getlocal3
         getlex QName(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty QName(PackageNamespace(""),"NONE")
         equals
         ofs2:
         dup
         iftrue ofs3
         pop
         getlocal1
         not
         ofs3:
         iffalse ofs4
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         negate
         pushdouble 0.5
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         negate
         pushdouble 0.5
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         returnvalue
         ofs4:
         getlex QName(PackageNamespace(""),"scaleX")
         convert_d
         setlocal 4
         getlex QName(PackageNamespace(""),"scaleY")
         convert_d
         setlocal 5
         getlocal3
         getlex QName(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty QName(PackageNamespace(""),"NORMAL")
         ifne ofs5
         getlocal 4
         getlocal 5
         ifne ofs6
         getlocal2
         getlocal 4
         multiply
         convert_d
         setlocal2
         jump ofs7
         ofs6:
         getlocal2
         getlex QName(PackageNamespace(""),"Math")
         pushdouble 0.5
         getlocal 4
         getlocal 4
         multiply
         getlocal 5
         getlocal 5
         multiply
         add
         multiply
         callproperty QName(PackageNamespace(""),"sqrt"), 1
         multiply
         convert_d
         setlocal2
         ofs7:
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         pushdouble -0.5
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         pushdouble -0.5
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         returnvalue
         jump ofs5
         ofs5:
         getlocal3
         getlex QName(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty QName(PackageNamespace(""),"HORIZONTAL")
         ifne ofs8
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         getlocal 4
         multiply
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         getlocal 4
         multiply
         pushdouble -0.5
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         pushdouble -0.5
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         returnvalue
         ofs8:
         getlocal3
         getlex QName(PackageNamespace("flash.display"),"LineScaleMode")
         getproperty QName(PackageNamespace(""),"VERTICAL")
         ifne ofs9
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         setproperty QName(PackageNamespace(""),"width")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         getlocal 5
         multiply
         setproperty QName(PackageNamespace(""),"height")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         pushdouble -0.5
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         getlocal2
         getlocal 5
         multiply
         pushdouble -0.5
         multiply
         setproperty QName(PackageNamespace(""),"y")
         getlex QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"_strokeExtents")
         returnvalue
         ofs9:
         pushnull
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      protected function stroke_propertyChangeHandler(param1:PropertyChangeEvent) : void
      {
         trait method QName(ProtectedNamespace("spark.primitives.supportClasses:StrokedElement"),"stroke_propertyChangeHandler")
         dispid 0
         method
         name null
         param QName(PackageNamespace("mx.events"),"PropertyChangeEvent")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 3
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"invalidateDisplayList")
         callpropvoid QName(PackageNamespace(""),"invalidateDisplayList"), 0
         jump ofs0
         ofs1:
         label
         findpropstrict QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"invalidateParentSizeAndDisplayList")
         callpropvoid QName(ProtectedNamespace("spark.primitives.supportClasses:GraphicElement"),"invalidateParentSizeAndDisplayList"), 0
         jump ofs2
         ofs3:
         label
         jump ofs2
         ofs0:
         getlocal1
         getproperty QName(PackageNamespace(""),"property")
         setlocal2
         pushstring "weight"
         getlocal2
         ifstrictne ofs4
         pushbyte 0
         jump ofs5
         ofs4:
         pushstring "scaleMode"
         getlocal2
         ifstrictne ofs6
         pushbyte 1
         jump ofs5
         ofs6:
         jump ofs7
         pushbyte 2
         jump ofs7
         ofs7:
         pushbyte 2
         ofs5:
         kill 2
         lookupswitch ofs3, [ofs1, ofs1, ofs3]
         ofs2:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 5

code
getlocal0
pushscope
findpropstrict Multiname("StrokedElement",[PackageNamespace("spark.primitives.supportClasses")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("flash.events"),"EventDispatcher")
pushscope
getlex QName(PackageNamespace("spark.primitives.supportClasses"),"GraphicElement")
pushscope
getlex QName(PackageNamespace("spark.primitives.supportClasses"),"GraphicElement")
newclass #StrokedElement
popscope
popscope
popscope
initproperty QName(PackageNamespace("spark.primitives.supportClasses"),"StrokedElement")
returnvoid
end ; code
end ; body
end ; method

