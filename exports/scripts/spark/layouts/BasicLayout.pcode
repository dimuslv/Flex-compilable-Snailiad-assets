package spark.layouts
{
   import mx.core.ILayoutElement;
   import mx.core.IVisualElement;
   import mx.core.mx_internal;
   import mx.resources.ResourceManager;
   import spark.components.supportClasses.GroupBase;
   import spark.layouts.supportClasses.LayoutBase;
   import spark.layouts.supportClasses.LayoutElementHelper;
   
   use namespace mx_internal;
   
   public class BasicLayout extends LayoutBase
   {
      mx_internal static const VERSION:String = "4.1.0.16076";
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 5
      maxscopedepth 6
      
      code
      getlocal0
      pushscope
      findproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      pushstring "4.1.0.16076"
      initproperty QName(Namespace("http://www.adobe.com/2006/flex/mx/internal"),"VERSION")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public function BasicLayout()
      {
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      private static function constraintsDetermineWidth(param1:ILayoutElement) : Boolean
      {
         trait method QName(PrivateNamespace(null,"64"),"constraintsDetermineWidth")
         flag FINAL
         dispid 3
         method
         name null
         param QName(PackageNamespace("mx.core"),"ILayoutElement")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         getproperty QName(Namespace("mx.core:ILayoutElement"),"percentWidth")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iftrue ofs0040
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal1
         getproperty QName(Namespace("mx.core:ILayoutElement"),"left")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs0040
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal1
         getproperty QName(Namespace("mx.core:ILayoutElement"),"right")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs0040:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function constraintsDetermineHeight(param1:ILayoutElement) : Boolean
      {
         trait method QName(PrivateNamespace(null,"64"),"constraintsDetermineHeight")
         flag FINAL
         dispid 4
         method
         name null
         param QName(PackageNamespace("mx.core"),"ILayoutElement")
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 3
         localcount 2
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal1
         getproperty QName(Namespace("mx.core:ILayoutElement"),"percentHeight")
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iftrue ofs0040
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal1
         getproperty QName(Namespace("mx.core:ILayoutElement"),"top")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs0040
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal1
         getproperty QName(Namespace("mx.core:ILayoutElement"),"bottom")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs0040:
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private static function maxSizeToFitIn(param1:Number, param2:Number, param3:Number, param4:Number, param5:Number) : Number
      {
         trait method QName(PrivateNamespace(null,"64"),"maxSizeToFitIn")
         flag FINAL
         dispid 5
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"Number")
         
         body
         maxstack 4
         localcount 6
         initscopedepth 5
         maxscopedepth 6
         
         code
         getlocal0
         pushscope
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal2
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs001c
         getlocal1
         pushbyte 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         callproperty QName(PackageNamespace(""),"abs"), 1
         multiply
         subtract
         returnvalue
         ofs001c:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal3
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs002c
         getlocal1
         getlocal3
         subtract
         returnvalue
         ofs002c:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 4
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs003e
         getlocal1
         getlocal 4
         subtract
         returnvalue
         ofs003e:
         getlocal1
         getlocal 5
         subtract
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      private function checkUseVirtualLayout() : void
      {
         trait method QName(PrivateNamespace(null,"64"),"checkUseVirtualLayout")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"useVirtualLayout")
         iffalse ofs0022
         findpropstrict QName(PackageNamespace(""),"Error")
         getlex QName(PackageNamespace("mx.resources"),"ResourceManager")
         callproperty QName(PackageNamespace(""),"getInstance"), 0
         pushstring "layout"
         pushstring "basicLayoutNotVirtualized"
         callproperty QName(Namespace("mx.resources:IResourceManager"),"getString"), 2
         constructprop QName(PackageNamespace(""),"Error"), 1
         throw
         ofs0022:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function measure() : void
      {
         trait method QName(PackageNamespace(""),"measure")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 5
         localcount 22
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"ILayoutElement")
         setlocal 8
         pushnan
         setlocal 9
         pushnan
         setlocal 10
         pushnan
         setlocal 11
         pushnan
         setlocal 12
         pushnan
         setlocal 13
         pushnan
         setlocal 14
         pushnan
         setlocal 15
         pushnan
         setlocal 16
         pushnan
         setlocal 17
         pushnan
         setlocal 18
         pushnan
         setlocal 19
         pushnan
         setlocal 20
         pushnan
         setlocal 21
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"64"),"checkUseVirtualLayout"), 0
         getlocal0
         callsupervoid QName(PackageNamespace(""),"measure"), 0
         getlex QName(PackageNamespace(""),"target")
         coerce QName(PackageNamespace("spark.components.supportClasses"),"GroupBase")
         setlocal1
         getlocal1
         iftrue ofs0046
         returnvoid
         ofs0046:
         pushbyte 0
         convert_d
         setlocal2
         pushbyte 0
         convert_d
         setlocal3
         pushbyte 0
         convert_d
         setlocal 4
         pushbyte 0
         convert_d
         setlocal 5
         getlocal1
         getproperty QName(PackageNamespace(""),"numElements")
         convert_i
         setlocal 6
         pushbyte 0
         setlocal 7
         jump ofs0308
         ofs0067:
         label
         getlocal1
         getlocal 7
         callproperty QName(PackageNamespace(""),"getElementAt"), 1
         coerce QName(PackageNamespace("mx.core"),"ILayoutElement")
         dup
         setlocal 8
         not
         dup
         iftrue ofs0082
         pop
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"includeInLayout")
         not
         ofs0082:
         iffalse ofs008a
         jump ofs0306
         ofs008a:
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"horizontalCenter")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 9
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"verticalCenter")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 10
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"baseline")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 11
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"left")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 12
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"right")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 13
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"top")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 14
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"bottom")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 15
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 12
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs010d
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 13
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs010d:
         iffalse ofs011d
         getlocal 12
         getlocal 13
         add
         convert_d
         setlocal 16
         jump ofs01a4
         ofs011d:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 9
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs013d
         getlex QName(PackageNamespace(""),"Math")
         getlocal 9
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushbyte 2
         multiply
         convert_d
         setlocal 16
         jump ofs01a4
         ofs013d:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 12
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iftrue ofs0157
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 13
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs0157:
         iffalse ofs0195
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 12
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs016f
         pushbyte 0
         convert_d
         jump ofs0172
         ofs016f:
         getlocal 12
         convert_d
         ofs0172:
         convert_d
         dup
         setlocal 16
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 13
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs018a
         pushbyte 0
         coerce_a
         jump ofs018d
         ofs018a:
         getlocal 13
         coerce_a
         ofs018d:
         add
         convert_d
         setlocal 16
         jump ofs01a4
         ofs0195:
         getlocal 8
         getlex QName(PackageNamespace(""),"NaN")
         getlex QName(PackageNamespace(""),"NaN")
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getBoundsXAtSize"), 2
         convert_d
         setlocal 16
         ofs01a4:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 14
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs01be
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 15
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs01be:
         iffalse ofs01ce
         getlocal 14
         getlocal 15
         add
         convert_d
         setlocal 17
         jump ofs0278
         ofs01ce:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 10
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs01ee
         getlex QName(PackageNamespace(""),"Math")
         getlocal 10
         callproperty QName(PackageNamespace(""),"abs"), 1
         pushbyte 2
         multiply
         convert_d
         setlocal 17
         jump ofs0278
         ofs01ee:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 11
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0211
         getlex QName(PackageNamespace(""),"Math")
         getlocal 11
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"baselinePosition")
         subtract
         callproperty QName(PackageNamespace(""),"round"), 1
         convert_d
         setlocal 17
         jump ofs0278
         ofs0211:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 14
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iftrue ofs022b
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 15
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs022b:
         iffalse ofs0269
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 14
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs0243
         pushbyte 0
         convert_d
         jump ofs0246
         ofs0243:
         getlocal 14
         convert_d
         ofs0246:
         convert_d
         dup
         setlocal 17
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 15
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs025e
         pushbyte 0
         coerce_a
         jump ofs0261
         ofs025e:
         getlocal 15
         coerce_a
         ofs0261:
         add
         convert_d
         setlocal 17
         jump ofs0278
         ofs0269:
         getlocal 8
         getlex QName(PackageNamespace(""),"NaN")
         getlex QName(PackageNamespace(""),"NaN")
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getBoundsYAtSize"), 2
         convert_d
         setlocal 17
         ofs0278:
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getPreferredBoundsWidth"), 0
         convert_d
         setlocal 18
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getPreferredBoundsHeight"), 0
         convert_d
         setlocal 19
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal 16
         getlocal 18
         add
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal2
         getlex QName(PackageNamespace(""),"Math")
         getlocal3
         getlocal 17
         getlocal 19
         add
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal3
         findpropstrict QName(PrivateNamespace(null,"64"),"constraintsDetermineWidth")
         getlocal 8
         callproperty QName(PrivateNamespace(null,"64"),"constraintsDetermineWidth"), 1
         iffalse ofs02c0
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMinBoundsWidth"), 0
         convert_d
         jump ofs02c3
         ofs02c0:
         getlocal 18
         convert_d
         ofs02c3:
         convert_d
         setlocal 20
         findpropstrict QName(PrivateNamespace(null,"64"),"constraintsDetermineHeight")
         getlocal 8
         callproperty QName(PrivateNamespace(null,"64"),"constraintsDetermineHeight"), 1
         iffalse ofs02de
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMinBoundsHeight"), 0
         convert_d
         jump ofs02e1
         ofs02de:
         getlocal 19
         convert_d
         ofs02e1:
         convert_d
         setlocal 21
         getlex QName(PackageNamespace(""),"Math")
         getlocal 4
         getlocal 16
         getlocal 20
         add
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 4
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlocal 17
         getlocal 21
         add
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 5
         ofs0306:
         inclocal_i 7
         ofs0308:
         getlocal 7
         getlocal 6
         iflt ofs0067
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal 4
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"ceil"), 1
         setproperty QName(PackageNamespace(""),"measuredWidth")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlex QName(PackageNamespace(""),"Math")
         getlocal3
         getlocal 5
         callproperty QName(PackageNamespace(""),"max"), 2
         callproperty QName(PackageNamespace(""),"ceil"), 1
         setproperty QName(PackageNamespace(""),"measuredHeight")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 4
         callproperty QName(PackageNamespace(""),"ceil"), 1
         setproperty QName(PackageNamespace(""),"measuredMinWidth")
         getlocal1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         callproperty QName(PackageNamespace(""),"ceil"), 1
         setproperty QName(PackageNamespace(""),"measuredMinHeight")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function updateDisplayList(param1:Number, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"updateDisplayList")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 8
         localcount 28
         initscopedepth 6
         maxscopedepth 7
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace("mx.core"),"ILayoutElement")
         setlocal 8
         pushnan
         setlocal 9
         pushnan
         setlocal 10
         pushnan
         setlocal 11
         pushnan
         setlocal 12
         pushnan
         setlocal 13
         pushnan
         setlocal 14
         pushnan
         setlocal 15
         pushnan
         setlocal 16
         pushnan
         setlocal 17
         pushnan
         setlocal 18
         pushnan
         setlocal 19
         pushnan
         setlocal 20
         pushnan
         setlocal 21
         pushnan
         setlocal 22
         pushnan
         setlocal 23
         pushnan
         setlocal 24
         pushnan
         setlocal 25
         pushnan
         setlocal 26
         pushnan
         setlocal 27
         getlocal0
         callpropvoid QName(PrivateNamespace(null,"64"),"checkUseVirtualLayout"), 0
         getlocal0
         getlocal1
         getlocal2
         callsupervoid QName(PackageNamespace(""),"updateDisplayList"), 2
         getlex QName(PackageNamespace(""),"target")
         coerce QName(PackageNamespace("spark.components.supportClasses"),"GroupBase")
         setlocal3
         getlocal3
         iftrue ofs005a
         returnvoid
         ofs005a:
         getlocal3
         getproperty QName(PackageNamespace(""),"numElements")
         convert_i
         setlocal 4
         pushbyte 0
         convert_d
         setlocal 5
         pushbyte 0
         convert_d
         setlocal 6
         pushbyte 0
         setlocal 7
         jump ofs042b
         ofs0073:
         label
         getlocal3
         getlocal 7
         callproperty QName(PackageNamespace(""),"getElementAt"), 1
         coerce QName(PackageNamespace("mx.core"),"ILayoutElement")
         dup
         setlocal 8
         not
         dup
         iftrue ofs008e
         pop
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"includeInLayout")
         not
         ofs008e:
         iffalse ofs0096
         jump ofs0429
         ofs0096:
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"horizontalCenter")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 9
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"verticalCenter")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 10
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"baseline")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 11
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"left")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 12
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"right")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 13
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"top")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 14
         getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutElementHelper")
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"bottom")
         callproperty QName(PackageNamespace(""),"parseConstraintValue"), 1
         convert_d
         setlocal 15
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"percentWidth")
         convert_d
         setlocal 16
         getlocal 8
         getproperty QName(Namespace("mx.core:ILayoutElement"),"percentHeight")
         convert_d
         setlocal 17
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal 18
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal 19
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal 20
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal 21
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 16
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs01a5
         getlocal1
         convert_d
         setlocal 26
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 12
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs014d
         getlocal 26
         getlocal 12
         subtract
         convert_d
         setlocal 26
         ofs014d:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 13
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0162
         getlocal 26
         getlocal 13
         subtract
         convert_d
         setlocal 26
         ofs0162:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 26
         getlex QName(PackageNamespace(""),"Math")
         getlocal 16
         pushdouble 0.01
         multiply
         pushbyte 1
         callproperty QName(PackageNamespace(""),"min"), 2
         multiply
         callproperty QName(PackageNamespace(""),"round"), 1
         convert_d
         setlocal 20
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMaxBoundsWidth"), 0
         findpropstrict QName(PrivateNamespace(null,"64"),"maxSizeToFitIn")
         getlocal1
         getlocal 9
         getlocal 12
         getlocal 13
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getLayoutBoundsX"), 0
         callproperty QName(PrivateNamespace(null,"64"),"maxSizeToFitIn"), 5
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 18
         jump ofs01cd
         ofs01a5:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 12
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs01bf
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 13
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs01bf:
         iffalse ofs01cd
         getlocal1
         getlocal 13
         subtract
         getlocal 12
         subtract
         convert_d
         setlocal 20
         ofs01cd:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 17
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs024b
         getlocal2
         convert_d
         setlocal 27
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 14
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs01f3
         getlocal 27
         getlocal 14
         subtract
         convert_d
         setlocal 27
         ofs01f3:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 15
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0208
         getlocal 27
         getlocal 15
         subtract
         convert_d
         setlocal 27
         ofs0208:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 27
         getlex QName(PackageNamespace(""),"Math")
         getlocal 17
         pushdouble 0.01
         multiply
         pushbyte 1
         callproperty QName(PackageNamespace(""),"min"), 2
         multiply
         callproperty QName(PackageNamespace(""),"round"), 1
         convert_d
         setlocal 21
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMaxBoundsHeight"), 0
         findpropstrict QName(PrivateNamespace(null,"64"),"maxSizeToFitIn")
         getlocal2
         getlocal 10
         getlocal 14
         getlocal 15
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getLayoutBoundsY"), 0
         callproperty QName(PrivateNamespace(null,"64"),"maxSizeToFitIn"), 5
         callproperty QName(PackageNamespace(""),"min"), 2
         convert_d
         setlocal 19
         jump ofs0273
         ofs024b:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 14
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         dup
         iffalse ofs0265
         pop
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 15
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         not
         ofs0265:
         iffalse ofs0273
         getlocal2
         getlocal 15
         subtract
         getlocal 14
         subtract
         convert_d
         setlocal 21
         ofs0273:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 20
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs02b1
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 18
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs0296
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMaxBoundsWidth"), 0
         convert_d
         setlocal 18
         ofs0296:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMinBoundsWidth"), 0
         getlex QName(PackageNamespace(""),"Math")
         getlocal 18
         getlocal 20
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 20
         ofs02b1:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 21
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs02ef
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 19
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iffalse ofs02d4
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMaxBoundsHeight"), 0
         convert_d
         setlocal 19
         ofs02d4:
         getlex QName(PackageNamespace(""),"Math")
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getMinBoundsHeight"), 0
         getlex QName(PackageNamespace(""),"Math")
         getlocal 19
         getlocal 21
         callproperty QName(PackageNamespace(""),"min"), 2
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 21
         ofs02ef:
         getlocal 8
         getlocal 20
         getlocal 21
         callpropvoid QName(Namespace("mx.core:ILayoutElement"),"setLayoutBoundsSize"), 2
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getLayoutBoundsWidth"), 0
         convert_d
         setlocal 22
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getLayoutBoundsHeight"), 0
         convert_d
         setlocal 23
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal 24
         getlex QName(PackageNamespace(""),"NaN")
         convert_d
         setlocal 25
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 9
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs033c
         getlex QName(PackageNamespace(""),"Math")
         getlocal1
         getlocal 22
         subtract
         pushbyte 2
         divide
         getlocal 9
         add
         callproperty QName(PackageNamespace(""),"round"), 1
         convert_d
         setlocal 24
         jump ofs0376
         ofs033c:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 12
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs0352
         getlocal 12
         convert_d
         setlocal 24
         jump ofs0376
         ofs0352:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 13
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs036d
         getlocal1
         getlocal 22
         subtract
         getlocal 13
         subtract
         convert_d
         setlocal 24
         jump ofs0376
         ofs036d:
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getLayoutBoundsX"), 0
         convert_d
         setlocal 24
         ofs0376:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 10
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs039b
         getlex QName(PackageNamespace(""),"Math")
         getlocal2
         getlocal 23
         subtract
         pushbyte 2
         divide
         getlocal 10
         add
         callproperty QName(PackageNamespace(""),"round"), 1
         convert_d
         setlocal 25
         jump ofs03fd
         ofs039b:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 11
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs03c3
         getlex QName(PackageNamespace(""),"Math")
         getlocal 11
         findpropstrict QName(PackageNamespace("mx.core"),"IVisualElement")
         getlocal 8
         callproperty QName(PackageNamespace("mx.core"),"IVisualElement"), 1
         getproperty QName(Namespace("mx.core:ILayoutElement"),"baselinePosition")
         subtract
         callproperty QName(PackageNamespace(""),"round"), 1
         convert_d
         setlocal 25
         jump ofs03fd
         ofs03c3:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 14
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs03d9
         getlocal 14
         convert_d
         setlocal 25
         jump ofs03fd
         ofs03d9:
         findpropstrict QName(PackageNamespace(""),"isNaN")
         getlocal 15
         callproperty QName(PackageNamespace(""),"isNaN"), 1
         iftrue ofs03f4
         getlocal2
         getlocal 23
         subtract
         getlocal 15
         subtract
         convert_d
         setlocal 25
         jump ofs03fd
         ofs03f4:
         getlocal 8
         callproperty QName(Namespace("mx.core:ILayoutElement"),"getLayoutBoundsY"), 0
         convert_d
         setlocal 25
         ofs03fd:
         getlocal 8
         getlocal 24
         getlocal 25
         callpropvoid QName(Namespace("mx.core:ILayoutElement"),"setLayoutBoundsPosition"), 2
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         getlocal 24
         getlocal 22
         add
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 5
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         getlocal 25
         getlocal 23
         add
         callproperty QName(PackageNamespace(""),"max"), 2
         convert_d
         setlocal 6
         ofs0429:
         inclocal_i 7
         ofs042b:
         getlocal 7
         getlocal 4
         iflt ofs0073
         getlocal3
         getlex QName(PackageNamespace(""),"Math")
         getlocal 5
         callproperty QName(PackageNamespace(""),"ceil"), 1
         getlex QName(PackageNamespace(""),"Math")
         getlocal 6
         callproperty QName(PackageNamespace(""),"ceil"), 1
         callpropvoid QName(PackageNamespace(""),"setContentSize"), 2
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 5

code
getlocal0
pushscope
findpropstrict Multiname("BasicLayout",[PackageNamespace("spark.layouts")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("mx.utils"),"OnDemandEventDispatcher")
pushscope
getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutBase")
pushscope
getlex QName(PackageNamespace("spark.layouts.supportClasses"),"LayoutBase")
newclass 218
popscope
popscope
popscope
initproperty QName(PackageNamespace("spark.layouts"),"BasicLayout")
returnvoid
end ; code
end ; body
end ; method

