package
{
   import org.flixel.FlxG;
   
   public class EnemyBulletRotaryPea extends EnemyBullet
   {
      private static const WIDTH:int = 24;
      
      private static const HEIGHT:int = 24;
      
      private static const FIREPOWER:int = 2;
      
      private static const DEFAULT_LIFETIME:Number = 3;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 8
      maxscopedepth 9
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"153"),"WIDTH")
      pushbyte 24
      initproperty QName(PrivateNamespace(null,"153"),"WIDTH")
      findproperty QName(PrivateNamespace(null,"153"),"HEIGHT")
      pushbyte 24
      initproperty QName(PrivateNamespace(null,"153"),"HEIGHT")
      findproperty QName(PrivateNamespace(null,"153"),"FIREPOWER")
      pushbyte 2
      initproperty QName(PrivateNamespace(null,"153"),"FIREPOWER")
      findproperty QName(PrivateNamespace(null,"153"),"DEFAULT_LIFETIME")
      pushbyte 3
      initproperty QName(PrivateNamespace(null,"153"),"DEFAULT_LIFETIME")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var _elapsed:Number = 0;
      
      private var _originX:Number = 0;
      
      private var _originY:Number = 0;
      
      private var _velocityR:Number = 0;
      
      private var _velocityTheta:Number = 0;
      
      private var _offsetTheta:Number = 0;
      
      public function EnemyBulletRotaryPea()
      {
         method
         name null
         returns null
         
         body
         maxstack 6
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlex QName(PrivateNamespace(null,"153"),"FIREPOWER")
         constructsuper 1
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemyBulletDonut")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"153"),"WIDTH")
         getlex QName(PrivateNamespace(null,"153"),"HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"153"),"WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"153"),"HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal0
         getlex QName(PackageNamespace(""),"x")
         initproperty QName(PrivateNamespace(null,"153"),"_originX")
         getlocal0
         getlex QName(PackageNamespace(""),"y")
         initproperty QName(PrivateNamespace(null,"153"),"_originY")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         pushbyte 1
         pushbyte 2
         pushbyte 3
         newarray 4
         pushbyte 30
         pushtrue
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function shootRotary(param1:int, param2:int, param3:Number, param4:Number, param5:Number) : void
      {
         trait method QName(PackageNamespace(""),"shootRotary")
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 6
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal1
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PackageNamespace(""),"width")
         pushbyte 2
         divide
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal1
         getlocal2
         pushbyte 0
         dup
         getlex QName(PrivateNamespace(null,"153"),"DEFAULT_LIFETIME")
         callsupervoid QName(PackageNamespace(""),"shoot"), 5
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         getlocal0
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"153"),"_elapsed")
         getlocal0
         getlocal1
         setproperty QName(PrivateNamespace(null,"153"),"_originX")
         getlocal0
         getlocal2
         setproperty QName(PrivateNamespace(null,"153"),"_originY")
         getlocal0
         getlocal3
         setproperty QName(PrivateNamespace(null,"153"),"_velocityR")
         getlocal0
         getlocal 4
         setproperty QName(PrivateNamespace(null,"153"),"_velocityTheta")
         getlocal0
         getlocal 5
         setproperty QName(PrivateNamespace(null,"153"),"_offsetTheta")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitPlayer(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"hitPlayer")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         callsupervoid QName(PackageNamespace(""),"hitPlayer"), 1
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function collideTerrain() : Boolean
      {
         trait method QName(PackageNamespace(""),"collideTerrain")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushtrue
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0013
         returnvoid
         ofs0013:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         setproperty QName(PrivateNamespace(null,"153"),"_elapsed")
         findproperty QName(PackageNamespace(""),"x")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_originX")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_velocityR")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_elapsed")
         multiply
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_velocityTheta")
         multiply
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_offsetTheta")
         add
         callproperty QName(PackageNamespace(""),"cos"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_originY")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_velocityR")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_elapsed")
         multiply
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_elapsed")
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_velocityTheta")
         multiply
         getlocal0
         getproperty QName(PrivateNamespace(null,"153"),"_offsetTheta")
         add
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iftrue ofs008d
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs008d:
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"MaxX")
         pushshort 250
         add
         greaterthan
         dup
         iftrue ofs00b3
         pop
         getlex QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"width")
         add
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"MinX")
         pushshort 250
         subtract
         lessthan
         ofs00b3:
         dup
         iftrue ofs00c7
         pop
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"MaxY")
         pushshort 250
         add
         greaterthan
         ofs00c7:
         dup
         iftrue ofs00df
         pop
         getlex QName(PackageNamespace(""),"y")
         getlex QName(PackageNamespace(""),"height")
         add
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"MinY")
         pushshort 250
         subtract
         lessthan
         ofs00df:
         iffalse ofs00ea
         findpropstrict QName(PackageNamespace(""),"kill")
         callpropvoid QName(PackageNamespace(""),"kill"), 0
         ofs00ea:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 8

code
getlocal0
pushscope
findpropstrict Multiname("EnemyBulletRotaryPea",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace(""),"EnemyBullet")
pushscope
getlex QName(PackageNamespace(""),"EnemyBullet")
newclass 373
popscope
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"EnemyBulletRotaryPea")
returnvoid
end ; code
end ; body
end ; method

