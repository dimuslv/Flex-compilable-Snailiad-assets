package
{
   import org.flixel.FlxG;
   import org.flixel.FlxObject;
   import org.flixel.FlxU;
   
   public class EnemyBabyfish2 extends Enemy
   {
      private static const IMG_WIDTH:int = 13;
      
      private static const IMG_HEIGHT:int = 10;
      
      private static const IMG_OFS_X:int = 0;
      
      private static const IMG_OFS_Y:int = 0;
      
      private static const MAX_HP:int = 40;
      
      private static const DEFENSE:int = 0;
      
      private static const OFFENSE:int = 0;
      
      private static const MOVE_TIMEOUT:Number = 1.7;
      
      private static const SPEED:Number = 80;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 8
      maxscopedepth 9
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"77"),"IMG_WIDTH")
      pushbyte 13
      initproperty QName(PrivateNamespace(null,"77"),"IMG_WIDTH")
      findproperty QName(PrivateNamespace(null,"77"),"IMG_HEIGHT")
      pushbyte 10
      initproperty QName(PrivateNamespace(null,"77"),"IMG_HEIGHT")
      findproperty QName(PrivateNamespace(null,"77"),"IMG_OFS_X")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"77"),"IMG_OFS_X")
      findproperty QName(PrivateNamespace(null,"77"),"IMG_OFS_Y")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"77"),"IMG_OFS_Y")
      findproperty QName(PrivateNamespace(null,"77"),"MAX_HP")
      pushbyte 40
      initproperty QName(PrivateNamespace(null,"77"),"MAX_HP")
      findproperty QName(PrivateNamespace(null,"77"),"DEFENSE")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"77"),"DEFENSE")
      findproperty QName(PrivateNamespace(null,"77"),"OFFENSE")
      pushbyte 0
      initproperty QName(PrivateNamespace(null,"77"),"OFFENSE")
      findproperty QName(PrivateNamespace(null,"77"),"MOVE_TIMEOUT")
      pushdouble 1.7
      initproperty QName(PrivateNamespace(null,"77"),"MOVE_TIMEOUT")
      findproperty QName(PrivateNamespace(null,"77"),"SPEED")
      pushbyte 80
      initproperty QName(PrivateNamespace(null,"77"),"SPEED")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var elapsed:Number = 0;
      
      private var moveTimeout:Number = 0;
      
      private var originY:Number = 0;
      
      public function EnemyBabyfish2(param1:int, param2:int)
      {
         method
         name null
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"int")
         returns null
         
         body
         maxstack 21
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         getlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"77"),"MAX_HP")
         getlex QName(PrivateNamespace(null,"77"),"DEFENSE")
         getlex QName(PrivateNamespace(null,"77"),"OFFENSE")
         constructsuper 5
         findpropstrict QName(PackageNamespace(""),"loadGraphic")
         getlex QName(PackageNamespace(""),"Art")
         getproperty QName(PackageNamespace(""),"EnemyBabyfish")
         pushtrue
         pushtrue
         getlex QName(PrivateNamespace(null,"77"),"IMG_WIDTH")
         getlex QName(PrivateNamespace(null,"77"),"IMG_HEIGHT")
         callpropvoid QName(PackageNamespace(""),"loadGraphic"), 5
         findproperty QName(PackageNamespace(""),"width")
         getlex QName(PrivateNamespace(null,"77"),"IMG_WIDTH")
         initproperty QName(PackageNamespace(""),"width")
         findproperty QName(PackageNamespace(""),"height")
         getlex QName(PrivateNamespace(null,"77"),"IMG_HEIGHT")
         initproperty QName(PackageNamespace(""),"height")
         getlocal1
         getlex QName(PrivateNamespace(null,"77"),"IMG_OFS_X")
         subtract
         convert_i
         setlocal1
         getlocal2
         getlex QName(PrivateNamespace(null,"77"),"IMG_OFS_Y")
         subtract
         convert_i
         setlocal2
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"77"),"originY")
         getlocal0
         getlex QName(PrivateNamespace(null,"77"),"MOVE_TIMEOUT")
         pushbyte 4
         divide
         initproperty QName(PrivateNamespace(null,"77"),"moveTimeout")
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "normal"
         pushbyte 0
         newarray 1
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 2
         findpropstrict QName(PackageNamespace(""),"addAnimation")
         pushstring "swim"
         pushbyte 2
         pushbyte 3
         pushbyte 2
         pushbyte 3
         pushbyte 2
         pushbyte 3
         pushbyte 2
         dup
         pushbyte 3
         dup
         pushbyte 2
         dup
         dup
         pushbyte 3
         dup
         dup
         pushbyte 3
         dup
         pushbyte 2
         newarray 19
         pushbyte 12
         pushfalse
         callpropvoid QName(PackageNamespace(""),"addAnimation"), 4
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "swim"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         getlex QName(PackageNamespace(""),"drag")
         getlex QName(PrivateNamespace(null,"77"),"SPEED")
         pushdouble 0.6
         multiply
         setproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"drag")
         getlex QName(PrivateNamespace(null,"77"),"SPEED")
         pushdouble 0.6
         multiply
         setproperty QName(PackageNamespace(""),"y")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hitSide(param1:FlxObject, param2:Number) : void
      {
         trait method QName(PackageNamespace(""),"hitSide")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace("org.flixel"),"FlxObject")
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 3
         localcount 3
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function touch(param1:Player) : void
      {
         trait method QName(PackageNamespace(""),"touch")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Player")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 6
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0013
         returnvoid
         ofs0013:
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"77"),"elapsed")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         add
         setproperty QName(PrivateNamespace(null,"77"),"elapsed")
         findproperty QName(PackageNamespace(""),"y")
         getlocal0
         getproperty QName(PrivateNamespace(null,"77"),"originY")
         pushbyte 4
         getlex QName(PackageNamespace(""),"Math")
         getlocal0
         getproperty QName(PrivateNamespace(null,"77"),"elapsed")
         pushbyte 2
         multiply
         callproperty QName(PackageNamespace(""),"sin"), 1
         multiply
         add
         initproperty QName(PackageNamespace(""),"y")
         findpropstrict QName(PackageNamespace(""),"onScreen")
         callproperty QName(PackageNamespace(""),"onScreen"), 0
         iffalse ofs00b8
         getlocal0
         getlocal0
         getproperty QName(PrivateNamespace(null,"77"),"moveTimeout")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"77"),"moveTimeout")
         getlocal0
         getproperty QName(PrivateNamespace(null,"77"),"moveTimeout")
         pushbyte 0
         ifnlt ofs00b8
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         getproperty QName(PackageNamespace(""),"x")
         getlex QName(PackageNamespace(""),"x")
         ifnlt ofs007b
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PrivateNamespace(null,"77"),"SPEED")
         negate
         setproperty QName(PackageNamespace(""),"x")
         jump ofs0083
         ofs007b:
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PrivateNamespace(null,"77"),"SPEED")
         setproperty QName(PackageNamespace(""),"x")
         ofs0083:
         getlex QName(PackageNamespace("org.flixel"),"FlxU")
         callproperty QName(PackageNamespace(""),"random"), 0
         pushdouble 0.8
         ifngt ofs009d
         getlex QName(PackageNamespace(""),"velocity")
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte -1
         multiply
         setproperty QName(PackageNamespace(""),"x")
         ofs009d:
         getlocal0
         getlex QName(PrivateNamespace(null,"77"),"MOVE_TIMEOUT")
         setproperty QName(PrivateNamespace(null,"77"),"moveTimeout")
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "normal"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         findpropstrict QName(PackageNamespace(""),"play")
         pushstring "swim"
         callpropvoid QName(PackageNamespace(""),"play"), 1
         ofs00b8:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifnlt ofs00cc
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"LEFT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs00cc:
         getlex QName(PackageNamespace(""),"velocity")
         getproperty QName(PackageNamespace(""),"x")
         pushbyte 0
         ifngt ofs00e0
         findproperty QName(PackageNamespace(""),"facing")
         getlex QName(PackageNamespace(""),"RIGHT")
         initproperty QName(PackageNamespace(""),"facing")
         ofs00e0:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function hurt(param1:Number) : void
      {
         trait method QName(PackageNamespace(""),"hurt")
         flag OVERRIDE
         dispid 0
         method
         name null
         param QName(PackageNamespace(""),"Number")
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 1
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 8

code
getlocal0
pushscope
findpropstrict Multiname("EnemyBabyfish2",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
pushscope
getlex QName(PackageNamespace(""),"Enemy")
newclass 147
popscope
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"EnemyBabyfish2")
returnvoid
end ; code
end ; body
end ; method

