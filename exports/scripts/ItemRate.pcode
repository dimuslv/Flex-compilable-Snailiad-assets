package
{
   import org.flixel.*;
   
   public class ItemRate extends FlxText
   {
      private static var _fadeOutStart:Number;
      
      private static var _fadeOutEnd:Number;
      
      private static var _colorNum:Number;
      
      private static const FADEOUT_START:Number = 1.8;
      
      private static const FADEOUT_END:Number = 2.5;
      
      private static const _colors:Array;
      
      method
      name null
      returns null
      
      body
      maxstack 5
      localcount 1
      initscopedepth 8
      maxscopedepth 9
      
      code
      getlocal0
      pushscope
      findproperty QName(PrivateNamespace(null,"307"),"FADEOUT_START")
      pushdouble 1.8
      initproperty QName(PrivateNamespace(null,"307"),"FADEOUT_START")
      findproperty QName(PrivateNamespace(null,"307"),"FADEOUT_END")
      pushdouble 2.5
      initproperty QName(PrivateNamespace(null,"307"),"FADEOUT_END")
      findproperty QName(PrivateNamespace(null,"307"),"_colors")
      pushint 16040160
      pushint 16570500
      pushint 11595992
      pushint 12370116
      newarray 4
      initproperty QName(PrivateNamespace(null,"307"),"_colors")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      public function ItemRate()
      {
         method
         name null
         returns null
         
         body
         maxstack 4
         localcount 2
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlocal0
         pushbyte 0
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"height")
         pushbyte 2
         divide
         pushbyte 64
         add
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"width")
         constructsuper 3
         findproperty QName(PackageNamespace(""),"font")
         getlex QName(PackageNamespace(""),"Fonts")
         getproperty QName(PackageNamespace(""),"normal")
         initproperty QName(PackageNamespace(""),"font")
         findproperty QName(PackageNamespace(""),"size")
         pushbyte 10
         initproperty QName(PackageNamespace(""),"size")
         findproperty QName(PackageNamespace(""),"color")
         pushint 16040160
         initproperty QName(PackageNamespace(""),"color")
         findproperty QName(PrivateNamespace(null,"307"),"_colorNum")
         pushbyte 0
         setproperty QName(PrivateNamespace(null,"307"),"_colorNum")
         findproperty QName(PackageNamespace(""),"shadow")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"shadow")
         findproperty QName(PackageNamespace(""),"alignment")
         pushstring "center"
         initproperty QName(PackageNamespace(""),"alignment")
         getlex QName(PackageNamespace(""),"scrollFactor")
         getlex QName(PackageNamespace(""),"scrollFactor")
         pushbyte 0
         dup
         setlocal1
         setproperty QName(PackageNamespace(""),"y")
         getlocal1
         kill 1
         setproperty QName(PackageNamespace(""),"x")
         findproperty QName(PackageNamespace(""),"outline")
         pushtrue
         initproperty QName(PackageNamespace(""),"outline")
         findproperty QName(PackageNamespace(""),"outlineColor")
         pushdouble 4278190080
         initproperty QName(PackageNamespace(""),"outlineColor")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0086
         findproperty QName(PackageNamespace(""),"visible")
         pushfalse
         initproperty QName(PackageNamespace(""),"visible")
         jump ofs008d
         ofs0086:
         findproperty QName(PackageNamespace(""),"visible")
         pushtrue
         initproperty QName(PackageNamespace(""),"visible")
         ofs008d:
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function setRate(param1:int, param2:Number = 0) : void
      {
         trait method QName(PackageNamespace(""),"setRate")
         dispid 0
         method
         name null
         flag HAS_OPTIONAL
         param QName(PackageNamespace(""),"int")
         param QName(PackageNamespace(""),"Number")
         optional Integer(0)
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 4
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         pushnull
         coerce QName(PackageNamespace(""),"SaveData")
         setlocal3
         findproperty QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         getlex QName(PrivateNamespace(null,"307"),"FADEOUT_START")
         getlocal2
         add
         setproperty QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         findproperty QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"307"),"FADEOUT_END")
         getlocal2
         add
         setproperty QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"bossRush")
         iffalse ofs0028
         returnvoid
         ofs0028:
         findproperty QName(PackageNamespace(""),"text")
         pushstring "ITEM COLLECTION "
         getlocal1
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring "% COMPLETE!"
         add
         initproperty QName(PackageNamespace(""),"text")
         getlocal1
         pushbyte 100
         ifne ofs00ce
         getlex QName(PackageNamespace(""),"NgMedal")
         callpropvoid QName(PackageNamespace(""),"unlockTreasureHunter"), 0
         findproperty QName(PackageNamespace(""),"text")
         getlex QName(PackageNamespace(""),"text")
         pushstring "\nFIND THE SHRINE OF IRIS!"
         add
         initproperty QName(PackageNamespace(""),"text")
         findproperty QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         getlex QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         pushbyte 6
         add
         setproperty QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         findproperty QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         pushbyte 6
         add
         setproperty QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         findproperty QName(PackageNamespace(""),"size")
         pushbyte 20
         initproperty QName(PackageNamespace(""),"size")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"player")
         pushtrue
         setproperty QName(PackageNamespace(""),"hasWonBossRush")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"saveData")
         coerce QName(PackageNamespace(""),"SaveData")
         setlocal3
         getlocal3
         callpropvoid QName(PackageNamespace(""),"loadAll"), 0
         getlocal3
         pushstring "hasWonBossRush"
         callproperty QName(PackageNamespace(""),"isVarTrue"), 1
         iftrue ofs00c5
         getlocal3
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PrivateNamespace(null,"307"),PackageNamespace("org.flixel"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"475"),PackageInternalNs(""),ProtectedNamespace("ItemRate"),StaticProtectedNs("ItemRate"),StaticProtectedNs("org.flixel:FlxText"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         deleteproperty Multiname("hasWonBossRush",[PrivateNamespace(null,"307"),PackageNamespace("org.flixel"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"475"),PackageInternalNs(""),ProtectedNamespace("ItemRate"),StaticProtectedNs("ItemRate"),StaticProtectedNs("org.flixel:FlxText"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         pop
         getlocal3
         getproperty QName(PackageNamespace(""),"xml")
         getproperty Multiname("vars",[PrivateNamespace(null,"307"),PackageNamespace("org.flixel"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"475"),PackageInternalNs(""),ProtectedNamespace("ItemRate"),StaticProtectedNs("ItemRate"),StaticProtectedNs("org.flixel:FlxText"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         getlex QName(PackageNamespace(""),"XML")
         pushstring "<hasWonBossRush>true</hasWonBossRush>"
         construct 1
         callpropvoid Multiname("appendChild",[PrivateNamespace(null,"307"),PackageNamespace("org.flixel"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"475"),PackageInternalNs(""),ProtectedNamespace("ItemRate"),StaticProtectedNs("ItemRate"),StaticProtectedNs("org.flixel:FlxText"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")]), 1
         findproperty QName(PackageNamespace(""),"text")
         getlex QName(PackageNamespace(""),"text")
         pushstring "\n(SLUG MODE UNLOCKED!)"
         add
         initproperty QName(PackageNamespace(""),"text")
         ofs00c5:
         getlocal3
         callpropvoid QName(PackageNamespace(""),"saveAll"), 0
         jump ofs0120
         ofs00ce:
         findproperty QName(PackageNamespace(""),"text")
         getlex QName(PackageNamespace(""),"text")
         pushstring "  GAME SAVED."
         add
         initproperty QName(PackageNamespace(""),"text")
         findpropstrict QName(PackageNamespace(""),"Boolean")
         pushbyte 0
         callproperty QName(PackageNamespace(""),"Boolean"), 1
         convert_b
         dup
         iffalse ofs00f3
         pop
         getlex QName(PackageNamespace(""),"PlayState")
         pushbyte 4
         callproperty QName(PackageNamespace(""),"isBossDead"), 1
         convert_b
         ofs00f3:
         iffalse ofs0120
         findproperty QName(PackageNamespace(""),"text")
         getlex QName(PackageNamespace(""),"text")
         pushstring "\n(ITEMS FOUND IN CURRENT AREA: "
         getlex QName(PackageNamespace(""),"PlayState")
         callproperty QName(PackageNamespace(""),"gottenItemsInArea"), 0
         add
         pushstring "/"
         add
         getlex QName(PackageNamespace(""),"PlayState")
         callproperty QName(PackageNamespace(""),"totalItemsInArea"), 0
         callproperty QName(Namespace("http://adobe.com/AS3/2006/builtin"),"toString"), 0
         add
         pushstring ")"
         add
         add
         initproperty QName(PackageNamespace(""),"text")
         ofs0120:
         findproperty QName(PackageNamespace(""),"alpha")
         pushbyte 1
         initproperty QName(PackageNamespace(""),"alpha")
         findproperty QName(PackageNamespace(""),"active")
         pushtrue
         initproperty QName(PackageNamespace(""),"active")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      override public function update() : void
      {
         trait method QName(PackageNamespace(""),"update")
         flag OVERRIDE
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"void")
         
         body
         maxstack 4
         localcount 1
         initscopedepth 9
         maxscopedepth 10
         
         code
         getlocal0
         pushscope
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"realState")
         getlex QName(PackageNamespace(""),"PlayState")
         getproperty QName(PackageNamespace(""),"STATE_GAME")
         ifeq ofs0013
         returnvoid
         ofs0013:
         findproperty QName(PrivateNamespace(null,"307"),"_colorNum")
         getlex QName(PrivateNamespace(null,"307"),"_colorNum")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         pushbyte 30
         multiply
         add
         setproperty QName(PrivateNamespace(null,"307"),"_colorNum")
         findproperty QName(PackageNamespace(""),"color")
         getlex QName(PrivateNamespace(null,"307"),"_colors")
         findpropstrict QName(PackageNamespace(""),"int")
         getlex QName(PrivateNamespace(null,"307"),"_colorNum")
         callproperty QName(PackageNamespace(""),"int"), 1
         getlex QName(PrivateNamespace(null,"307"),"_colors")
         getproperty QName(PackageNamespace(""),"length")
         modulo
         getproperty MultinameL([PrivateNamespace(null,"307"),PackageNamespace("org.flixel"),PackageNamespace(""),Namespace("http://adobe.com/AS3/2006/builtin"),PrivateNamespace(null,"475"),PackageInternalNs(""),ProtectedNamespace("ItemRate"),StaticProtectedNs("ItemRate"),StaticProtectedNs("org.flixel:FlxText"),StaticProtectedNs("org.flixel:FlxSprite"),StaticProtectedNs("org.flixel:FlxObject"),StaticProtectedNs("org.flixel:FlxRect"),StaticProtectedNs("org.flixel:FlxPoint"),StaticProtectedNs("Object")])
         initproperty QName(PackageNamespace(""),"color")
         findproperty QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         getlex QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         findproperty QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         getlex QName(PackageNamespace("org.flixel"),"FlxG")
         getproperty QName(PackageNamespace(""),"elapsed")
         subtract
         setproperty QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         pushbyte 0
         ifnlt ofs007d
         findproperty QName(PackageNamespace(""),"text")
         pushstring ""
         initproperty QName(PackageNamespace(""),"text")
         findproperty QName(PackageNamespace(""),"active")
         pushfalse
         initproperty QName(PackageNamespace(""),"active")
         jump ofs0097
         ofs007d:
         getlex QName(PrivateNamespace(null,"307"),"_fadeOutStart")
         pushbyte 0
         ifnlt ofs0097
         findproperty QName(PackageNamespace(""),"alpha")
         getlex QName(PrivateNamespace(null,"307"),"_fadeOutEnd")
         getlex QName(PrivateNamespace(null,"307"),"FADEOUT_END")
         getlex QName(PrivateNamespace(null,"307"),"FADEOUT_START")
         subtract
         divide
         initproperty QName(PackageNamespace(""),"alpha")
         ofs0097:
         getlocal0
         callsupervoid QName(PackageNamespace(""),"update"), 0
         returnvoid
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 8

code
getlocal0
pushscope
findpropstrict Multiname("ItemRate",[PackageNamespace("")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxPoint")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxRect")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxObject")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxSprite")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxText")
pushscope
getlex QName(PackageNamespace("org.flixel"),"FlxText")
newclass 381
popscope
popscope
popscope
popscope
popscope
popscope
initproperty QName(PackageNamespace(""),"ItemRate")
returnvoid
end ; code
end ; body
end ; method

