package com.newgrounds
{
   public class SaveKey
   {
      public static const TYPE_FLOAT:uint = 1;
      
      public static const TYPE_INTEGER:uint = 2;
      
      public static const TYPE_STRING:uint = 3;
      
      public static const TYPE_BOOLEAN:uint = 4;
      
      method
      name null
      returns null
      
      body
      maxstack 2
      localcount 1
      initscopedepth 3
      maxscopedepth 4
      
      code
      getlocal0
      pushscope
      findproperty QName(PackageNamespace(""),"TYPE_FLOAT")
      pushbyte 1
      initproperty QName(PackageNamespace(""),"TYPE_FLOAT")
      findproperty QName(PackageNamespace(""),"TYPE_INTEGER")
      pushbyte 2
      initproperty QName(PackageNamespace(""),"TYPE_INTEGER")
      findproperty QName(PackageNamespace(""),"TYPE_STRING")
      pushbyte 3
      initproperty QName(PackageNamespace(""),"TYPE_STRING")
      findproperty QName(PackageNamespace(""),"TYPE_BOOLEAN")
      pushbyte 4
      initproperty QName(PackageNamespace(""),"TYPE_BOOLEAN")
      returnvoid
      end ; code
      end ; body
      end ; method
      
      private var _id:uint;
      
      private var _name:String;
      
      private var _type:uint;
      
      public function SaveKey(param1:uint, param2:String, param3:uint)
      {
         method
         name null
         param QName(PackageNamespace(""),"uint")
         param QName(PackageNamespace(""),"String")
         param QName(PackageNamespace(""),"uint")
         returns null
         
         body
         maxstack 2
         localcount 4
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         constructsuper 0
         getlocal0
         getlocal1
         initproperty QName(PrivateNamespace(null,"16"),"_id")
         getlocal0
         getlocal2
         initproperty QName(PrivateNamespace(null,"16"),"_name")
         getlocal0
         getlocal3
         initproperty QName(PrivateNamespace(null,"16"),"_type")
         returnvoid
         end ; code
         end ; body
         end ; method
      }
      
      public function get id() : uint
      {
         trait getter QName(PackageNamespace(""),"id")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_id")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get name() : String
      {
         trait getter QName(PackageNamespace(""),"name")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_name")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get type() : uint
      {
         trait getter QName(PackageNamespace(""),"type")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_type")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get key_id() : uint
      {
         trait getter QName(PackageNamespace(""),"key_id")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_id")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get key_name() : String
      {
         trait getter QName(PackageNamespace(""),"key_name")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_name")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function get key_type() : uint
      {
         trait getter QName(PackageNamespace(""),"key_type")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"uint")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_type")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function isValueValid(param1:*) : Boolean
      {
         trait method QName(PackageNamespace(""),"isValueValid")
         dispid 0
         method
         name null
         param null
         returns QName(PackageNamespace(""),"Boolean")
         
         body
         maxstack 2
         localcount 2
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_type")
         getlex QName(PackageNamespace(""),"TYPE_INTEGER")
         ifne ofs001c
         getlocal1
         getlex QName(PackageNamespace(""),"int")
         istypelate
         dup
         iftrue ofs001b
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"uint")
         istypelate
         ofs001b:
         returnvalue
         ofs001c:
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_type")
         getlex QName(PackageNamespace(""),"TYPE_FLOAT")
         ifne ofs0040
         getlocal1
         getlex QName(PackageNamespace(""),"int")
         istypelate
         dup
         iftrue ofs0035
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"uint")
         istypelate
         ofs0035:
         dup
         iftrue ofs003f
         pop
         getlocal1
         getlex QName(PackageNamespace(""),"Number")
         istypelate
         ofs003f:
         returnvalue
         ofs0040:
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_type")
         getlex QName(PackageNamespace(""),"TYPE_STRING")
         ifne ofs0050
         getlocal1
         getlex QName(PackageNamespace(""),"String")
         istypelate
         returnvalue
         ofs0050:
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_type")
         getlex QName(PackageNamespace(""),"TYPE_BOOLEAN")
         ifne ofs007e
         getlocal1
         getlex QName(PackageNamespace(""),"Boolean")
         istypelate
         dup
         iftrue ofs0069
         pop
         getlocal1
         pushbyte 0
         strictequals
         ofs0069:
         dup
         iftrue ofs0073
         pop
         getlocal1
         pushbyte 1
         strictequals
         ofs0073:
         dup
         iftrue ofs007d
         pop
         getlocal1
         pushstring ""
         equals
         ofs007d:
         returnvalue
         ofs007e:
         pushfalse
         returnvalue
         end ; code
         end ; body
         end ; method
      }
      
      public function toString() : String
      {
         trait method QName(PackageNamespace(""),"toString")
         dispid 0
         method
         name null
         returns QName(PackageNamespace(""),"String")
         
         body
         maxstack 1
         localcount 1
         initscopedepth 4
         maxscopedepth 5
         
         code
         getlocal0
         pushscope
         getlocal0
         getproperty QName(PrivateNamespace(null,"16"),"_name")
         returnvalue
         end ; code
         end ; body
         end ; method
      }
   }
}

method
name null
returns null

body
maxstack 2
localcount 1
initscopedepth 1
maxscopedepth 3

code
getlocal0
pushscope
findpropstrict Multiname("SaveKey",[PackageNamespace("com.newgrounds")])
getlex QName(PackageNamespace(""),"Object")
pushscope
getlex QName(PackageNamespace(""),"Object")
newclass 32
popscope
initproperty QName(PackageNamespace("com.newgrounds"),"SaveKey")
returnvoid
end ; code
end ; body
end ; method

